{"id":2922,"date":"2020-06-13T12:14:06","date_gmt":"2020-06-13T12:14:06","guid":{"rendered":"https:\/\/coderslegacy.com\/?page_id=2922"},"modified":"2021-09-20T16:45:23","modified_gmt":"2021-09-20T16:45:23","slug":"pygame-scrolling-background","status":"publish","type":"page","link":"https:\/\/coderslegacy.com\/python\/pygame-scrolling-background\/","title":{"rendered":"Pygame &#8211; creating a scrolling background"},"content":{"rendered":"\n<p>This article explains how to create a scrolling background in Pygame.<\/p>\n\n\n\n<p><strong>Scrolling backgrounds<\/strong>, while not suitable in all types of games can add a very realistic touch to the game they are implemented in. Common examples of games which use <strong>scrolling backgrounds<\/strong> are typically side scroller games like <strong>flappy bird<\/strong>, <strong>space invaders<\/strong> and <strong>car racing games<\/strong>.<\/p>\n\n\n\n<p>Today, in this article we&#8217;ll be using one of our previous games, from <a href=\"https:\/\/coderslegacy.com\/python\/python-pygame-tutorial\/\">our Pygame Tutorial<\/a>. It&#8217;s a simple side scroller, where you have to dodge the incoming cars. If you want to learn more about the code and how the game works, follow the link to the tutorial. <\/p>\n\n\n\n<div style=\"height:20px\" aria-hidden=\"true\" class=\"wp-block-spacer\"><\/div>\n\n\n\n<hr>\n\n\n\n<div style=\"height:20px\" aria-hidden=\"true\" class=\"wp-block-spacer\"><\/div>\n\n\n\n<h3 class=\"wp-block-heading\">The concepts behind scrolling backgrounds<\/h3>\n\n\n\n<p>Now obviously there are many different methods that can be used to create the scrolling background effect in Pygame. The method we&#8217;ll be following is what I consider to be one of the best. It easily bypasses many common issues that arise, while also having the ability to scroll vertically as well as horizontally (with a few tweaks).<\/p>\n\n\n\n<p>The common principle behind background scrolling is simply to move the background in the direction you want it to move. However, the problem is that moving the background 10 pixels in any direction will result in a gap of 10 pixels in that very spot.<\/p>\n\n\n\n<p>The solution that our approach takes is to create two copies of the background, with no overlap. This way, if the first background has been moved half way down, the other background which will be right behind it and will cover that 50% gap.<\/p>\n\n\n\n<p> If this doesn&#8217;t make sense, take a good long look at the code we&#8217;ll be showing below. If you examine each line of the code carefully, you&#8217;ll understand how background scrolling works. <\/p>\n\n\n\n<p style=\"font-size:15px\"><em>A horizontal scrolling version of our code is available at the very end of this article.<\/em><\/p>\n\n\n\n<div style=\"height:20px\" aria-hidden=\"true\" class=\"wp-block-spacer\"><\/div>\n\n\n\n<hr>\n\n\n\n<div style=\"height:20px\" aria-hidden=\"true\" class=\"wp-block-spacer\"><\/div>\n\n\n\n<h3 class=\"wp-block-heading\">Our Code<\/h3>\n\n\n\n<p>Another advantage of our approach is that it&#8217;s class based. 90% of the work is all done before the game loop even begins. If you want to skip the explanation and simply implement the scrolling background feature, copy over the code for the <strong>Background<\/strong> class, create an object and call the two methods shown below in your game loop. You&#8217;ll also have to change the file path of the image to be used.<\/p>\n\n\n<div class=\"wp-block-syntaxhighlighter-code \"><pre class=\"brush: python; title: ; notranslate\" title=\"\">\nbackground_object.update()\nbackground_object.render()\n<\/pre><\/div>\n\n\n<p>For the actual explanation, keep reading.<\/p>\n\n\n\n<div style=\"height:27px\" aria-hidden=\"true\" class=\"wp-block-spacer\"><\/div>\n\n\n\n<p>Below is simply the code for the Background class. The full source code for the game can be found at the bottom of this article. We&#8217;ll begin by explaining each method of the Background class.<\/p>\n\n\n<div class=\"wp-block-syntaxhighlighter-code \"><pre class=\"brush: python; title: ; notranslate\" title=\"\">\nclass Background():\n      def __init__(self):\n            self.bgimage = pygame.image.load(&#039;AnimatedStreet.png&#039;)\n            self.rectBGimg = self.bgimage.get_rect()\n\n            self.bgY1 = 0\n            self.bgX1 = 0\n\n            self.bgY2 = self.rectBGimg.height\n            self.bgX2 = 0\n\n            self.moving_speed = 5\n        \n      def update(self):\n        self.bgY1 -= self.moving_speed\n        self.bgY2 -= self.moving_speed\n        if self.bgY1 &lt;= -self.rectBGimg.height:\n            self.bgY1 = self.rectBGimg.height\n        if self.bgY2 &lt;= -self.rectBGimg.height:\n            self.bgY2 = self.rectBGimg.height\n            \n      def render(self):\n         DISPLAYSURF.blit(self.bgimage, (self.bgX1, self.bgY1))\n         DISPLAYSURF.blit(self.bgimage, (self.bgX2, self.bgY2))\n<\/pre><\/div>\n\n\n<div style=\"height:20px\" aria-hidden=\"true\" class=\"wp-block-spacer\"><\/div>\n\n\n\n<hr>\n\n\n\n<div style=\"height:20px\" aria-hidden=\"true\" class=\"wp-block-spacer\"><\/div>\n\n\n\n<h3 class=\"wp-block-heading\">Explanation<\/h3>\n\n\n<div class=\"wp-block-syntaxhighlighter-code \"><pre class=\"brush: python; title: ; notranslate\" title=\"\">\ndef __init__(self):\n      self.bgimage = pygame.image.load(&#039;AnimatedStreet.png&#039;)\n      self.rectBGimg = self.bgimage.get_rect()\n\n      self.bgY1 = 0\n      self.bgX1 = 0\n\n      self.bgY2 = self.rectBGimg.height\n      self.bgX2 = 0\n\n      self.moving_speed = 5\n<\/pre><\/div>\n\n\n<p>This is the initializing function for the Background class. First we load an image and then create a <code>rect object<\/code> based of it.<\/p>\n\n\n\n<p>Next we define 2 sets of points. The first set starts at the origin point, the (top left corner) and the second initializes at the bottom of the screen, just out of sight.<\/p>\n\n\n\n<p>Finally we define the moving speed of the background. The faster you want the background the move, the higher the value should be. 5 is a good average though.<\/p>\n\n\n\n<div style=\"height:27px\" aria-hidden=\"true\" class=\"wp-block-spacer\"><\/div>\n\n\n<div class=\"wp-block-syntaxhighlighter-code \"><pre class=\"brush: python; title: ; notranslate\" title=\"\">\ndef update(self):\n      self.bgY1 -= self.moving_speed\n      self.bgY2 -= self.moving_speed\n      if self.bgY1 &lt;= -self.rectBGimg.height:\n            self.bgY1 = self.rectBGimg.height\n      if self.bgY2 &lt;= -self.rectBGimg.height:\n            self.bgY2 = self.rectBGimg.height\n<\/pre><\/div>\n\n\n<p>The <code>update()<\/code> method is what handles all the movement of the background.  Every time it is called, it decrements <code>self.bgY1<\/code> and <code>self.bgY2<\/code>, thus changing the co-ordinates to which the background is drawn. <\/p>\n\n\n\n<p>The if statements are there to make sure that the values of the two variables do not exceed the height of the screen itself. If this occurs, it will reset it back to it&#8217;s original position at the top.<\/p>\n\n\n\n<div style=\"height:30px\" aria-hidden=\"true\" class=\"wp-block-spacer\"><\/div>\n\n\n<div class=\"wp-block-syntaxhighlighter-code \"><pre class=\"brush: python; title: ; notranslate\" title=\"\">\ndef render(self):\n      DISPLAYSURF.blit(self.bgimage, (self.bgX1, self.bgY1))\n      DISPLAYSURF.blit(self.bgimage, (self.bgX2, self.bgY2))\n<\/pre><\/div>\n\n\n<p>The <code>render()<\/code> method is the method used to finally draw the background to the screen. Normally, we would only have one <code>blit()<\/code> function here. However, this time we draw two backgrounds using both pairs of co-ordinates we defined earlier.<\/p>\n\n\n\n<div style=\"height:20px\" aria-hidden=\"true\" class=\"wp-block-spacer\"><\/div>\n\n\n\n<p>Here&#8217;s a short video showing the scrolling background effect in our game.<\/p>\n\n\n\n<figure class=\"wp-block-video aligncenter\"><video controls src=\"https:\/\/coderslegacy.com\/wp-content\/uploads\/2020\/06\/Scrollingbackground.mp4\"><\/video><\/figure>\n\n\n\n<p>If you want to see how the above code will be implemented in the actual program, you can look the source code for the whole project below. A section on a horizontal version of the Background class is also present at the end of this article.<\/p>\n\n\n\n<div style=\"height:20px\" aria-hidden=\"true\" class=\"wp-block-spacer\"><\/div>\n\n\n\n<hr>\n\n\n\n<div style=\"height:20px\" aria-hidden=\"true\" class=\"wp-block-spacer\"><\/div>\n\n\n\n<h3 class=\"wp-block-heading\">The Full Game + Code<\/h3>\n\n\n\n<p>The code for the whole game with the scrolling background implemented is shown below. If you want the source code and the images used in the game, follow the link to the <a href=\"https:\/\/coderslegacy.com\/python\/python-pygame-tutorial\/\">main tutorial<\/a>. <\/p>\n\n\n<div class=\"wp-block-syntaxhighlighter-code \"><pre class=\"brush: python; title: ; notranslate\" title=\"\">\n#Imports\nimport pygame, sys\nfrom pygame.locals import *\nimport random, time\n\n#Initializing \npygame.init()\n\n#Setting up FPS \nFPS = 60\nFramePerSec = pygame.time.Clock()\n\n#Creating colors\nBLUE  = (0, 0, 255)\nRED   = (255, 0, 0)\nGREEN = (0, 255, 0)\nBLACK = (0, 0, 0)\nWHITE = (255, 255, 255)\n\n#Other Variables for use in the program\nSCREEN_WIDTH = 400\nSCREEN_HEIGHT = 600\nSPEED = 5\nSCORE = 0\n\n#Setting up Fonts\nfont = pygame.font.SysFont(&quot;Verdana&quot;, 60)\nfont_small = pygame.font.SysFont(&quot;Verdana&quot;, 20)\ngame_over = font.render(&quot;Game Over&quot;, True, BLACK)\n\n#Create a white screen \nDISPLAYSURF = pygame.display.set_mode((400,600))\nDISPLAYSURF.fill(WHITE)\npygame.display.set_caption(&quot;Game&quot;)\n\n\nclass Enemy(pygame.sprite.Sprite):\n      def __init__(self):\n        super().__init__() \n        self.image = pygame.image.load(&quot;Enemy.png&quot;)\n        self.surf = pygame.Surface((42, 70))\n        self.rect = self.surf.get_rect(center = (random.randint(40,SCREEN_WIDTH-40)\n                                                 , 0))\n\n      def move(self):\n        global SCORE\n        self.rect.move_ip(0,SPEED)\n        if (self.rect.top &gt; 600):\n            SCORE += 1\n            self.rect.top = 0\n            self.rect.center = (random.randint(40, SCREEN_WIDTH - 40), 0)\n\n\nclass Player(pygame.sprite.Sprite):\n    def __init__(self):\n        super().__init__() \n        self.image = pygame.image.load(&quot;Player.png&quot;)\n        self.surf = pygame.Surface((40, 75))\n        self.rect = self.surf.get_rect(center = (160, 520))\n       \n    def move(self):\n        pressed_keys = pygame.key.get_pressed()\n       #if pressed_keys&#x5B;K_UP]:\n            #self.rect.move_ip(0, -5)\n       #if pressed_keys&#x5B;K_DOWN]:\n            #self.rect.move_ip(0,5)\n        \n        if self.rect.left &gt; 0:\n              if pressed_keys&#x5B;K_LEFT]:\n                  self.rect.move_ip(-5, 0)\n        if self.rect.right &lt; SCREEN_WIDTH:        \n              if pressed_keys&#x5B;K_RIGHT]:\n                  self.rect.move_ip(5, 0)\n                  \nclass Background():\n      def __init__(self):\n            self.bgimage = pygame.image.load(&#039;AnimatedStreet.png&#039;)\n            self.rectBGimg = self.bgimage.get_rect()\n\n            self.bgY1 = 0\n            self.bgX1 = 0\n\n            self.bgY2 = self.rectBGimg.height\n            self.bgX2 = 0\n\n            self.movingUpSpeed = 5\n        \n      def update(self):\n        self.bgY1 -= self.movingUpSpeed\n        self.bgY2 -= self.movingUpSpeed\n        if self.bgY1 &lt;= -self.rectBGimg.height:\n            self.bgY1 = self.rectBGimg.height\n        if self.bgY2 &lt;= -self.rectBGimg.height:\n            self.bgY2 = self.rectBGimg.height\n            \n      def render(self):\n         DISPLAYSURF.blit(self.bgimage, (self.bgX1, self.bgY1))\n         DISPLAYSURF.blit(self.bgimage, (self.bgX2, self.bgY2))\n        \n#Setting up Sprites        \nP1 = Player()\nE1 = Enemy()\n\nback_ground = Background()\n\n#Creating Sprites Groups\nenemies = pygame.sprite.Group()\nenemies.add(E1)\nall_sprites = pygame.sprite.Group()\nall_sprites.add(P1)\nall_sprites.add(E1)\n\n#Adding a new User event \nINC_SPEED = pygame.USEREVENT + 1\npygame.time.set_timer(INC_SPEED, 1000)\n\n#Game Loop\nwhile True:\n      \n    #Cycles through all occurring events   \n    for event in pygame.event.get():\n        if event.type == INC_SPEED:\n              SPEED += 0.5      \n        if event.type == QUIT:\n            pygame.quit()\n            sys.exit()\n\n\n    back_ground.update()\n    back_ground.render()\n\n    #DISPLAYSURF.blit(background, (0,0))\n    scores = font_small.render(str(SCORE), True, BLACK)\n    DISPLAYSURF.blit(scores, (10,10))\n\n    #Moves and Re-draws all Sprites\n    for entity in all_sprites:\n        DISPLAYSURF.blit(entity.image, entity.rect)\n        entity.move()\n\n    #To be run if collision occurs between Player and Enemy\n    if pygame.sprite.spritecollideany(P1, enemies):\n          pygame.mixer.Sound(&#039;crash.wav&#039;).play()\n          time.sleep(0.8)\n                   \n          DISPLAYSURF.fill(RED)\n          DISPLAYSURF.blit(game_over, (30,250))\n          \n          pygame.display.update()\n          for entity in all_sprites:\n                entity.kill() \n          time.sleep(1.5)\n          pygame.quit()\n          sys.exit()        \n        \n    pygame.display.update()\n    FramePerSec.tick(FPS)\n<\/pre><\/div>\n\n\n<div style=\"height:20px\" aria-hidden=\"true\" class=\"wp-block-spacer\"><\/div>\n\n\n\n<hr>\n\n\n\n<div style=\"height:20px\" aria-hidden=\"true\" class=\"wp-block-spacer\"><\/div>\n\n\n\n<h3 class=\"wp-block-heading\">Horizontal Version<\/h3>\n\n\n\n<p>Some people may require background scrolling that occurs from left to right (or right to left) rather than up and down. As such, we&#8217;ve adapted our code to work as a horizontal scroller. Just remember to be using appropriate images . Without any editing, the above street image would look very out of place if scrolled horizontally.<\/p>\n\n\n<div class=\"wp-block-syntaxhighlighter-code \"><pre class=\"brush: python; title: ; notranslate\" title=\"\">\nclass Background():\n      def __init__(self):\n            self.bgimage = pygame.image.load(&#039;AnimatedStreet.png&#039;)\n            self.rectBGimg = self.bgimage.get_rect()\n\n            self.bgY1 = 0\n            self.bgX1 = 0\n\n            self.bgY2 = 0\n            self.bgX2 = self.rectBGimg.width\n\n            self.moving_speed = 5\n        \n      def update(self):\n        self.bgX1 -= self.moving_speed\n        self.bgX2 -= self.moving_speed\n        if self.bgX1 &lt;= -self.rectBGimg.width:\n            self.bgX1 = self.rectBGimg.width\n        if self.bgX2 &lt;= -self.rectBGimg.width:\n            self.bgX2 = self.rectBGimg.width\n            \n      def render(self):\n         DISPLAYSURF.blit(self.bgimage, (self.bgX1, self.bgY1))\n         DISPLAYSURF.blit(self.bgimage, (self.bgX2, self.bgY2))\n<\/pre><\/div>\n\n\n<p>To summarize, we changed all the height related aspects to the width. You can observe this change by comparing the update functions of both classes. This is where the most change occurred.<\/p>\n\n\n\n<p>Another difference is where we spawned the second background. Unlike the first example, we created the two backgrounds side by side, rather than one up and one down.<\/p>\n\n\n\n<p><\/p>\n\n\n\n<div style=\"height:20px\" aria-hidden=\"true\" class=\"wp-block-spacer\"><\/div>\n\n\n\n<hr>\n\n\n\n<div style=\"height:20px\" aria-hidden=\"true\" class=\"wp-block-spacer\"><\/div>\n\n\n\n<h3 class=\"wp-block-heading\">Download Link<\/h3>\n\n\n\n<p>Here&#8217;s the download link for those of who who bothered to scroll all the way down here. And for those having trouble with the scrolling background. (The graphics have been slightly updated too, there was a slight issue).<\/p>\n\n\n\n<a  data-e-Disable-Page-Transition=\"true\" class=\"download-link download-button aligncenter\" title=\"\" href=\"https:\/\/coderslegacy.com\/download\/2757\/?tmstv=1741959388\" rel=\"nofollow\" id=\"download-link-2757\" data-redirect=\"false\" >\n\tDownload &ldquo;Pygame Tutorial Materials Download&rdquo;\t<small>PygameTutorial_3_0.zip\t\t&ndash; Downloaded 14530 times\t\t&ndash; 215.15 KB<\/small>\n<\/a>\n\n\n\n<div style=\"height:20px\" aria-hidden=\"true\" class=\"wp-block-spacer\"><\/div>\n\n\n\n<hr>\n\n\n\n<div style=\"height:20px\" aria-hidden=\"true\" class=\"wp-block-spacer\"><\/div>\n\n\n\n<p>This marks the end of the <strong>Pygame Scrolling Background<\/strong> article. Any suggestions or contributions for <strong>CodersLegacy<\/strong> are more than welcome. Questions regarding the article content can be asked in the comments section below.<\/p>\n","protected":false},"excerpt":{"rendered":"<p>This article explains how to create a scrolling background in Pygame. Scrolling backgrounds, while not suitable in all types of games can add a very realistic touch to the game they are implemented in. Common examples of games which use scrolling backgrounds are typically side scroller games like flappy bird, space invaders and car racing &#8230; <a title=\"Pygame &#8211; creating a scrolling background\" class=\"read-more\" href=\"https:\/\/coderslegacy.com\/python\/pygame-scrolling-background\/\" aria-label=\"More on Pygame &#8211; creating a scrolling background\">Read more<\/a><\/p>\n","protected":false},"author":1,"featured_media":0,"parent":269,"menu_order":0,"comment_status":"open","ping_status":"closed","template":"","meta":{"_uag_custom_page_level_css":"","footnotes":""},"class_list":["post-2922","page","type-page","status-publish"],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v24.1 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>Pygame - creating a scrolling background - CodersLegacy<\/title>\n<meta name=\"description\" content=\"A scrolling background, while not suitable in all types of games can add a very realistic touch to any game made in Pygame. Common examples are games like..\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/coderslegacy.com\/python\/pygame-scrolling-background\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"Pygame - creating a scrolling background - CodersLegacy\" \/>\n<meta property=\"og:description\" content=\"A scrolling background, while not suitable in all types of games can add a very realistic touch to any game made in Pygame. Common examples are games like..\" \/>\n<meta property=\"og:url\" content=\"https:\/\/coderslegacy.com\/python\/pygame-scrolling-background\/\" \/>\n<meta property=\"og:site_name\" content=\"CodersLegacy\" \/>\n<meta property=\"article:modified_time\" content=\"2021-09-20T16:45:23+00:00\" \/>\n<meta property=\"og:image\" content=\"https:\/\/coderslegacy.com\/wp-content\/uploads\/2020\/04\/CodersLegacy1.jpg\" \/>\n\t<meta property=\"og:image:width\" content=\"1424\" \/>\n\t<meta property=\"og:image:height\" content=\"736\" \/>\n\t<meta property=\"og:image:type\" content=\"image\/jpeg\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:label1\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data1\" content=\"7 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebPage\",\"@id\":\"https:\/\/coderslegacy.com\/python\/pygame-scrolling-background\/\",\"url\":\"https:\/\/coderslegacy.com\/python\/pygame-scrolling-background\/\",\"name\":\"Pygame - creating a scrolling background - CodersLegacy\",\"isPartOf\":{\"@id\":\"https:\/\/coderslegacy.com\/#website\"},\"datePublished\":\"2020-06-13T12:14:06+00:00\",\"dateModified\":\"2021-09-20T16:45:23+00:00\",\"description\":\"A scrolling background, while not suitable in all types of games can add a very realistic touch to any game made in Pygame. Common examples are games like..\",\"breadcrumb\":{\"@id\":\"https:\/\/coderslegacy.com\/python\/pygame-scrolling-background\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/coderslegacy.com\/python\/pygame-scrolling-background\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/coderslegacy.com\/python\/pygame-scrolling-background\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/coderslegacy.com\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"Python\",\"item\":\"https:\/\/coderslegacy.com\/python\/\"},{\"@type\":\"ListItem\",\"position\":3,\"name\":\"Pygame &#8211; creating a scrolling background\"}]},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/coderslegacy.com\/#website\",\"url\":\"https:\/\/coderslegacy.com\/\",\"name\":\"CodersLegacy\",\"description\":\"Imparting knowledge to the Future\",\"publisher\":{\"@id\":\"https:\/\/coderslegacy.com\/#\/schema\/person\/561a3b194ec717af58f3de2cf596a928\"},\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/coderslegacy.com\/?s={search_term_string}\"},\"query-input\":{\"@type\":\"PropertyValueSpecification\",\"valueRequired\":true,\"valueName\":\"search_term_string\"}}],\"inLanguage\":\"en-US\"},{\"@type\":[\"Person\",\"Organization\"],\"@id\":\"https:\/\/coderslegacy.com\/#\/schema\/person\/561a3b194ec717af58f3de2cf596a928\",\"name\":\"Siddiqi\",\"image\":{\"@type\":\"ImageObject\",\"inLanguage\":\"en-US\",\"@id\":\"https:\/\/coderslegacy.com\/#\/schema\/person\/image\/\",\"url\":\"https:\/\/coderslegacy.com\/wp-content\/uploads\/2023\/02\/CodersLegacyLogo.jpg\",\"contentUrl\":\"https:\/\/coderslegacy.com\/wp-content\/uploads\/2023\/02\/CodersLegacyLogo.jpg\",\"width\":340,\"height\":74,\"caption\":\"Siddiqi\"},\"logo\":{\"@id\":\"https:\/\/coderslegacy.com\/#\/schema\/person\/image\/\"},\"sameAs\":[\"http:\/\/\/\/coderslegacy.com\"]}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"Pygame - creating a scrolling background - CodersLegacy","description":"A scrolling background, while not suitable in all types of games can add a very realistic touch to any game made in Pygame. Common examples are games like..","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/coderslegacy.com\/python\/pygame-scrolling-background\/","og_locale":"en_US","og_type":"article","og_title":"Pygame - creating a scrolling background - CodersLegacy","og_description":"A scrolling background, while not suitable in all types of games can add a very realistic touch to any game made in Pygame. Common examples are games like..","og_url":"https:\/\/coderslegacy.com\/python\/pygame-scrolling-background\/","og_site_name":"CodersLegacy","article_modified_time":"2021-09-20T16:45:23+00:00","og_image":[{"width":1424,"height":736,"url":"https:\/\/coderslegacy.com\/wp-content\/uploads\/2020\/04\/CodersLegacy1.jpg","type":"image\/jpeg"}],"twitter_card":"summary_large_image","twitter_misc":{"Est. reading time":"7 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebPage","@id":"https:\/\/coderslegacy.com\/python\/pygame-scrolling-background\/","url":"https:\/\/coderslegacy.com\/python\/pygame-scrolling-background\/","name":"Pygame - creating a scrolling background - CodersLegacy","isPartOf":{"@id":"https:\/\/coderslegacy.com\/#website"},"datePublished":"2020-06-13T12:14:06+00:00","dateModified":"2021-09-20T16:45:23+00:00","description":"A scrolling background, while not suitable in all types of games can add a very realistic touch to any game made in Pygame. Common examples are games like..","breadcrumb":{"@id":"https:\/\/coderslegacy.com\/python\/pygame-scrolling-background\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/coderslegacy.com\/python\/pygame-scrolling-background\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/coderslegacy.com\/python\/pygame-scrolling-background\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/coderslegacy.com\/"},{"@type":"ListItem","position":2,"name":"Python","item":"https:\/\/coderslegacy.com\/python\/"},{"@type":"ListItem","position":3,"name":"Pygame &#8211; creating a scrolling background"}]},{"@type":"WebSite","@id":"https:\/\/coderslegacy.com\/#website","url":"https:\/\/coderslegacy.com\/","name":"CodersLegacy","description":"Imparting knowledge to the Future","publisher":{"@id":"https:\/\/coderslegacy.com\/#\/schema\/person\/561a3b194ec717af58f3de2cf596a928"},"potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/coderslegacy.com\/?s={search_term_string}"},"query-input":{"@type":"PropertyValueSpecification","valueRequired":true,"valueName":"search_term_string"}}],"inLanguage":"en-US"},{"@type":["Person","Organization"],"@id":"https:\/\/coderslegacy.com\/#\/schema\/person\/561a3b194ec717af58f3de2cf596a928","name":"Siddiqi","image":{"@type":"ImageObject","inLanguage":"en-US","@id":"https:\/\/coderslegacy.com\/#\/schema\/person\/image\/","url":"https:\/\/coderslegacy.com\/wp-content\/uploads\/2023\/02\/CodersLegacyLogo.jpg","contentUrl":"https:\/\/coderslegacy.com\/wp-content\/uploads\/2023\/02\/CodersLegacyLogo.jpg","width":340,"height":74,"caption":"Siddiqi"},"logo":{"@id":"https:\/\/coderslegacy.com\/#\/schema\/person\/image\/"},"sameAs":["http:\/\/\/\/coderslegacy.com"]}]}},"uagb_featured_image_src":{"full":false,"thumbnail":false,"medium":false,"medium_large":false,"large":false,"1536x1536":false,"2048x2048":false},"uagb_author_info":{"display_name":"Siddiqi","author_link":"https:\/\/coderslegacy.com\/author\/raahim-shotmail-com\/"},"uagb_comment_info":10,"uagb_excerpt":"This article explains how to create a scrolling background in Pygame. Scrolling backgrounds, while not suitable in all types of games can add a very realistic touch to the game they are implemented in. Common examples of games which use scrolling backgrounds are typically side scroller games like flappy bird, space invaders and car racing&hellip;","_links":{"self":[{"href":"https:\/\/coderslegacy.com\/wp-json\/wp\/v2\/pages\/2922","targetHints":{"allow":["GET"]}}],"collection":[{"href":"https:\/\/coderslegacy.com\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/coderslegacy.com\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/coderslegacy.com\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/coderslegacy.com\/wp-json\/wp\/v2\/comments?post=2922"}],"version-history":[{"count":6,"href":"https:\/\/coderslegacy.com\/wp-json\/wp\/v2\/pages\/2922\/revisions"}],"predecessor-version":[{"id":7968,"href":"https:\/\/coderslegacy.com\/wp-json\/wp\/v2\/pages\/2922\/revisions\/7968"}],"up":[{"embeddable":true,"href":"https:\/\/coderslegacy.com\/wp-json\/wp\/v2\/pages\/269"}],"wp:attachment":[{"href":"https:\/\/coderslegacy.com\/wp-json\/wp\/v2\/media?parent=2922"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}