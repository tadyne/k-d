<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="/coderslegacy?action=followPub&amp;rss=1"?>
rss version="0.91" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title><![CDATA[coderslegacy]]></title>
        <atom:link href="https://follow.it/coderslegacy" rel="self" type="application/rss+xml"/>
        <description>Follow coderslegacy, filter it, and define how you want to receive the news (via Email, RSS, Telegram, WhatsApp etc.)</description>
        <link>https://follow.it/coderslegacy</link>
        <lastBuildDate>Wed, 26 Mar 2025 21:48:45 +0200</lastBuildDate>
                    <item>
                <title><![CDATA[PLEASE UPDATE THE RSS FEED]]></title>
                <link>https://follow.it/</link>
                <description><![CDATA[<p>The RSS feed URL you're currently using <a href='https://follow.it/coderslegacy'>https://follow.it/coderslegacy</a> will stop working shortly. Please add /rss at the and of the URL, so that the URL will be <a href='https://follow.it/coderslegacy/rss'>https://follow.it/coderslegacy/rss</a></p>]]></description>
                <pubDate>Thu, 25 Apr 2024 10:00:00 +0200</pubDate>
                <guid isPermaLink="false">https://follow.it/</guid>
            </item>
                    <item>
                <title><![CDATA[Converting LaTeX to PDF in Python: A Step-by-Step Tutorial]]></title>
                <link>https://api.follow.it/track-rss-story-click/v3/Pni2oPawGk3lRa6IJ2yFE2Bvg9t5Ng9W</link>
                <description><![CDATA[<img src="https://api.follow.it/track-rss-story-loaded/v1/dijKq-8FMchpGvgwjCYVrBeIF_fEM9tn" border=0 width="1" height="1" alt="Converting LaTeX to PDF in Python: A Step-by-Step Tutorial" title="Converting LaTeX to PDF in Python: A Step-by-Step Tutorial"> <p>If you’ve ever worked with LaTeX, you know it’s an excellent tool for creating professional-quality documents. However, automating the process of converting LaTeX source files to PDFs can sometimes be a bit tedious, especially if you’re managing multiple files or need to integrate this process into a larger Python workflow. </p>



<p>In this tutorial, we’ll explore how to easily convert LaTeX documents into PDF files using a dedicated Python library that wraps the <code>pdflatex</code> command.</p>



<hr class="wp-block-separator has-alpha-channel-opacity"/>



<h2 class="wp-block-heading">Table of Contents</h2>



<ul class="wp-block-list">
<li><a href="#introduction">Introduction</a></li>



<li><a href="#prerequisites">Prerequisites</a></li>



<li><a href="#library-overview">Library Overview</a></li>



<li><a href="#creating-a-pdf-from-a-tex-file">Creating a PDF from a .tex File</a></li>



<li><a href="#creating-a-pdf-from-a-binary-string">Creating a PDF from a Binary String</a></li>



<li><a href="#additional-options-and-cleanup">Additional Options and Cleanup</a></li>



<li><a href="#conclusion">Conclusion</a></li>
</ul>



<hr class="wp-block-separator has-alpha-channel-opacity"/>



<h2 class="wp-block-heading">Prerequisites</h2>



<p>Before getting started, ensure that you have the necessary LaTeX packages installed on your system. If you encounter errors like “pdflatex not found”, run the following command (or its equivalent on your system):</p>



<div class="wp-block-kevinbatdorf-code-block-pro" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:flex;align-items:center;padding:10px 0px 10px 16px;margin-bottom:-2px;width:100%;text-align:left;background-color:#2b2b2b;color:#c7c7c7">Python</span><span role="button" tabindex="0" data-code="sudo apt-get install texlive-latex-base texlive-latex-extra texlive-fonts-extra" style="color:#D4D4D4;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path></svg></span><pre class="shiki dark-plus" style="background-color: #1E1E1E" tabindex="0"><code><span class="line"><span style="color: #D4D4D4">sudo apt-get install texlive-latex-base texlive-latex-extra texlive-fonts-extra</span></span></code></pre></div>



<p>This will install the essential LaTeX packages required for <code>pdflatex</code> to function correctly.</p>



<p>Additionally, you’ll need Python installed along with the <code>pdflatex</code> library. If you haven’t installed the library yet, you can typically do so via pip:</p>



<div class="wp-block-kevinbatdorf-code-block-pro" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:flex;align-items:center;padding:10px 0px 10px 16px;margin-bottom:-2px;width:100%;text-align:left;background-color:#2b2b2b;color:#c7c7c7">Python</span><span role="button" tabindex="0" data-code="pip install pdflatex" style="color:#D4D4D4;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path></svg></span><pre class="shiki dark-plus" style="background-color: #1E1E1E" tabindex="0"><code><span class="line"><span style="color: #D4D4D4">pip install pdflatex</span></span></code></pre></div>



<hr class="wp-block-separator has-alpha-channel-opacity"/>



<h2 class="wp-block-heading">Creating a PDF from a .tex File</h2>



<p>Let’s start with the most straightforward use-case: generating a PDF from an existing <code>.tex</code> file.</p>



<p>Begin by importing the PDFLaTeX class:</p>



<div class="wp-block-kevinbatdorf-code-block-pro" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:flex;align-items:center;padding:10px 0px 10px 16px;margin-bottom:-2px;width:100%;text-align:left;background-color:#2b2b2b;color:#c7c7c7">Python</span><span role="button" tabindex="0" data-code="from pdflatex import PDFLaTeX" style="color:#D4D4D4;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path></svg></span><pre class="shiki dark-plus" style="background-color: #1E1E1E" tabindex="0"><code><span class="line"><span style="color: #C586C0">from</span><span style="color: #D4D4D4"> pdflatex </span><span style="color: #C586C0">import</span><span style="color: #D4D4D4"> PDFLaTeX</span></span></code></pre></div>



<p>Instantiate from a .tex File using the helper method <code>from_texfile</code> to create a <code>PDFLaTeX</code> object: </p>



<div class="wp-block-kevinbatdorf-code-block-pro" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:flex;align-items:center;padding:10px 0px 10px 16px;margin-bottom:-2px;width:100%;text-align:left;background-color:#2b2b2b;color:#c7c7c7">Python</span><span role="button" tabindex="0" data-code="pdfl = PDFLaTeX.from_texfile('my_file.tex')" style="color:#D4D4D4;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path></svg></span><pre class="shiki dark-plus" style="background-color: #1E1E1E" tabindex="0"><code><span class="line"><span style="color: #D4D4D4">pdfl = PDFLaTeX.from_texfile(</span><span style="color: #CE9178">&#39;my_file.tex&#39;</span><span style="color: #D4D4D4">)</span></span></code></pre></div>



<p>Call the <code>create_pdf</code> method. This method returns three things:<ul><li>The PDF file as a binary string.The log file generated by <code>pdflatex</code> as text.A <code>subprocess.CompletedProcess</code> object with detailed execution results</li></ul></p>



<div class="wp-block-kevinbatdorf-code-block-pro" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:flex;align-items:center;padding:10px 0px 10px 16px;margin-bottom:-2px;width:100%;text-align:left;background-color:#2b2b2b;color:#c7c7c7">Python</span><span role="button" tabindex="0" data-code="pdf, log, completed_process = pdfl.create_pdf(keep_pdf_file=True, keep_log_file=True)" style="color:#D4D4D4;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path></svg></span><pre class="shiki dark-plus" style="background-color: #1E1E1E" tabindex="0"><code><span class="line"><span style="color: #D4D4D4">pdf, log, completed_process = pdfl.create_pdf(</span><span style="color: #9CDCFE">keep_pdf_file</span><span style="color: #D4D4D4">=</span><span style="color: #569CD6">True</span><span style="color: #D4D4D4">, </span><span style="color: #9CDCFE">keep_log_file</span><span style="color: #D4D4D4">=</span><span style="color: #569CD6">True</span><span style="color: #D4D4D4">)</span></span></code></pre></div>



<p>The <code>keep_pdf_file</code> and <code>keep_log_file</code> parameters (both default to <code>False</code>) allow you to retain the files on your filesystem if needed. Otherwise, the module cleans up after itself, leaving no trace unless explicitly requested.</p>



<hr class="wp-block-separator has-alpha-channel-opacity"/>



<h2 class="wp-block-heading">Creating a PDF from a Binary String</h2>



<p>There may be scenarios where your LaTeX content isn’t stored in a file but is generated dynamically (for instance, from a web template or user input). In such cases, you can create a PDF directly from a binary string.</p>



<div class="wp-block-kevinbatdorf-code-block-pro" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:flex;align-items:center;padding:10px 0px 10px 16px;margin-bottom:-2px;width:100%;text-align:left;background-color:#2b2b2b;color:#c7c7c7">Python</span><span role="button" tabindex="0" data-code="import pdflatex

with open('my_file.tex', 'rb') as f:
 pdfl = pdflatex.PDFLaTeX.from_binarystring(f.read(), 'my_file')
 
pdf, log, cp = pdfl.create_pdf()" style="color:#D4D4D4;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path></svg></span><pre class="shiki dark-plus" style="background-color: #1E1E1E" tabindex="0"><code><span class="line"><span style="color: #C586C0">import</span><span style="color: #D4D4D4"> pdflatex</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C586C0">with</span><span style="color: #D4D4D4"> </span><span style="color: #DCDCAA">open</span><span style="color: #D4D4D4">(</span><span style="color: #CE9178">&#39;my_file.tex&#39;</span><span style="color: #D4D4D4">, </span><span style="color: #CE9178">&#39;rb&#39;</span><span style="color: #D4D4D4">) </span><span style="color: #C586C0">as</span><span style="color: #D4D4D4"> f:</span></span>
<span class="line"><span style="color: #D4D4D4"> pdfl = pdflatex.PDFLaTeX.from_binarystring(f.read(), </span><span style="color: #CE9178">&#39;my_file&#39;</span><span style="color: #D4D4D4">)</span></span>
<span class="line"><span style="color: #D4D4D4"> </span></span>
<span class="line"><span style="color: #D4D4D4">pdf, log, cp = pdfl.create_pdf()</span></span></code></pre></div>



<p>The PDF is now available as a binary string which you can save to disk, serve via a web application, or further process as needed.</p>
<p>The post <a href="https://coderslegacy.com/converting-latex-to-pdf-in-python/">Converting LaTeX to PDF in Python: A Step-by-Step Tutorial</a> appeared first on <a href="https://coderslegacy.com">CodersLegacy</a>.</p>]]></description>
                <pubDate>Sun, 16 Mar 2025 20:07:16 +0200</pubDate>
                <guid isPermaLink="false">https://api.follow.it/track-rss-story-click/v3/Pni2oPawGk3lRa6IJ2yFE2Bvg9t5Ng9W</guid>
            </item>
                    <item>
                <title><![CDATA[Python Tkinter GUI with SQLite Tutorial]]></title>
                <link>https://api.follow.it/track-rss-story-click/v3/Pni2oPawGk0gSMjnOn_nY7VeiPtDcMc_</link>
                <description><![CDATA[<img src="https://api.follow.it/track-rss-story-loaded/v1/sdNniD4N6Qc95oBrRntfDBeIF_fEM9tn" border=0 width="1" height="1" alt="Python Tkinter GUI with SQLite Tutorial" title="Python Tkinter GUI with SQLite Tutorial"> <p>In this tutorial we will explore how we can use <a href="https://coderslegacy.com/python/python-gui/">Tkinter GUI</a> alongside the SQLite Database to store and access data required by our application.</p>



<p>Permanent data storage is required in most applications, especially those which deal with data. A very popular option for data storage is &#8220;text files&#8221;, which is almost always used instead of databases, especially if the amount of data is very small (e.g. a settings file)</p>



<p>As the size of data increases, and the need to frequently access it increases, Databases become a much better option. They are also much more reliable, more secure and have other helping features such as backups, collision detection, and scalability that are the bread and butter of any professional application. </p>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<hr>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<h2 class="wp-block-heading">Why SQLite?</h2>



<p>There are various types of SQL databases available for us to freely use. One such popular option is SQLite, which as the name implies, is a lightweight version of SQL (no fancy features or extra frills). </p>



<p>SQLite offers several benefits that make it a popular choice for certain use cases:</p>



<ol class="wp-block-list">
<li><strong>Lightweight and Embedded:</strong>
<ul class="wp-block-list">
<li>SQLite is a self-contained, serverless, and zero-configuration database engine. It is lightweight and can be embedded directly into applications, requiring minimal setup.</li>
</ul>
</li>



<li><strong>Zero Configuration:</strong>
<ul class="wp-block-list">
<li>No separate server process or setup is needed. Applications can connect to an SQLite database by simply opening a file, making it easy to deploy and manage.</li>
</ul>
</li>



<li><strong>Cross-Platform Compatibility:</strong>
<ul class="wp-block-list">
<li>SQLite is cross-platform and can run on various operating systems without modification. This makes it suitable for applications that need to work seamlessly across different platforms.</li>
</ul>
</li>



<li><strong>Low Resource Consumption:</strong>
<ul class="wp-block-list">
<li>SQLite has low memory and disk space requirements. This is beneficial for resource-constrained environments, such as mobile devices or embedded systems.</li>
</ul>
</li>



<li><strong>Ease of Use:</strong>
<ul class="wp-block-list">
<li>SQLite is known for its simplicity and ease of use. It uses a straightforward SQL syntax, making it accessible to developers who may not have extensive database administration experience.</li>
</ul>
</li>
</ol>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<hr>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<h2 class="wp-block-heading">How to install SQLite?</h2>



<p>You don&#8217;t have to install SQLite! That&#8217;s one of the greatest advantages of it. It ships natively with Python, and is included as part of the standard Python library. This makes it a good choice for deployments as well, as you do not need to include an extra dependency.</p>



<p>In the very rare case you do not have one of these libraries, you can install this library using the following command:</p>



<div class="wp-block-kevinbatdorf-code-block-pro" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:block;padding:16px 0 0 16px;margin-bottom:-1px;width:100%;text-align:left;background-color:#2e3440ff"><svg xmlns="http://www.w3.org/2000/svg" width="54" height="14" viewBox="0 0 54 14"><g fill="none" fill-rule="evenodd" transform="translate(1 1)"><circle cx="6" cy="6" r="6" fill="#FF5F56" stroke="#E0443E" stroke-width=".5"></circle><circle cx="26" cy="6" r="6" fill="#FFBD2E" stroke="#DEA123" stroke-width=".5"></circle><circle cx="46" cy="6" r="6" fill="#27C93F" stroke="#1AAB29" stroke-width=".5"></circle></g></svg></span><span role="button" tabindex="0" data-code="pip install sqlite3" style="color:#d8dee9ff;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path></svg></span><pre class="shiki nord" style="background-color: #2e3440ff" tabindex="0"><code><span class="line"><span style="color: #D8DEE9FF">pip install sqlite3</span></span></code></pre></div>



<p>For those with older versions of Python (2.x), use the following:</p>



<div class="wp-block-kevinbatdorf-code-block-pro" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:block;padding:16px 0 0 16px;margin-bottom:-1px;width:100%;text-align:left;background-color:#2e3440ff"><svg xmlns="http://www.w3.org/2000/svg" width="54" height="14" viewBox="0 0 54 14"><g fill="none" fill-rule="evenodd" transform="translate(1 1)"><circle cx="6" cy="6" r="6" fill="#FF5F56" stroke="#E0443E" stroke-width=".5"></circle><circle cx="26" cy="6" r="6" fill="#FFBD2E" stroke="#DEA123" stroke-width=".5"></circle><circle cx="46" cy="6" r="6" fill="#27C93F" stroke="#1AAB29" stroke-width=".5"></circle></g></svg></span><span role="button" tabindex="0" data-code="pip install pysqlite" style="color:#d8dee9ff;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path></svg></span><pre class="shiki nord" style="background-color: #2e3440ff" tabindex="0"><code><span class="line"><span style="color: #D8DEE9FF">pip install pysqlite</span></span></code></pre></div>



<p>If <code>import sqlite3</code> still does not work, it likely means you&#8217;ve compiled Python without SQLite support, and you need to build it again after installing the <a href="https://packages.debian.org/bullseye/libsqlite3-dev" target="_blank" rel="noreferrer noopener">libsqlite3-dev</a> package. For windows users, I would simply recommended reinstalling Python. For Linux users, refer to <a href="https://stackoverflow.com/questions/55674176/django-cant-find-new-sqlite-version-sqlite-3-8-3-or-later-is-required-found" target="_blank" rel="noreferrer noopener">this thread</a> which explains how to add missing dependencies (sqlite3 in this case). </p>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<hr>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<h2 class="wp-block-heading">Setting up your Tkinter Application</h2>



<p>Like sqlite3, Tkinter is also included within the standard Python library. This means that you can potentially develop an entire GUI application + Database without even installing a single dependency!</p>



<p>Here is our code for our Tkinter Application (before adding any of the SQL-related code). We have placeholders for where the SQL is meant to go.</p>



<div class="wp-block-kevinbatdorf-code-block-pro" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:block;padding:16px 0 0 16px;margin-bottom:-1px;width:100%;text-align:left;background-color:#2e3440ff"><svg xmlns="http://www.w3.org/2000/svg" width="54" height="14" viewBox="0 0 54 14"><g fill="none" fill-rule="evenodd" transform="translate(1 1)"><circle cx="6" cy="6" r="6" fill="#FF5F56" stroke="#E0443E" stroke-width=".5"></circle><circle cx="26" cy="6" r="6" fill="#FFBD2E" stroke="#DEA123" stroke-width=".5"></circle><circle cx="46" cy="6" r="6" fill="#27C93F" stroke="#1AAB29" stroke-width=".5"></circle></g></svg></span><span role="button" tabindex="0" data-code="import tkinter as tk


def center_window(width, height):
 x = (root.winfo_screenwidth() // 2) - (width // 2)
 y = (root.winfo_screenheight() // 2) - (height // 2)
 root.geometry(f'{width}x{height}+{x}+{y}')


class WelcomeWindow(tk.Frame):
 def __init__(self, master):
 super().__init__()
 self.master = master
 self.master.title(&quot;Welcome&quot;)
 center_window(240, 120)
 
 login_button = tk.Button(self, text=&quot;Login&quot;, width=10, command=self.open_login_window)
 login_button.pack(padx=20, pady=(20, 10))
 
 register_button = tk.Button(self, text=&quot;Register&quot;, width=10, command=self.open_register_window)
 register_button.pack(pady=10)
 self.pack()
 
 def open_login_window(self):
 for widget in self.winfo_children(): 
 widget.destroy()
 self.destroy()
 LoginWindow(self.master)
 
 def open_register_window(self):
 for widget in self.winfo_children(): 
 widget.destroy()
 self.destroy()
 RegisterWindow(self.master)


class LoginWindow(tk.Frame):
 def __init__(self, master):
 super().__init__()
 self.master = master
 self.master.title(&quot;Login&quot;)
 self.master.resizable(False, False)
 center_window(240, 150)
 
 tk.Label(self, text=&quot;Username:&quot;).grid(row=0, column=0)
 self.username_entry = tk.Entry(self)
 self.username_entry.grid(row=0, column=1, padx=10, pady=10)
 
 tk.Label(self, text=&quot;Password:&quot;).grid(row=1, column=0)
 self.password_entry = tk.Entry(self, show=&quot;*&quot;)
 self.password_entry.grid(row=1, column=1, padx=10, pady=10)
 
 submit_button = tk.Button(self, text=&quot;Submit&quot;, width=8, command=self.submit)
 submit_button.grid(row=2, column=1, sticky=&quot;e&quot;, padx=10, pady=(10, 0))

 submit_button = tk.Button(self, text=&quot;Back&quot;, width=8, command=self.back)
 submit_button.grid(row=2, column=0, sticky=&quot;w&quot;, padx=10, pady=(10, 0))
 self.pack()
 
 def submit(self):
 username = self.username_entry.get()
 password = self.password_entry.get()

 # PLACEHOLDER (Authenticate User)

 if user:
 # Logged in
 MainWindow(self.master)
 self.destroy()
 else:
 print(&quot;You have typed in the wrong details&quot;)
 self.username_entry.delete(0, tk.END)
 self.password_entry.delete(0, tk.END)


 def back(self):
 for widget in self.winfo_children(): 
 widget.destroy()
 self.destroy()
 WelcomeWindow(self.master)


class RegisterWindow(tk.Frame):
 def __init__(self, master):
 super().__init__()
 self.master = master
 self.master.title(&quot;Register&quot;)
 self.master.resizable(False, False)
 center_window(320, 350)
 
 tk.Label(self, text=&quot;Name:&quot;).grid(row=0, column=0, sticky=&quot;w&quot;)
 self.first_name_entry = tk.Entry(self, width=26)
 self.first_name_entry.grid(row=0, column=1, padx=10, pady=10, sticky=&quot;e&quot;)
 
 tk.Label(self, text=&quot;Password:&quot;).grid(row=2, column=0, sticky=&quot;w&quot;)
 self.password_entry = tk.Entry(self, show=&quot;*&quot;, width=26)
 self.password_entry.grid(row=2, column=1, padx=10, pady=10, sticky=&quot;e&quot;)
 
 tk.Label(self, text=&quot;Email:&quot;).grid(row=3, column=0, sticky=&quot;w&quot;)
 self.email_entry = tk.Entry(self, width=26)
 self.email_entry.grid(row=3, column=1, padx=10, pady=10, sticky=&quot;e&quot;)
 
 tk.Label(self, text=&quot;Gender:&quot;).grid(row=4, column=0, sticky=&quot;w&quot;)
 self.gender_entry = tk.Entry(self, width=10)
 self.gender_entry.grid(row=4, column=1, padx=10, pady=10, sticky=&quot;e&quot;)
 
 tk.Label(self, text=&quot;Age:&quot;).grid(row=5, column=0, sticky=&quot;w&quot;)
 self.age_entry = tk.Entry(self, width=10)
 self.age_entry.grid(row=5, column=1, padx=10, pady=10, sticky=&quot;e&quot;)
 
 tk.Label(self, text=&quot;Address:&quot;).grid(row=6, column=0, sticky=&quot;w&quot;)
 self.address_entry = tk.Text(self, width=20, height=3)
 self.address_entry.grid(row=6, column=1, padx=10, pady=10, sticky=&quot;e&quot;)
 
 submit_button = tk.Button(self, text=&quot;Submit&quot;, width=8, command=self.submit)
 submit_button.grid(row=7, column=1, padx=10, pady=10, sticky=&quot;e&quot;)

 submit_button = tk.Button(self, text=&quot;Back&quot;, width=8, command=self.back)
 submit_button.grid(row=7, column=0, sticky=&quot;w&quot;, padx=10, pady=(10, 10))
 self.pack()
 
 def submit(self): 
 user_data = (self.first_name_entry.get().strip(), 
 self.password_entry.get().strip(), 
 self.email_entry.get().strip(), 
 self.age_entry.get().strip(),
 self.gender_entry.get().strip(), 
 self.address_entry.get(1.0, tk.END).strip())
 
 # PLACEHOLDER (Insert new user data in database)

 self.destroy()
 MainWindow(self.master)


 def back(self):
 for widget in self.winfo_children(): 
 widget.destroy()
 self.destroy()
 WelcomeWindow(self.master)


class MainWindow(tk.Frame):
 def __init__(self, master):
 super().__init__()
 self.master = master
 center_window(600, 400)

 self.generateUserList()
 self.pack()

 def generateUserList(self):
 # PLACEHOLDER (Fetch Users Data)

 columns = [&quot;ID&quot;, &quot;Name&quot;, &quot;Password&quot;, &quot;Email&quot;, &quot;Age&quot;, &quot;Gender&quot;, &quot;Address&quot;]
 column_widths = [5, 10, 10, 30, 5, 10, 20]
 for col_index, col_name in enumerate(columns):
 label = tk.Label(self, text=col_name, padx=5, pady=5)
 label.grid(row=0, column=col_index)

 # Iterate over users and create Entry widgets
 for row_index, user in enumerate(users):
 for col_index, value in enumerate(user):
 entry = tk.Entry(self, width=column_widths[col_index], disabledforeground=&quot;black&quot;)
 entry.grid(row=row_index + 1, column=col_index)
 entry.insert(0, str(value)) # Insert user data into Entry widget
 entry.configure(state=&quot;disabled&quot;)


root = tk.Tk()
root.eval('tk::PlaceWindow . center')
WelcomeWindow(root)
root.mainloop()" style="color:#d8dee9ff;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path></svg></span><pre class="shiki nord" style="background-color: #2e3440ff" tabindex="0"><code><span class="line"><span style="color: #81A1C1">import</span><span style="color: #D8DEE9FF"> tkinter </span><span style="color: #81A1C1">as</span><span style="color: #D8DEE9FF"> tk</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color: #81A1C1">def</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">center_window</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9">width</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">height</span><span style="color: #ECEFF4">):</span></span>
<span class="line"><span style="color: #D8DEE9FF"> x </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9FF">root</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">winfo_screenwidth</span><span style="color: #ECEFF4">()</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">//</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">2</span><span style="color: #ECEFF4">)</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">-</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9FF">width </span><span style="color: #81A1C1">//</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">2</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF"> y </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9FF">root</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">winfo_screenheight</span><span style="color: #ECEFF4">()</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">//</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">2</span><span style="color: #ECEFF4">)</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">-</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9FF">height </span><span style="color: #81A1C1">//</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">2</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF"> root</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">geometry</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">f</span><span style="color: #A3BE8C">&#39;</span><span style="color: #EBCB8B">{</span><span style="color: #D8DEE9FF">width</span><span style="color: #EBCB8B">}</span><span style="color: #A3BE8C">x</span><span style="color: #EBCB8B">{</span><span style="color: #D8DEE9FF">height</span><span style="color: #EBCB8B">}</span><span style="color: #A3BE8C">+</span><span style="color: #EBCB8B">{</span><span style="color: #D8DEE9FF">x</span><span style="color: #EBCB8B">}</span><span style="color: #A3BE8C">+</span><span style="color: #EBCB8B">{</span><span style="color: #D8DEE9FF">y</span><span style="color: #EBCB8B">}</span><span style="color: #A3BE8C">&#39;</span><span style="color: #ECEFF4">)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color: #81A1C1">class</span><span style="color: #D8DEE9FF"> </span><span style="color: #8FBCBB">WelcomeWindow</span><span style="color: #ECEFF4">(</span><span style="color: #8FBCBB; font-weight: bold">tk</span><span style="color: #ECEFF4">.</span><span style="color: #8FBCBB; font-weight: bold">Frame</span><span style="color: #ECEFF4">):</span></span>
<span class="line"><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">def</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">__init__</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">master</span><span style="color: #ECEFF4">):</span></span>
<span class="line"><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">super</span><span style="color: #ECEFF4">().</span><span style="color: #88C0D0">__init__</span><span style="color: #ECEFF4">()</span></span>
<span class="line"><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">master </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> master</span></span>
<span class="line"><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">master</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">title</span><span style="color: #ECEFF4">(</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Welcome</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">center_window</span><span style="color: #ECEFF4">(</span><span style="color: #B48EAD">240</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">120</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF"> </span></span>
<span class="line"><span style="color: #D8DEE9FF"> login_button </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> tk</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">Button</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">text</span><span style="color: #81A1C1">=</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Login</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">width</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">10</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">command</span><span style="color: #81A1C1">=self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">open_login_window</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF"> login_button</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">pack</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9">padx</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">20</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">pady</span><span style="color: #81A1C1">=</span><span style="color: #ECEFF4">(</span><span style="color: #B48EAD">20</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">10</span><span style="color: #ECEFF4">))</span></span>
<span class="line"><span style="color: #D8DEE9FF"> </span></span>
<span class="line"><span style="color: #D8DEE9FF"> register_button </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> tk</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">Button</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">text</span><span style="color: #81A1C1">=</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Register</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">width</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">10</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">command</span><span style="color: #81A1C1">=self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">open_register_window</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF"> register_button</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">pack</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9">pady</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">10</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">pack</span><span style="color: #ECEFF4">()</span></span>
<span class="line"><span style="color: #D8DEE9FF"> </span></span>
<span class="line"><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">def</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">open_login_window</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">):</span></span>
<span class="line"><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">for</span><span style="color: #D8DEE9FF"> widget </span><span style="color: #81A1C1">in</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">winfo_children</span><span style="color: #ECEFF4">():</span><span style="color: #D8DEE9FF"> </span></span>
<span class="line"><span style="color: #D8DEE9FF"> widget</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">destroy</span><span style="color: #ECEFF4">()</span></span>
<span class="line"><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">destroy</span><span style="color: #ECEFF4">()</span></span>
<span class="line"><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">LoginWindow</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">master</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF"> </span></span>
<span class="line"><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">def</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">open_register_window</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">):</span></span>
<span class="line"><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">for</span><span style="color: #D8DEE9FF"> widget </span><span style="color: #81A1C1">in</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">winfo_children</span><span style="color: #ECEFF4">():</span><span style="color: #D8DEE9FF"> </span></span>
<span class="line"><span style="color: #D8DEE9FF"> widget</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">destroy</span><span style="color: #ECEFF4">()</span></span>
<span class="line"><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">destroy</span><span style="color: #ECEFF4">()</span></span>
<span class="line"><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">RegisterWindow</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">master</span><span style="color: #ECEFF4">)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color: #81A1C1">class</span><span style="color: #D8DEE9FF"> </span><span style="color: #8FBCBB">LoginWindow</span><span style="color: #ECEFF4">(</span><span style="color: #8FBCBB; font-weight: bold">tk</span><span style="color: #ECEFF4">.</span><span style="color: #8FBCBB; font-weight: bold">Frame</span><span style="color: #ECEFF4">):</span></span>
<span class="line"><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">def</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">__init__</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">master</span><span style="color: #ECEFF4">):</span></span>
<span class="line"><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">super</span><span style="color: #ECEFF4">().</span><span style="color: #88C0D0">__init__</span><span style="color: #ECEFF4">()</span></span>
<span class="line"><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">master </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> master</span></span>
<span class="line"><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">master</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">title</span><span style="color: #ECEFF4">(</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Login</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">master</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">resizable</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">False</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">False</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">center_window</span><span style="color: #ECEFF4">(</span><span style="color: #B48EAD">240</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">150</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF"> </span></span>
<span class="line"><span style="color: #D8DEE9FF"> tk</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">Label</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">text</span><span style="color: #81A1C1">=</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Username:</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">).</span><span style="color: #88C0D0">grid</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9">row</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">0</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">column</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">0</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">username_entry </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> tk</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">Entry</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">username_entry</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">grid</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9">row</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">0</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">column</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">1</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">padx</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">10</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">pady</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">10</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF"> </span></span>
<span class="line"><span style="color: #D8DEE9FF"> tk</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">Label</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">text</span><span style="color: #81A1C1">=</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Password:</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">).</span><span style="color: #88C0D0">grid</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9">row</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">1</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">column</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">0</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">password_entry </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> tk</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">Entry</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">show</span><span style="color: #81A1C1">=</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">*</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">password_entry</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">grid</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9">row</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">1</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">column</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">1</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">padx</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">10</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">pady</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">10</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF"> </span></span>
<span class="line"><span style="color: #D8DEE9FF"> submit_button </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> tk</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">Button</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">text</span><span style="color: #81A1C1">=</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Submit</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">width</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">8</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">command</span><span style="color: #81A1C1">=self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">submit</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF"> submit_button</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">grid</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9">row</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">2</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">column</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">1</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">sticky</span><span style="color: #81A1C1">=</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">e</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">padx</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">10</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">pady</span><span style="color: #81A1C1">=</span><span style="color: #ECEFF4">(</span><span style="color: #B48EAD">10</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">0</span><span style="color: #ECEFF4">))</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D8DEE9FF"> submit_button </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> tk</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">Button</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">text</span><span style="color: #81A1C1">=</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Back</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">width</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">8</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">command</span><span style="color: #81A1C1">=self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">back</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF"> submit_button</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">grid</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9">row</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">2</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">column</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">0</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">sticky</span><span style="color: #81A1C1">=</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">w</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">padx</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">10</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">pady</span><span style="color: #81A1C1">=</span><span style="color: #ECEFF4">(</span><span style="color: #B48EAD">10</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">0</span><span style="color: #ECEFF4">))</span></span>
<span class="line"><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">pack</span><span style="color: #ECEFF4">()</span></span>
<span class="line"><span style="color: #D8DEE9FF"> </span></span>
<span class="line"><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">def</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">submit</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">):</span></span>
<span class="line"><span style="color: #D8DEE9FF"> username </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">username_entry</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">get</span><span style="color: #ECEFF4">()</span></span>
<span class="line"><span style="color: #D8DEE9FF"> password </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">password_entry</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">get</span><span style="color: #ECEFF4">()</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D8DEE9FF"> </span><span style="color: #616E88"># PLACEHOLDER (Authenticate User)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">if</span><span style="color: #D8DEE9FF"> user</span><span style="color: #ECEFF4">:</span></span>
<span class="line"><span style="color: #D8DEE9FF"> </span><span style="color: #616E88"># Logged in</span></span>
<span class="line"><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">MainWindow</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">master</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">destroy</span><span style="color: #ECEFF4">()</span></span>
<span class="line"><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">else</span><span style="color: #ECEFF4">:</span></span>
<span class="line"><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">print</span><span style="color: #ECEFF4">(</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">You have typed in the wrong details</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">username_entry</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">delete</span><span style="color: #ECEFF4">(</span><span style="color: #B48EAD">0</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> tk</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">END</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">password_entry</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">delete</span><span style="color: #ECEFF4">(</span><span style="color: #B48EAD">0</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> tk</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">END</span><span style="color: #ECEFF4">)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">def</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">back</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">):</span></span>
<span class="line"><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">for</span><span style="color: #D8DEE9FF"> widget </span><span style="color: #81A1C1">in</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">winfo_children</span><span style="color: #ECEFF4">():</span><span style="color: #D8DEE9FF"> </span></span>
<span class="line"><span style="color: #D8DEE9FF"> widget</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">destroy</span><span style="color: #ECEFF4">()</span></span>
<span class="line"><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">destroy</span><span style="color: #ECEFF4">()</span></span>
<span class="line"><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">WelcomeWindow</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">master</span><span style="color: #ECEFF4">)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color: #81A1C1">class</span><span style="color: #D8DEE9FF"> </span><span style="color: #8FBCBB">RegisterWindow</span><span style="color: #ECEFF4">(</span><span style="color: #8FBCBB; font-weight: bold">tk</span><span style="color: #ECEFF4">.</span><span style="color: #8FBCBB; font-weight: bold">Frame</span><span style="color: #ECEFF4">):</span></span>
<span class="line"><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">def</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">__init__</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">master</span><span style="color: #ECEFF4">):</span></span>
<span class="line"><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">super</span><span style="color: #ECEFF4">().</span><span style="color: #88C0D0">__init__</span><span style="color: #ECEFF4">()</span></span>
<span class="line"><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">master </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> master</span></span>
<span class="line"><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">master</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">title</span><span style="color: #ECEFF4">(</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Register</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">master</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">resizable</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">False</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">False</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">center_window</span><span style="color: #ECEFF4">(</span><span style="color: #B48EAD">320</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">350</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF"> </span></span>
<span class="line"><span style="color: #D8DEE9FF"> tk</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">Label</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">text</span><span style="color: #81A1C1">=</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Name:</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">).</span><span style="color: #88C0D0">grid</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9">row</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">0</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">column</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">0</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">sticky</span><span style="color: #81A1C1">=</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">w</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">first_name_entry </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> tk</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">Entry</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">width</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">26</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">first_name_entry</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">grid</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9">row</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">0</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">column</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">1</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">padx</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">10</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">pady</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">10</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">sticky</span><span style="color: #81A1C1">=</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">e</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF"> </span></span>
<span class="line"><span style="color: #D8DEE9FF"> tk</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">Label</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">text</span><span style="color: #81A1C1">=</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Password:</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">).</span><span style="color: #88C0D0">grid</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9">row</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">2</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">column</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">0</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">sticky</span><span style="color: #81A1C1">=</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">w</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">password_entry </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> tk</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">Entry</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">show</span><span style="color: #81A1C1">=</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">*</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">width</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">26</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">password_entry</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">grid</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9">row</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">2</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">column</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">1</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">padx</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">10</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">pady</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">10</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">sticky</span><span style="color: #81A1C1">=</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">e</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF"> </span></span>
<span class="line"><span style="color: #D8DEE9FF"> tk</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">Label</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">text</span><span style="color: #81A1C1">=</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Email:</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">).</span><span style="color: #88C0D0">grid</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9">row</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">3</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">column</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">0</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">sticky</span><span style="color: #81A1C1">=</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">w</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">email_entry </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> tk</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">Entry</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">width</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">26</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">email_entry</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">grid</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9">row</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">3</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">column</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">1</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">padx</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">10</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">pady</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">10</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">sticky</span><span style="color: #81A1C1">=</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">e</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF"> </span></span>
<span class="line"><span style="color: #D8DEE9FF"> tk</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">Label</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">text</span><span style="color: #81A1C1">=</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Gender:</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">).</span><span style="color: #88C0D0">grid</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9">row</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">4</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">column</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">0</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">sticky</span><span style="color: #81A1C1">=</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">w</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">gender_entry </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> tk</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">Entry</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">width</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">10</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">gender_entry</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">grid</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9">row</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">4</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">column</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">1</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">padx</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">10</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">pady</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">10</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">sticky</span><span style="color: #81A1C1">=</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">e</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF"> </span></span>
<span class="line"><span style="color: #D8DEE9FF"> tk</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">Label</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">text</span><span style="color: #81A1C1">=</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Age:</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">).</span><span style="color: #88C0D0">grid</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9">row</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">5</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">column</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">0</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">sticky</span><span style="color: #81A1C1">=</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">w</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">age_entry </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> tk</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">Entry</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">width</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">10</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">age_entry</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">grid</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9">row</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">5</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">column</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">1</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">padx</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">10</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">pady</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">10</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">sticky</span><span style="color: #81A1C1">=</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">e</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF"> </span></span>
<span class="line"><span style="color: #D8DEE9FF"> tk</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">Label</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">text</span><span style="color: #81A1C1">=</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Address:</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">).</span><span style="color: #88C0D0">grid</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9">row</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">6</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">column</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">0</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">sticky</span><span style="color: #81A1C1">=</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">w</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">address_entry </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> tk</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">Text</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">width</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">20</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">height</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">3</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">address_entry</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">grid</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9">row</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">6</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">column</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">1</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">padx</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">10</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">pady</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">10</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">sticky</span><span style="color: #81A1C1">=</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">e</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF"> </span></span>
<span class="line"><span style="color: #D8DEE9FF"> submit_button </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> tk</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">Button</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">text</span><span style="color: #81A1C1">=</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Submit</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">width</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">8</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">command</span><span style="color: #81A1C1">=self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">submit</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF"> submit_button</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">grid</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9">row</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">7</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">column</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">1</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">padx</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">10</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">pady</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">10</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">sticky</span><span style="color: #81A1C1">=</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">e</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D8DEE9FF"> submit_button </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> tk</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">Button</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">text</span><span style="color: #81A1C1">=</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Back</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">width</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">8</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">command</span><span style="color: #81A1C1">=self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">back</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF"> submit_button</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">grid</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9">row</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">7</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">column</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">0</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">sticky</span><span style="color: #81A1C1">=</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">w</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">padx</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">10</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">pady</span><span style="color: #81A1C1">=</span><span style="color: #ECEFF4">(</span><span style="color: #B48EAD">10</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">10</span><span style="color: #ECEFF4">))</span></span>
<span class="line"><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">pack</span><span style="color: #ECEFF4">()</span></span>
<span class="line"><span style="color: #D8DEE9FF"> </span></span>
<span class="line"><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">def</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">submit</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">):</span><span style="color: #D8DEE9FF"> </span></span>
<span class="line"><span style="color: #D8DEE9FF"> user_data </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">first_name_entry</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">get</span><span style="color: #ECEFF4">().</span><span style="color: #88C0D0">strip</span><span style="color: #ECEFF4">(),</span><span style="color: #D8DEE9FF"> </span></span>
<span class="line"><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">password_entry</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">get</span><span style="color: #ECEFF4">().</span><span style="color: #88C0D0">strip</span><span style="color: #ECEFF4">(),</span><span style="color: #D8DEE9FF"> </span></span>
<span class="line"><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">email_entry</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">get</span><span style="color: #ECEFF4">().</span><span style="color: #88C0D0">strip</span><span style="color: #ECEFF4">(),</span><span style="color: #D8DEE9FF"> </span></span>
<span class="line"><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">age_entry</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">get</span><span style="color: #ECEFF4">().</span><span style="color: #88C0D0">strip</span><span style="color: #ECEFF4">(),</span></span>
<span class="line"><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">gender_entry</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">get</span><span style="color: #ECEFF4">().</span><span style="color: #88C0D0">strip</span><span style="color: #ECEFF4">(),</span><span style="color: #D8DEE9FF"> </span></span>
<span class="line"><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">address_entry</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">get</span><span style="color: #ECEFF4">(</span><span style="color: #B48EAD">1.0</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> tk</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">END</span><span style="color: #ECEFF4">).</span><span style="color: #88C0D0">strip</span><span style="color: #ECEFF4">())</span></span>
<span class="line"><span style="color: #D8DEE9FF"> </span></span>
<span class="line"><span style="color: #D8DEE9FF"> </span><span style="color: #616E88"># PLACEHOLDER (Insert new user data in database)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">destroy</span><span style="color: #ECEFF4">()</span></span>
<span class="line"><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">MainWindow</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">master</span><span style="color: #ECEFF4">)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">def</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">back</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">):</span></span>
<span class="line"><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">for</span><span style="color: #D8DEE9FF"> widget </span><span style="color: #81A1C1">in</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">winfo_children</span><span style="color: #ECEFF4">():</span><span style="color: #D8DEE9FF"> </span></span>
<span class="line"><span style="color: #D8DEE9FF"> widget</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">destroy</span><span style="color: #ECEFF4">()</span></span>
<span class="line"><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">destroy</span><span style="color: #ECEFF4">()</span></span>
<span class="line"><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">WelcomeWindow</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">master</span><span style="color: #ECEFF4">)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color: #81A1C1">class</span><span style="color: #D8DEE9FF"> </span><span style="color: #8FBCBB">MainWindow</span><span style="color: #ECEFF4">(</span><span style="color: #8FBCBB; font-weight: bold">tk</span><span style="color: #ECEFF4">.</span><span style="color: #8FBCBB; font-weight: bold">Frame</span><span style="color: #ECEFF4">):</span></span>
<span class="line"><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">def</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">__init__</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">master</span><span style="color: #ECEFF4">):</span></span>
<span class="line"><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">super</span><span style="color: #ECEFF4">().</span><span style="color: #88C0D0">__init__</span><span style="color: #ECEFF4">()</span></span>
<span class="line"><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">master </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> master</span></span>
<span class="line"><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">center_window</span><span style="color: #ECEFF4">(</span><span style="color: #B48EAD">600</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">400</span><span style="color: #ECEFF4">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">generateUserList</span><span style="color: #ECEFF4">()</span></span>
<span class="line"><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">pack</span><span style="color: #ECEFF4">()</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">def</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">generateUserList</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">):</span></span>
<span class="line"><span style="color: #D8DEE9FF"> </span><span style="color: #616E88"># PLACEHOLDER (Fetch Users Data)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D8DEE9FF"> columns </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">[</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">ID</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Name</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Password</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Email</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Age</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Gender</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Address</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">]</span></span>
<span class="line"><span style="color: #D8DEE9FF"> column_widths </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">[</span><span style="color: #B48EAD">5</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">10</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">10</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">30</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">5</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">10</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">20</span><span style="color: #ECEFF4">]</span></span>
<span class="line"><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">for</span><span style="color: #D8DEE9FF"> col_index</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> col_name </span><span style="color: #81A1C1">in</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">enumerate</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9FF">columns</span><span style="color: #ECEFF4">):</span></span>
<span class="line"><span style="color: #D8DEE9FF"> label </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> tk</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">Label</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">text</span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF">col_name</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">padx</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">5</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">pady</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">5</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF"> label</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">grid</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9">row</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">0</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">column</span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF">col_index</span><span style="color: #ECEFF4">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D8DEE9FF"> </span><span style="color: #616E88"># Iterate over users and create Entry widgets</span></span>
<span class="line"><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">for</span><span style="color: #D8DEE9FF"> row_index</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> user </span><span style="color: #81A1C1">in</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">enumerate</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9FF">users</span><span style="color: #ECEFF4">):</span></span>
<span class="line"><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">for</span><span style="color: #D8DEE9FF"> col_index</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> value </span><span style="color: #81A1C1">in</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">enumerate</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9FF">user</span><span style="color: #ECEFF4">):</span></span>
<span class="line"><span style="color: #D8DEE9FF"> entry </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> tk</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">Entry</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">width</span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF">column_widths</span><span style="color: #ECEFF4">[</span><span style="color: #D8DEE9FF">col_index</span><span style="color: #ECEFF4">],</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">disabledforeground</span><span style="color: #81A1C1">=</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">black</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF"> entry</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">grid</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9">row</span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF">row_index </span><span style="color: #81A1C1">+</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">1</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">column</span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF">col_index</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF"> entry</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">insert</span><span style="color: #ECEFF4">(</span><span style="color: #B48EAD">0</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">str</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9FF">value</span><span style="color: #ECEFF4">))</span><span style="color: #D8DEE9FF"> </span><span style="color: #616E88"># Insert user data into Entry widget</span></span>
<span class="line"><span style="color: #D8DEE9FF"> entry</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">configure</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9">state</span><span style="color: #81A1C1">=</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">disabled</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color: #D8DEE9FF">root </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> tk</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">Tk</span><span style="color: #ECEFF4">()</span></span>
<span class="line"><span style="color: #D8DEE9FF">root</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">eval</span><span style="color: #ECEFF4">(</span><span style="color: #ECEFF4">&#39;</span><span style="color: #A3BE8C">tk::PlaceWindow . center</span><span style="color: #ECEFF4">&#39;</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #88C0D0">WelcomeWindow</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9FF">root</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">root</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">mainloop</span><span style="color: #ECEFF4">()</span></span></code></pre></div>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<hr>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<h2 class="wp-block-heading">Integrating SQLite into our Tkinter Application</h2>



<p>First, we need to initialize the SQL database connection to communicate with it.</p>



<div class="wp-block-kevinbatdorf-code-block-pro" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:block;padding:16px 0 0 16px;margin-bottom:-1px;width:100%;text-align:left;background-color:#2e3440ff"><svg xmlns="http://www.w3.org/2000/svg" width="54" height="14" viewBox="0 0 54 14"><g fill="none" fill-rule="evenodd" transform="translate(1 1)"><circle cx="6" cy="6" r="6" fill="#FF5F56" stroke="#E0443E" stroke-width=".5"></circle><circle cx="26" cy="6" r="6" fill="#FFBD2E" stroke="#DEA123" stroke-width=".5"></circle><circle cx="46" cy="6" r="6" fill="#27C93F" stroke="#1AAB29" stroke-width=".5"></circle></g></svg></span><span role="button" tabindex="0" data-code="import sqlite3

conn = sqlite3.connect(&quot;tutorial.db&quot;)
cursor = conn.cursor()" style="color:#d8dee9ff;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path></svg></span><pre class="shiki nord" style="background-color: #2e3440ff" tabindex="0"><code><span class="line"><span style="color: #81A1C1">import</span><span style="color: #D8DEE9FF"> sqlite3</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D8DEE9FF">conn </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> sqlite3</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">connect</span><span style="color: #ECEFF4">(</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">tutorial.db</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">cursor </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> conn</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">cursor</span><span style="color: #ECEFF4">()</span></span></code></pre></div>



<p>Next, we create a Table for our user data to be stored. </p>



<div class="wp-block-kevinbatdorf-code-block-pro" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:flex;align-items:center;padding:10px 0px 10px 16px;margin-bottom:-2px;width:100%;text-align:left;background-color:#2b2b2b;color:#c7c7c7">Python</span><span role="button" tabindex="0" data-code="
add_user_query = &quot;&quot;&quot;CREATE TABLE IF NOT EXISTS users (
 id integer PRIMARY KEY AUTOINCREMENT,
 name text NOT NULL,
 password text NOT NULL,
 email text NOT NULL,
 age integer,
 gender text,
 address text
 ); &quot;&quot;&quot; 
cursor.execute(add_user_query)
conn.commit()" style="color:#D4D4D4;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path></svg></span><pre class="shiki dark-plus" style="background-color: #1E1E1E" tabindex="0"><code><span class="line"></span>
<span class="line"><span style="color: #D4D4D4">add_user_query = </span><span style="color: #CE9178">&quot;&quot;&quot;CREATE TABLE IF NOT EXISTS users (</span></span>
<span class="line"><span style="color: #CE9178"> id integer PRIMARY KEY AUTOINCREMENT,</span></span>
<span class="line"><span style="color: #CE9178"> name text NOT NULL,</span></span>
<span class="line"><span style="color: #CE9178"> password text NOT NULL,</span></span>
<span class="line"><span style="color: #CE9178"> email text NOT NULL,</span></span>
<span class="line"><span style="color: #CE9178"> age integer,</span></span>
<span class="line"><span style="color: #CE9178"> gender text,</span></span>
<span class="line"><span style="color: #CE9178"> address text</span></span>
<span class="line"><span style="color: #CE9178"> ); &quot;&quot;&quot;</span><span style="color: #D4D4D4"> </span></span>
<span class="line"><span style="color: #D4D4D4">cursor.execute(add_user_query)</span></span>
<span class="line"><span style="color: #D4D4D4">conn.commit()</span></span></code></pre></div>



<p>Remember to commit your changes after making changes to the database, otherwise they won&#8217;t get saved!</p>



<p>The first proper method we will write is for the registration of a user, in the submit() method of the Registration window. All we need to do is get the text from the UI, and insert it into the Table we just created. Make sure the order of the values is the same as the order of columns.</p>



<div class="wp-block-kevinbatdorf-code-block-pro" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:flex;align-items:center;padding:10px 0px 10px 16px;margin-bottom:-2px;width:100%;text-align:left;background-color:#2b2b2b;color:#c7c7c7">Python</span><span role="button" tabindex="0" data-code=" def submit(self):
 insert_user_data = &quot;&quot;&quot;INSERT INTO users(name, password, email, age, gender, address)
 VALUES (?, ?, ?, ?, ?, ?)&quot;&quot;&quot;
 
 user_data = (self.first_name_entry.get().strip(), 
 self.password_entry.get().strip(), 
 self.email_entry.get().strip(), 
 self.age_entry.get().strip(),
 self.gender_entry.get().strip(), 
 self.address_entry.get(1.0, tk.END).strip())
 
 cursor.execute(insert_user_data, user_data)
 conn.commit()

 self.destroy()
 MainWindow(self.master)" style="color:#D4D4D4;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path></svg></span><pre class="shiki dark-plus" style="background-color: #1E1E1E" tabindex="0"><code><span class="line"><span style="color: #D4D4D4"> </span><span style="color: #569CD6">def</span><span style="color: #D4D4D4"> </span><span style="color: #DCDCAA">submit</span><span style="color: #D4D4D4">(</span><span style="color: #9CDCFE">self</span><span style="color: #D4D4D4">):</span></span>
<span class="line"><span style="color: #D4D4D4"> insert_user_data = </span><span style="color: #CE9178">&quot;&quot;&quot;INSERT INTO users(name, password, email, age, gender, address)</span></span>
<span class="line"><span style="color: #CE9178"> VALUES (?, ?, ?, ?, ?, ?)&quot;&quot;&quot;</span></span>
<span class="line"><span style="color: #D4D4D4"> </span></span>
<span class="line"><span style="color: #D4D4D4"> user_data = (</span><span style="color: #569CD6">self</span><span style="color: #D4D4D4">.first_name_entry.get().strip(), </span></span>
<span class="line"><span style="color: #D4D4D4"> </span><span style="color: #569CD6">self</span><span style="color: #D4D4D4">.password_entry.get().strip(), </span></span>
<span class="line"><span style="color: #D4D4D4"> </span><span style="color: #569CD6">self</span><span style="color: #D4D4D4">.email_entry.get().strip(), </span></span>
<span class="line"><span style="color: #D4D4D4"> </span><span style="color: #569CD6">self</span><span style="color: #D4D4D4">.age_entry.get().strip(),</span></span>
<span class="line"><span style="color: #D4D4D4"> </span><span style="color: #569CD6">self</span><span style="color: #D4D4D4">.gender_entry.get().strip(), </span></span>
<span class="line"><span style="color: #D4D4D4"> </span><span style="color: #569CD6">self</span><span style="color: #D4D4D4">.address_entry.get(</span><span style="color: #B5CEA8">1.0</span><span style="color: #D4D4D4">, tk.END).strip())</span></span>
<span class="line"><span style="color: #D4D4D4"> </span></span>
<span class="line"><span style="color: #D4D4D4"> cursor.execute(insert_user_data, user_data)</span></span>
<span class="line"><span style="color: #D4D4D4"> conn.commit()</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D4D4D4"> </span><span style="color: #569CD6">self</span><span style="color: #D4D4D4">.destroy()</span></span>
<span class="line"><span style="color: #D4D4D4"> MainWindow(</span><span style="color: #569CD6">self</span><span style="color: #D4D4D4">.master)</span></span></code></pre></div>



<p>Next, in the submit method for the Login window, we write some SQL to retrieve a user against the given username and password that the user has provided. If a record is returned (i.e. the user exists) we forward him to the main window.</p>



<div class="wp-block-kevinbatdorf-code-block-pro" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:flex;align-items:center;padding:10px 0px 10px 16px;margin-bottom:-2px;width:100%;text-align:left;background-color:#2b2b2b;color:#c7c7c7">Python</span><span role="button" tabindex="0" data-code=" def submit(self):
 username = self.username_entry.get()
 password = self.password_entry.get()

 cursor.execute(&quot;SELECT * FROM users WHERE name=? AND password=?&quot;, (username, password))
 user = cursor.fetchone()

 if user:
 # Logged in
 MainWindow(self.master)
 self.destroy()
 else:
 print(&quot;You have typed in the wrong details&quot;)
 self.username_entry.delete(0, tk.END)
 self.password_entry.delete(0, tk.END)" style="color:#D4D4D4;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path></svg></span><pre class="shiki dark-plus" style="background-color: #1E1E1E" tabindex="0"><code><span class="line"><span style="color: #D4D4D4"> </span><span style="color: #569CD6">def</span><span style="color: #D4D4D4"> </span><span style="color: #DCDCAA">submit</span><span style="color: #D4D4D4">(</span><span style="color: #9CDCFE">self</span><span style="color: #D4D4D4">):</span></span>
<span class="line"><span style="color: #D4D4D4"> username = </span><span style="color: #569CD6">self</span><span style="color: #D4D4D4">.username_entry.get()</span></span>
<span class="line"><span style="color: #D4D4D4"> password = </span><span style="color: #569CD6">self</span><span style="color: #D4D4D4">.password_entry.get()</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D4D4D4"> cursor.execute(</span><span style="color: #CE9178">&quot;SELECT * FROM users WHERE name=? AND password=?&quot;</span><span style="color: #D4D4D4">, (username, password))</span></span>
<span class="line"><span style="color: #D4D4D4"> user = cursor.fetchone()</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D4D4D4"> </span><span style="color: #C586C0">if</span><span style="color: #D4D4D4"> user:</span></span>
<span class="line"><span style="color: #D4D4D4"> </span><span style="color: #6A9955"># Logged in</span></span>
<span class="line"><span style="color: #D4D4D4"> MainWindow(</span><span style="color: #569CD6">self</span><span style="color: #D4D4D4">.master)</span></span>
<span class="line"><span style="color: #D4D4D4"> </span><span style="color: #569CD6">self</span><span style="color: #D4D4D4">.destroy()</span></span>
<span class="line"><span style="color: #D4D4D4"> </span><span style="color: #C586C0">else</span><span style="color: #D4D4D4">:</span></span>
<span class="line"><span style="color: #D4D4D4"> </span><span style="color: #DCDCAA">print</span><span style="color: #D4D4D4">(</span><span style="color: #CE9178">&quot;You have typed in the wrong details&quot;</span><span style="color: #D4D4D4">)</span></span>
<span class="line"><span style="color: #D4D4D4"> </span><span style="color: #569CD6">self</span><span style="color: #D4D4D4">.username_entry.delete(</span><span style="color: #B5CEA8">0</span><span style="color: #D4D4D4">, tk.END)</span></span>
<span class="line"><span style="color: #D4D4D4"> </span><span style="color: #569CD6">self</span><span style="color: #D4D4D4">.password_entry.delete(</span><span style="color: #B5CEA8">0</span><span style="color: #D4D4D4">, tk.END)</span></span></code></pre></div>



<p>Lastly, we will write a simple Query to retrieve all user data and display it on the main page.</p>



<div class="wp-block-kevinbatdorf-code-block-pro" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:flex;align-items:center;padding:10px 0px 10px 16px;margin-bottom:-2px;width:100%;text-align:left;background-color:#2b2b2b;color:#c7c7c7">Python</span><span role="button" tabindex="0" data-code=" def generateUserList(self):
 cursor.execute(&quot;SELECT * FROM users&quot;)
 users = cursor.fetchall()

 columns = [&quot;ID&quot;, &quot;Name&quot;, &quot;Password&quot;, &quot;Email&quot;, &quot;Age&quot;, &quot;Gender&quot;, &quot;Address&quot;]
 column_widths = [5, 10, 10, 30, 5, 10, 20]
 for col_index, col_name in enumerate(columns):
 label = tk.Label(self, text=col_name, padx=5, pady=5)
 label.grid(row=0, column=col_index)

 # Iterate over users and create Entry widgets
 for row_index, user in enumerate(users):
 for col_index, value in enumerate(user):
 entry = tk.Entry(self, width=column_widths[col_index], disabledforeground=&quot;black&quot;)
 entry.grid(row=row_index + 1, column=col_index)
 entry.insert(0, str(value)) # Insert user data into Entry widget
 entry.configure(state=&quot;disabled&quot;)" style="color:#D4D4D4;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path></svg></span><pre class="shiki dark-plus" style="background-color: #1E1E1E" tabindex="0"><code><span class="line"><span style="color: #D4D4D4"> </span><span style="color: #569CD6">def</span><span style="color: #D4D4D4"> </span><span style="color: #DCDCAA">generateUserList</span><span style="color: #D4D4D4">(</span><span style="color: #9CDCFE">self</span><span style="color: #D4D4D4">):</span></span>
<span class="line"><span style="color: #D4D4D4"> cursor.execute(</span><span style="color: #CE9178">&quot;SELECT * FROM users&quot;</span><span style="color: #D4D4D4">)</span></span>
<span class="line"><span style="color: #D4D4D4"> users = cursor.fetchall()</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D4D4D4"> columns = [</span><span style="color: #CE9178">&quot;ID&quot;</span><span style="color: #D4D4D4">, </span><span style="color: #CE9178">&quot;Name&quot;</span><span style="color: #D4D4D4">, </span><span style="color: #CE9178">&quot;Password&quot;</span><span style="color: #D4D4D4">, </span><span style="color: #CE9178">&quot;Email&quot;</span><span style="color: #D4D4D4">, </span><span style="color: #CE9178">&quot;Age&quot;</span><span style="color: #D4D4D4">, </span><span style="color: #CE9178">&quot;Gender&quot;</span><span style="color: #D4D4D4">, </span><span style="color: #CE9178">&quot;Address&quot;</span><span style="color: #D4D4D4">]</span></span>
<span class="line"><span style="color: #D4D4D4"> column_widths = [</span><span style="color: #B5CEA8">5</span><span style="color: #D4D4D4">, </span><span style="color: #B5CEA8">10</span><span style="color: #D4D4D4">, </span><span style="color: #B5CEA8">10</span><span style="color: #D4D4D4">, </span><span style="color: #B5CEA8">30</span><span style="color: #D4D4D4">, </span><span style="color: #B5CEA8">5</span><span style="color: #D4D4D4">, </span><span style="color: #B5CEA8">10</span><span style="color: #D4D4D4">, </span><span style="color: #B5CEA8">20</span><span style="color: #D4D4D4">]</span></span>
<span class="line"><span style="color: #D4D4D4"> </span><span style="color: #C586C0">for</span><span style="color: #D4D4D4"> col_index, col_name </span><span style="color: #C586C0">in</span><span style="color: #D4D4D4"> </span><span style="color: #DCDCAA">enumerate</span><span style="color: #D4D4D4">(columns):</span></span>
<span class="line"><span style="color: #D4D4D4"> label = tk.Label(</span><span style="color: #569CD6">self</span><span style="color: #D4D4D4">, </span><span style="color: #9CDCFE">text</span><span style="color: #D4D4D4">=col_name, </span><span style="color: #9CDCFE">padx</span><span style="color: #D4D4D4">=</span><span style="color: #B5CEA8">5</span><span style="color: #D4D4D4">, </span><span style="color: #9CDCFE">pady</span><span style="color: #D4D4D4">=</span><span style="color: #B5CEA8">5</span><span style="color: #D4D4D4">)</span></span>
<span class="line"><span style="color: #D4D4D4"> label.grid(</span><span style="color: #9CDCFE">row</span><span style="color: #D4D4D4">=</span><span style="color: #B5CEA8">0</span><span style="color: #D4D4D4">, </span><span style="color: #9CDCFE">column</span><span style="color: #D4D4D4">=col_index)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D4D4D4"> </span><span style="color: #6A9955"># Iterate over users and create Entry widgets</span></span>
<span class="line"><span style="color: #D4D4D4"> </span><span style="color: #C586C0">for</span><span style="color: #D4D4D4"> row_index, user </span><span style="color: #C586C0">in</span><span style="color: #D4D4D4"> </span><span style="color: #DCDCAA">enumerate</span><span style="color: #D4D4D4">(users):</span></span>
<span class="line"><span style="color: #D4D4D4"> </span><span style="color: #C586C0">for</span><span style="color: #D4D4D4"> col_index, value </span><span style="color: #C586C0">in</span><span style="color: #D4D4D4"> </span><span style="color: #DCDCAA">enumerate</span><span style="color: #D4D4D4">(user):</span></span>
<span class="line"><span style="color: #D4D4D4"> entry = tk.Entry(</span><span style="color: #569CD6">self</span><span style="color: #D4D4D4">, </span><span style="color: #9CDCFE">width</span><span style="color: #D4D4D4">=column_widths[col_index], </span><span style="color: #9CDCFE">disabledforeground</span><span style="color: #D4D4D4">=</span><span style="color: #CE9178">&quot;black&quot;</span><span style="color: #D4D4D4">)</span></span>
<span class="line"><span style="color: #D4D4D4"> entry.grid(</span><span style="color: #9CDCFE">row</span><span style="color: #D4D4D4">=row_index + </span><span style="color: #B5CEA8">1</span><span style="color: #D4D4D4">, </span><span style="color: #9CDCFE">column</span><span style="color: #D4D4D4">=col_index)</span></span>
<span class="line"><span style="color: #D4D4D4"> entry.insert(</span><span style="color: #B5CEA8">0</span><span style="color: #D4D4D4">, </span><span style="color: #4EC9B0">str</span><span style="color: #D4D4D4">(value)) </span><span style="color: #6A9955"># Insert user data into Entry widget</span></span>
<span class="line"><span style="color: #D4D4D4"> entry.configure(</span><span style="color: #9CDCFE">state</span><span style="color: #D4D4D4">=</span><span style="color: #CE9178">&quot;disabled&quot;</span><span style="color: #D4D4D4">)</span></span></code></pre></div>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<hr>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<h2 class="wp-block-heading">The Complete Code</h2>



<div class="wp-block-kevinbatdorf-code-block-pro" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:flex;align-items:center;padding:10px 0px 10px 16px;margin-bottom:-2px;width:100%;text-align:left;background-color:#2b2b2b;color:#c7c7c7">Python</span><span role="button" tabindex="0" data-code="import tkinter as tk
import sqlite3

conn = sqlite3.connect(&quot;tutorial.db&quot;)
cursor = conn.cursor()


add_user_query = &quot;&quot;&quot;CREATE TABLE IF NOT EXISTS users (
 id integer PRIMARY KEY AUTOINCREMENT,
 name text NOT NULL,
 password text NOT NULL,
 email text NOT NULL,
 age integer,
 gender text,
 address text
 ); &quot;&quot;&quot; 
cursor.execute(add_user_query)
conn.commit()


def center_window(width, height):
 x = (root.winfo_screenwidth() // 2) - (width // 2)
 y = (root.winfo_screenheight() // 2) - (height // 2)
 root.geometry(f'{width}x{height}+{x}+{y}')


class WelcomeWindow(tk.Frame):
 def __init__(self, master):
 super().__init__()
 self.master = master
 self.master.title(&quot;Welcome&quot;)
 center_window(240, 120)
 
 login_button = tk.Button(self, text=&quot;Login&quot;, width=10, command=self.open_login_window)
 login_button.pack(padx=20, pady=(20, 10))
 
 register_button = tk.Button(self, text=&quot;Register&quot;, width=10, command=self.open_register_window)
 register_button.pack(pady=10)
 self.pack()
 
 def open_login_window(self):
 for widget in self.winfo_children(): 
 widget.destroy()
 self.destroy()
 LoginWindow(self.master)
 
 def open_register_window(self):
 for widget in self.winfo_children(): 
 widget.destroy()
 self.destroy()
 RegisterWindow(self.master)


class LoginWindow(tk.Frame):
 def __init__(self, master):
 super().__init__()
 self.master = master
 self.master.title(&quot;Login&quot;)
 self.master.resizable(False, False)
 center_window(240, 150)
 
 tk.Label(self, text=&quot;Username:&quot;).grid(row=0, column=0)
 self.username_entry = tk.Entry(self)
 self.username_entry.grid(row=0, column=1, padx=10, pady=10)
 
 tk.Label(self, text=&quot;Password:&quot;).grid(row=1, column=0)
 self.password_entry = tk.Entry(self, show=&quot;*&quot;)
 self.password_entry.grid(row=1, column=1, padx=10, pady=10)
 
 submit_button = tk.Button(self, text=&quot;Submit&quot;, width=8, command=self.submit)
 submit_button.grid(row=2, column=1, sticky=&quot;e&quot;, padx=10, pady=(10, 0))

 submit_button = tk.Button(self, text=&quot;Back&quot;, width=8, command=self.back)
 submit_button.grid(row=2, column=0, sticky=&quot;w&quot;, padx=10, pady=(10, 0))
 self.pack()
 
 def submit(self):
 username = self.username_entry.get()
 password = self.password_entry.get()

 cursor.execute(&quot;SELECT * FROM users WHERE name=? AND password=?&quot;, (username, password))
 user = cursor.fetchone()

 if user:
 # Logged in
 MainWindow(self.master)
 self.destroy()
 else:
 print(&quot;You have typed in the wrong details&quot;)
 self.username_entry.delete(0, tk.END)
 self.password_entry.delete(0, tk.END)


 def back(self):
 for widget in self.winfo_children(): 
 widget.destroy()
 self.destroy()
 WelcomeWindow(self.master)


class RegisterWindow(tk.Frame):
 def __init__(self, master):
 super().__init__()
 self.master = master
 self.master.title(&quot;Register&quot;)
 self.master.resizable(False, False)
 center_window(320, 350)
 
 tk.Label(self, text=&quot;Name:&quot;).grid(row=0, column=0, sticky=&quot;w&quot;)
 self.first_name_entry = tk.Entry(self, width=26)
 self.first_name_entry.grid(row=0, column=1, padx=10, pady=10, sticky=&quot;e&quot;)
 
 tk.Label(self, text=&quot;Password:&quot;).grid(row=2, column=0, sticky=&quot;w&quot;)
 self.password_entry = tk.Entry(self, show=&quot;*&quot;, width=26)
 self.password_entry.grid(row=2, column=1, padx=10, pady=10, sticky=&quot;e&quot;)
 
 tk.Label(self, text=&quot;Email:&quot;).grid(row=3, column=0, sticky=&quot;w&quot;)
 self.email_entry = tk.Entry(self, width=26)
 self.email_entry.grid(row=3, column=1, padx=10, pady=10, sticky=&quot;e&quot;)
 
 tk.Label(self, text=&quot;Gender:&quot;).grid(row=4, column=0, sticky=&quot;w&quot;)
 self.gender_entry = tk.Entry(self, width=10)
 self.gender_entry.grid(row=4, column=1, padx=10, pady=10, sticky=&quot;e&quot;)
 
 tk.Label(self, text=&quot;Age:&quot;).grid(row=5, column=0, sticky=&quot;w&quot;)
 self.age_entry = tk.Entry(self, width=10)
 self.age_entry.grid(row=5, column=1, padx=10, pady=10, sticky=&quot;e&quot;)
 
 tk.Label(self, text=&quot;Address:&quot;).grid(row=6, column=0, sticky=&quot;w&quot;)
 self.address_entry = tk.Text(self, width=20, height=3)
 self.address_entry.grid(row=6, column=1, padx=10, pady=10, sticky=&quot;e&quot;)
 
 submit_button = tk.Button(self, text=&quot;Submit&quot;, width=8, command=self.submit)
 submit_button.grid(row=7, column=1, padx=10, pady=10, sticky=&quot;e&quot;)

 submit_button = tk.Button(self, text=&quot;Back&quot;, width=8, command=self.back)
 submit_button.grid(row=7, column=0, sticky=&quot;w&quot;, padx=10, pady=(10, 10))
 self.pack()
 
 def submit(self):
 insert_user_data = &quot;&quot;&quot;INSERT INTO users(name, password, email, age, gender, address)
 VALUES (?, ?, ?, ?, ?, ?)&quot;&quot;&quot;
 
 user_data = (self.first_name_entry.get().strip(), 
 self.password_entry.get().strip(), 
 self.email_entry.get().strip(), 
 self.age_entry.get().strip(),
 self.gender_entry.get().strip(), 
 self.address_entry.get(1.0, tk.END).strip())
 
 cursor.execute(insert_user_data, user_data)
 conn.commit()

 self.destroy()
 MainWindow(self.master)


 def back(self):
 for widget in self.winfo_children(): 
 widget.destroy()
 self.destroy()
 WelcomeWindow(self.master)


class MainWindow(tk.Frame):
 def __init__(self, master):
 super().__init__()
 self.master = master
 center_window(600, 400)

 self.generateUserList()
 self.pack()

 def generateUserList(self):
 cursor.execute(&quot;SELECT * FROM users&quot;)
 users = cursor.fetchall()

 columns = [&quot;ID&quot;, &quot;Name&quot;, &quot;Password&quot;, &quot;Email&quot;, &quot;Age&quot;, &quot;Gender&quot;, &quot;Address&quot;]
 column_widths = [5, 10, 10, 30, 5, 10, 20]
 for col_index, col_name in enumerate(columns):
 label = tk.Label(self, text=col_name, padx=5, pady=5)
 label.grid(row=0, column=col_index)

 # Iterate over users and create Entry widgets
 for row_index, user in enumerate(users):
 for col_index, value in enumerate(user):
 entry = tk.Entry(self, width=column_widths[col_index], disabledforeground=&quot;black&quot;)
 entry.grid(row=row_index + 1, column=col_index)
 entry.insert(0, str(value)) # Insert user data into Entry widget
 entry.configure(state=&quot;disabled&quot;)


root = tk.Tk()
root.eval('tk::PlaceWindow . center')
WelcomeWindow(root)
root.mainloop()" style="color:#D4D4D4;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path></svg></span><pre class="shiki dark-plus" style="background-color: #1E1E1E" tabindex="0"><code><span class="line"><span style="color: #C586C0">import</span><span style="color: #D4D4D4"> tkinter </span><span style="color: #C586C0">as</span><span style="color: #D4D4D4"> tk</span></span>
<span class="line"><span style="color: #C586C0">import</span><span style="color: #D4D4D4"> sqlite3</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D4D4D4">conn = sqlite3.connect(</span><span style="color: #CE9178">&quot;tutorial.db&quot;</span><span style="color: #D4D4D4">)</span></span>
<span class="line"><span style="color: #D4D4D4">cursor = conn.cursor()</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color: #D4D4D4">add_user_query = </span><span style="color: #CE9178">&quot;&quot;&quot;CREATE TABLE IF NOT EXISTS users (</span></span>
<span class="line"><span style="color: #CE9178"> id integer PRIMARY KEY AUTOINCREMENT,</span></span>
<span class="line"><span style="color: #CE9178"> name text NOT NULL,</span></span>
<span class="line"><span style="color: #CE9178"> password text NOT NULL,</span></span>
<span class="line"><span style="color: #CE9178"> email text NOT NULL,</span></span>
<span class="line"><span style="color: #CE9178"> age integer,</span></span>
<span class="line"><span style="color: #CE9178"> gender text,</span></span>
<span class="line"><span style="color: #CE9178"> address text</span></span>
<span class="line"><span style="color: #CE9178"> ); &quot;&quot;&quot;</span><span style="color: #D4D4D4"> </span></span>
<span class="line"><span style="color: #D4D4D4">cursor.execute(add_user_query)</span></span>
<span class="line"><span style="color: #D4D4D4">conn.commit()</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color: #569CD6">def</span><span style="color: #D4D4D4"> </span><span style="color: #DCDCAA">center_window</span><span style="color: #D4D4D4">(</span><span style="color: #9CDCFE">width</span><span style="color: #D4D4D4">, </span><span style="color: #9CDCFE">height</span><span style="color: #D4D4D4">):</span></span>
<span class="line"><span style="color: #D4D4D4"> x = (root.winfo_screenwidth() // </span><span style="color: #B5CEA8">2</span><span style="color: #D4D4D4">) - (width // </span><span style="color: #B5CEA8">2</span><span style="color: #D4D4D4">)</span></span>
<span class="line"><span style="color: #D4D4D4"> y = (root.winfo_screenheight() // </span><span style="color: #B5CEA8">2</span><span style="color: #D4D4D4">) - (height // </span><span style="color: #B5CEA8">2</span><span style="color: #D4D4D4">)</span></span>
<span class="line"><span style="color: #D4D4D4"> root.geometry(</span><span style="color: #569CD6">f</span><span style="color: #CE9178">&#39;</span><span style="color: #569CD6">{</span><span style="color: #D4D4D4">width</span><span style="color: #569CD6">}</span><span style="color: #CE9178">x</span><span style="color: #569CD6">{</span><span style="color: #D4D4D4">height</span><span style="color: #569CD6">}</span><span style="color: #CE9178">+</span><span style="color: #569CD6">{</span><span style="color: #D4D4D4">x</span><span style="color: #569CD6">}</span><span style="color: #CE9178">+</span><span style="color: #569CD6">{</span><span style="color: #D4D4D4">y</span><span style="color: #569CD6">}</span><span style="color: #CE9178">&#39;</span><span style="color: #D4D4D4">)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color: #569CD6">class</span><span style="color: #D4D4D4"> </span><span style="color: #4EC9B0">WelcomeWindow</span><span style="color: #D4D4D4">(</span><span style="color: #4EC9B0">tk</span><span style="color: #D4D4D4">.</span><span style="color: #4EC9B0">Frame</span><span style="color: #D4D4D4">):</span></span>
<span class="line"><span style="color: #D4D4D4"> </span><span style="color: #569CD6">def</span><span style="color: #D4D4D4"> </span><span style="color: #DCDCAA">__init__</span><span style="color: #D4D4D4">(</span><span style="color: #9CDCFE">self</span><span style="color: #D4D4D4">, </span><span style="color: #9CDCFE">master</span><span style="color: #D4D4D4">):</span></span>
<span class="line"><span style="color: #D4D4D4"> </span><span style="color: #4EC9B0">super</span><span style="color: #D4D4D4">().</span><span style="color: #DCDCAA">__init__</span><span style="color: #D4D4D4">()</span></span>
<span class="line"><span style="color: #D4D4D4"> </span><span style="color: #569CD6">self</span><span style="color: #D4D4D4">.master = master</span></span>
<span class="line"><span style="color: #D4D4D4"> </span><span style="color: #569CD6">self</span><span style="color: #D4D4D4">.master.title(</span><span style="color: #CE9178">&quot;Welcome&quot;</span><span style="color: #D4D4D4">)</span></span>
<span class="line"><span style="color: #D4D4D4"> center_window(</span><span style="color: #B5CEA8">240</span><span style="color: #D4D4D4">, </span><span style="color: #B5CEA8">120</span><span style="color: #D4D4D4">)</span></span>
<span class="line"><span style="color: #D4D4D4"> </span></span>
<span class="line"><span style="color: #D4D4D4"> login_button = tk.Button(</span><span style="color: #569CD6">self</span><span style="color: #D4D4D4">, </span><span style="color: #9CDCFE">text</span><span style="color: #D4D4D4">=</span><span style="color: #CE9178">&quot;Login&quot;</span><span style="color: #D4D4D4">, </span><span style="color: #9CDCFE">width</span><span style="color: #D4D4D4">=</span><span style="color: #B5CEA8">10</span><span style="color: #D4D4D4">, </span><span style="color: #9CDCFE">command</span><span style="color: #D4D4D4">=</span><span style="color: #569CD6">self</span><span style="color: #D4D4D4">.open_login_window)</span></span>
<span class="line"><span style="color: #D4D4D4"> login_button.pack(</span><span style="color: #9CDCFE">padx</span><span style="color: #D4D4D4">=</span><span style="color: #B5CEA8">20</span><span style="color: #D4D4D4">, </span><span style="color: #9CDCFE">pady</span><span style="color: #D4D4D4">=(</span><span style="color: #B5CEA8">20</span><span style="color: #D4D4D4">, </span><span style="color: #B5CEA8">10</span><span style="color: #D4D4D4">))</span></span>
<span class="line"><span style="color: #D4D4D4"> </span></span>
<span class="line"><span style="color: #D4D4D4"> register_button = tk.Button(</span><span style="color: #569CD6">self</span><span style="color: #D4D4D4">, </span><span style="color: #9CDCFE">text</span><span style="color: #D4D4D4">=</span><span style="color: #CE9178">&quot;Register&quot;</span><span style="color: #D4D4D4">, </span><span style="color: #9CDCFE">width</span><span style="color: #D4D4D4">=</span><span style="color: #B5CEA8">10</span><span style="color: #D4D4D4">, </span><span style="color: #9CDCFE">command</span><span style="color: #D4D4D4">=</span><span style="color: #569CD6">self</span><span style="color: #D4D4D4">.open_register_window)</span></span>
<span class="line"><span style="color: #D4D4D4"> register_button.pack(</span><span style="color: #9CDCFE">pady</span><span style="color: #D4D4D4">=</span><span style="color: #B5CEA8">10</span><span style="color: #D4D4D4">)</span></span>
<span class="line"><span style="color: #D4D4D4"> </span><span style="color: #569CD6">self</span><span style="color: #D4D4D4">.pack()</span></span>
<span class="line"><span style="color: #D4D4D4"> </span></span>
<span class="line"><span style="color: #D4D4D4"> </span><span style="color: #569CD6">def</span><span style="color: #D4D4D4"> </span><span style="color: #DCDCAA">open_login_window</span><span style="color: #D4D4D4">(</span><span style="color: #9CDCFE">self</span><span style="color: #D4D4D4">):</span></span>
<span class="line"><span style="color: #D4D4D4"> </span><span style="color: #C586C0">for</span><span style="color: #D4D4D4"> widget </span><span style="color: #C586C0">in</span><span style="color: #D4D4D4"> </span><span style="color: #569CD6">self</span><span style="color: #D4D4D4">.winfo_children(): </span></span>
<span class="line"><span style="color: #D4D4D4"> widget.destroy()</span></span>
<span class="line"><span style="color: #D4D4D4"> </span><span style="color: #569CD6">self</span><span style="color: #D4D4D4">.destroy()</span></span>
<span class="line"><span style="color: #D4D4D4"> LoginWindow(</span><span style="color: #569CD6">self</span><span style="color: #D4D4D4">.master)</span></span>
<span class="line"><span style="color: #D4D4D4"> </span></span>
<span class="line"><span style="color: #D4D4D4"> </span><span style="color: #569CD6">def</span><span style="color: #D4D4D4"> </span><span style="color: #DCDCAA">open_register_window</span><span style="color: #D4D4D4">(</span><span style="color: #9CDCFE">self</span><span style="color: #D4D4D4">):</span></span>
<span class="line"><span style="color: #D4D4D4"> </span><span style="color: #C586C0">for</span><span style="color: #D4D4D4"> widget </span><span style="color: #C586C0">in</span><span style="color: #D4D4D4"> </span><span style="color: #569CD6">self</span><span style="color: #D4D4D4">.winfo_children(): </span></span>
<span class="line"><span style="color: #D4D4D4"> widget.destroy()</span></span>
<span class="line"><span style="color: #D4D4D4"> </span><span style="color: #569CD6">self</span><span style="color: #D4D4D4">.destroy()</span></span>
<span class="line"><span style="color: #D4D4D4"> RegisterWindow(</span><span style="color: #569CD6">self</span><span style="color: #D4D4D4">.master)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color: #569CD6">class</span><span style="color: #D4D4D4"> </span><span style="color: #4EC9B0">LoginWindow</span><span style="color: #D4D4D4">(</span><span style="color: #4EC9B0">tk</span><span style="color: #D4D4D4">.</span><span style="color: #4EC9B0">Frame</span><span style="color: #D4D4D4">):</span></span>
<span class="line"><span style="color: #D4D4D4"> </span><span style="color: #569CD6">def</span><span style="color: #D4D4D4"> </span><span style="color: #DCDCAA">__init__</span><span style="color: #D4D4D4">(</span><span style="color: #9CDCFE">self</span><span style="color: #D4D4D4">, </span><span style="color: #9CDCFE">master</span><span style="color: #D4D4D4">):</span></span>
<span class="line"><span style="color: #D4D4D4"> </span><span style="color: #4EC9B0">super</span><span style="color: #D4D4D4">().</span><span style="color: #DCDCAA">__init__</span><span style="color: #D4D4D4">()</span></span>
<span class="line"><span style="color: #D4D4D4"> </span><span style="color: #569CD6">self</span><span style="color: #D4D4D4">.master = master</span></span>
<span class="line"><span style="color: #D4D4D4"> </span><span style="color: #569CD6">self</span><span style="color: #D4D4D4">.master.title(</span><span style="color: #CE9178">&quot;Login&quot;</span><span style="color: #D4D4D4">)</span></span>
<span class="line"><span style="color: #D4D4D4"> </span><span style="color: #569CD6">self</span><span style="color: #D4D4D4">.master.resizable(</span><span style="color: #569CD6">False</span><span style="color: #D4D4D4">, </span><span style="color: #569CD6">False</span><span style="color: #D4D4D4">)</span></span>
<span class="line"><span style="color: #D4D4D4"> center_window(</span><span style="color: #B5CEA8">240</span><span style="color: #D4D4D4">, </span><span style="color: #B5CEA8">150</span><span style="color: #D4D4D4">)</span></span>
<span class="line"><span style="color: #D4D4D4"> </span></span>
<span class="line"><span style="color: #D4D4D4"> tk.Label(</span><span style="color: #569CD6">self</span><span style="color: #D4D4D4">, </span><span style="color: #9CDCFE">text</span><span style="color: #D4D4D4">=</span><span style="color: #CE9178">&quot;Username:&quot;</span><span style="color: #D4D4D4">).grid(</span><span style="color: #9CDCFE">row</span><span style="color: #D4D4D4">=</span><span style="color: #B5CEA8">0</span><span style="color: #D4D4D4">, </span><span style="color: #9CDCFE">column</span><span style="color: #D4D4D4">=</span><span style="color: #B5CEA8">0</span><span style="color: #D4D4D4">)</span></span>
<span class="line"><span style="color: #D4D4D4"> </span><span style="color: #569CD6">self</span><span style="color: #D4D4D4">.username_entry = tk.Entry(</span><span style="color: #569CD6">self</span><span style="color: #D4D4D4">)</span></span>
<span class="line"><span style="color: #D4D4D4"> </span><span style="color: #569CD6">self</span><span style="color: #D4D4D4">.username_entry.grid(</span><span style="color: #9CDCFE">row</span><span style="color: #D4D4D4">=</span><span style="color: #B5CEA8">0</span><span style="color: #D4D4D4">, </span><span style="color: #9CDCFE">column</span><span style="color: #D4D4D4">=</span><span style="color: #B5CEA8">1</span><span style="color: #D4D4D4">, </span><span style="color: #9CDCFE">padx</span><span style="color: #D4D4D4">=</span><span style="color: #B5CEA8">10</span><span style="color: #D4D4D4">, </span><span style="color: #9CDCFE">pady</span><span style="color: #D4D4D4">=</span><span style="color: #B5CEA8">10</span><span style="color: #D4D4D4">)</span></span>
<span class="line"><span style="color: #D4D4D4"> </span></span>
<span class="line"><span style="color: #D4D4D4"> tk.Label(</span><span style="color: #569CD6">self</span><span style="color: #D4D4D4">, </span><span style="color: #9CDCFE">text</span><span style="color: #D4D4D4">=</span><span style="color: #CE9178">&quot;Password:&quot;</span><span style="color: #D4D4D4">).grid(</span><span style="color: #9CDCFE">row</span><span style="color: #D4D4D4">=</span><span style="color: #B5CEA8">1</span><span style="color: #D4D4D4">, </span><span style="color: #9CDCFE">column</span><span style="color: #D4D4D4">=</span><span style="color: #B5CEA8">0</span><span style="color: #D4D4D4">)</span></span>
<span class="line"><span style="color: #D4D4D4"> </span><span style="color: #569CD6">self</span><span style="color: #D4D4D4">.password_entry = tk.Entry(</span><span style="color: #569CD6">self</span><span style="color: #D4D4D4">, </span><span style="color: #9CDCFE">show</span><span style="color: #D4D4D4">=</span><span style="color: #CE9178">&quot;*&quot;</span><span style="color: #D4D4D4">)</span></span>
<span class="line"><span style="color: #D4D4D4"> </span><span style="color: #569CD6">self</span><span style="color: #D4D4D4">.password_entry.grid(</span><span style="color: #9CDCFE">row</span><span style="color: #D4D4D4">=</span><span style="color: #B5CEA8">1</span><span style="color: #D4D4D4">, </span><span style="color: #9CDCFE">column</span><span style="color: #D4D4D4">=</span><span style="color: #B5CEA8">1</span><span style="color: #D4D4D4">, </span><span style="color: #9CDCFE">padx</span><span style="color: #D4D4D4">=</span><span style="color: #B5CEA8">10</span><span style="color: #D4D4D4">, </span><span style="color: #9CDCFE">pady</span><span style="color: #D4D4D4">=</span><span style="color: #B5CEA8">10</span><span style="color: #D4D4D4">)</span></span>
<span class="line"><span style="color: #D4D4D4"> </span></span>
<span class="line"><span style="color: #D4D4D4"> submit_button = tk.Button(</span><span style="color: #569CD6">self</span><span style="color: #D4D4D4">, </span><span style="color: #9CDCFE">text</span><span style="color: #D4D4D4">=</span><span style="color: #CE9178">&quot;Submit&quot;</span><span style="color: #D4D4D4">, </span><span style="color: #9CDCFE">width</span><span style="color: #D4D4D4">=</span><span style="color: #B5CEA8">8</span><span style="color: #D4D4D4">, </span><span style="color: #9CDCFE">command</span><span style="color: #D4D4D4">=</span><span style="color: #569CD6">self</span><span style="color: #D4D4D4">.submit)</span></span>
<span class="line"><span style="color: #D4D4D4"> submit_button.grid(</span><span style="color: #9CDCFE">row</span><span style="color: #D4D4D4">=</span><span style="color: #B5CEA8">2</span><span style="color: #D4D4D4">, </span><span style="color: #9CDCFE">column</span><span style="color: #D4D4D4">=</span><span style="color: #B5CEA8">1</span><span style="color: #D4D4D4">, </span><span style="color: #9CDCFE">sticky</span><span style="color: #D4D4D4">=</span><span style="color: #CE9178">&quot;e&quot;</span><span style="color: #D4D4D4">, </span><span style="color: #9CDCFE">padx</span><span style="color: #D4D4D4">=</span><span style="color: #B5CEA8">10</span><span style="color: #D4D4D4">, </span><span style="color: #9CDCFE">pady</span><span style="color: #D4D4D4">=(</span><span style="color: #B5CEA8">10</span><span style="color: #D4D4D4">, </span><span style="color: #B5CEA8">0</span><span style="color: #D4D4D4">))</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D4D4D4"> submit_button = tk.Button(</span><span style="color: #569CD6">self</span><span style="color: #D4D4D4">, </span><span style="color: #9CDCFE">text</span><span style="color: #D4D4D4">=</span><span style="color: #CE9178">&quot;Back&quot;</span><span style="color: #D4D4D4">, </span><span style="color: #9CDCFE">width</span><span style="color: #D4D4D4">=</span><span style="color: #B5CEA8">8</span><span style="color: #D4D4D4">, </span><span style="color: #9CDCFE">command</span><span style="color: #D4D4D4">=</span><span style="color: #569CD6">self</span><span style="color: #D4D4D4">.back)</span></span>
<span class="line"><span style="color: #D4D4D4"> submit_button.grid(</span><span style="color: #9CDCFE">row</span><span style="color: #D4D4D4">=</span><span style="color: #B5CEA8">2</span><span style="color: #D4D4D4">, </span><span style="color: #9CDCFE">column</span><span style="color: #D4D4D4">=</span><span style="color: #B5CEA8">0</span><span style="color: #D4D4D4">, </span><span style="color: #9CDCFE">sticky</span><span style="color: #D4D4D4">=</span><span style="color: #CE9178">&quot;w&quot;</span><span style="color: #D4D4D4">, </span><span style="color: #9CDCFE">padx</span><span style="color: #D4D4D4">=</span><span style="color: #B5CEA8">10</span><span style="color: #D4D4D4">, </span><span style="color: #9CDCFE">pady</span><span style="color: #D4D4D4">=(</span><span style="color: #B5CEA8">10</span><span style="color: #D4D4D4">, </span><span style="color: #B5CEA8">0</span><span style="color: #D4D4D4">))</span></span>
<span class="line"><span style="color: #D4D4D4"> </span><span style="color: #569CD6">self</span><span style="color: #D4D4D4">.pack()</span></span>
<span class="line"><span style="color: #D4D4D4"> </span></span>
<span class="line"><span style="color: #D4D4D4"> </span><span style="color: #569CD6">def</span><span style="color: #D4D4D4"> </span><span style="color: #DCDCAA">submit</span><span style="color: #D4D4D4">(</span><span style="color: #9CDCFE">self</span><span style="color: #D4D4D4">):</span></span>
<span class="line"><span style="color: #D4D4D4"> username = </span><span style="color: #569CD6">self</span><span style="color: #D4D4D4">.username_entry.get()</span></span>
<span class="line"><span style="color: #D4D4D4"> password = </span><span style="color: #569CD6">self</span><span style="color: #D4D4D4">.password_entry.get()</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D4D4D4"> cursor.execute(</span><span style="color: #CE9178">&quot;SELECT * FROM users WHERE name=? AND password=?&quot;</span><span style="color: #D4D4D4">, (username, password))</span></span>
<span class="line"><span style="color: #D4D4D4"> user = cursor.fetchone()</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D4D4D4"> </span><span style="color: #C586C0">if</span><span style="color: #D4D4D4"> user:</span></span>
<span class="line"><span style="color: #D4D4D4"> </span><span style="color: #6A9955"># Logged in</span></span>
<span class="line"><span style="color: #D4D4D4"> MainWindow(</span><span style="color: #569CD6">self</span><span style="color: #D4D4D4">.master)</span></span>
<span class="line"><span style="color: #D4D4D4"> </span><span style="color: #569CD6">self</span><span style="color: #D4D4D4">.destroy()</span></span>
<span class="line"><span style="color: #D4D4D4"> </span><span style="color: #C586C0">else</span><span style="color: #D4D4D4">:</span></span>
<span class="line"><span style="color: #D4D4D4"> </span><span style="color: #DCDCAA">print</span><span style="color: #D4D4D4">(</span><span style="color: #CE9178">&quot;You have typed in the wrong details&quot;</span><span style="color: #D4D4D4">)</span></span>
<span class="line"><span style="color: #D4D4D4"> </span><span style="color: #569CD6">self</span><span style="color: #D4D4D4">.username_entry.delete(</span><span style="color: #B5CEA8">0</span><span style="color: #D4D4D4">, tk.END)</span></span>
<span class="line"><span style="color: #D4D4D4"> </span><span style="color: #569CD6">self</span><span style="color: #D4D4D4">.password_entry.delete(</span><span style="color: #B5CEA8">0</span><span style="color: #D4D4D4">, tk.END)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color: #D4D4D4"> </span><span style="color: #569CD6">def</span><span style="color: #D4D4D4"> </span><span style="color: #DCDCAA">back</span><span style="color: #D4D4D4">(</span><span style="color: #9CDCFE">self</span><span style="color: #D4D4D4">):</span></span>
<span class="line"><span style="color: #D4D4D4"> </span><span style="color: #C586C0">for</span><span style="color: #D4D4D4"> widget </span><span style="color: #C586C0">in</span><span style="color: #D4D4D4"> </span><span style="color: #569CD6">self</span><span style="color: #D4D4D4">.winfo_children(): </span></span>
<span class="line"><span style="color: #D4D4D4"> widget.destroy()</span></span>
<span class="line"><span style="color: #D4D4D4"> </span><span style="color: #569CD6">self</span><span style="color: #D4D4D4">.destroy()</span></span>
<span class="line"><span style="color: #D4D4D4"> WelcomeWindow(</span><span style="color: #569CD6">self</span><span style="color: #D4D4D4">.master)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color: #569CD6">class</span><span style="color: #D4D4D4"> </span><span style="color: #4EC9B0">RegisterWindow</span><span style="color: #D4D4D4">(</span><span style="color: #4EC9B0">tk</span><span style="color: #D4D4D4">.</span><span style="color: #4EC9B0">Frame</span><span style="color: #D4D4D4">):</span></span>
<span class="line"><span style="color: #D4D4D4"> </span><span style="color: #569CD6">def</span><span style="color: #D4D4D4"> </span><span style="color: #DCDCAA">__init__</span><span style="color: #D4D4D4">(</span><span style="color: #9CDCFE">self</span><span style="color: #D4D4D4">, </span><span style="color: #9CDCFE">master</span><span style="color: #D4D4D4">):</span></span>
<span class="line"><span style="color: #D4D4D4"> </span><span style="color: #4EC9B0">super</span><span style="color: #D4D4D4">().</span><span style="color: #DCDCAA">__init__</span><span style="color: #D4D4D4">()</span></span>
<span class="line"><span style="color: #D4D4D4"> </span><span style="color: #569CD6">self</span><span style="color: #D4D4D4">.master = master</span></span>
<span class="line"><span style="color: #D4D4D4"> </span><span style="color: #569CD6">self</span><span style="color: #D4D4D4">.master.title(</span><span style="color: #CE9178">&quot;Register&quot;</span><span style="color: #D4D4D4">)</span></span>
<span class="line"><span style="color: #D4D4D4"> </span><span style="color: #569CD6">self</span><span style="color: #D4D4D4">.master.resizable(</span><span style="color: #569CD6">False</span><span style="color: #D4D4D4">, </span><span style="color: #569CD6">False</span><span style="color: #D4D4D4">)</span></span>
<span class="line"><span style="color: #D4D4D4"> center_window(</span><span style="color: #B5CEA8">320</span><span style="color: #D4D4D4">, </span><span style="color: #B5CEA8">350</span><span style="color: #D4D4D4">)</span></span>
<span class="line"><span style="color: #D4D4D4"> </span></span>
<span class="line"><span style="color: #D4D4D4"> tk.Label(</span><span style="color: #569CD6">self</span><span style="color: #D4D4D4">, </span><span style="color: #9CDCFE">text</span><span style="color: #D4D4D4">=</span><span style="color: #CE9178">&quot;Name:&quot;</span><span style="color: #D4D4D4">).grid(</span><span style="color: #9CDCFE">row</span><span style="color: #D4D4D4">=</span><span style="color: #B5CEA8">0</span><span style="color: #D4D4D4">, </span><span style="color: #9CDCFE">column</span><span style="color: #D4D4D4">=</span><span style="color: #B5CEA8">0</span><span style="color: #D4D4D4">, </span><span style="color: #9CDCFE">sticky</span><span style="color: #D4D4D4">=</span><span style="color: #CE9178">&quot;w&quot;</span><span style="color: #D4D4D4">)</span></span>
<span class="line"><span style="color: #D4D4D4"> </span><span style="color: #569CD6">self</span><span style="color: #D4D4D4">.first_name_entry = tk.Entry(</span><span style="color: #569CD6">self</span><span style="color: #D4D4D4">, </span><span style="color: #9CDCFE">width</span><span style="color: #D4D4D4">=</span><span style="color: #B5CEA8">26</span><span style="color: #D4D4D4">)</span></span>
<span class="line"><span style="color: #D4D4D4"> </span><span style="color: #569CD6">self</span><span style="color: #D4D4D4">.first_name_entry.grid(</span><span style="color: #9CDCFE">row</span><span style="color: #D4D4D4">=</span><span style="color: #B5CEA8">0</span><span style="color: #D4D4D4">, </span><span style="color: #9CDCFE">column</span><span style="color: #D4D4D4">=</span><span style="color: #B5CEA8">1</span><span style="color: #D4D4D4">, </span><span style="color: #9CDCFE">padx</span><span style="color: #D4D4D4">=</span><span style="color: #B5CEA8">10</span><span style="color: #D4D4D4">, </span><span style="color: #9CDCFE">pady</span><span style="color: #D4D4D4">=</span><span style="color: #B5CEA8">10</span><span style="color: #D4D4D4">, </span><span style="color: #9CDCFE">sticky</span><span style="color: #D4D4D4">=</span><span style="color: #CE9178">&quot;e&quot;</span><span style="color: #D4D4D4">)</span></span>
<span class="line"><span style="color: #D4D4D4"> </span></span>
<span class="line"><span style="color: #D4D4D4"> tk.Label(</span><span style="color: #569CD6">self</span><span style="color: #D4D4D4">, </span><span style="color: #9CDCFE">text</span><span style="color: #D4D4D4">=</span><span style="color: #CE9178">&quot;Password:&quot;</span><span style="color: #D4D4D4">).grid(</span><span style="color: #9CDCFE">row</span><span style="color: #D4D4D4">=</span><span style="color: #B5CEA8">2</span><span style="color: #D4D4D4">, </span><span style="color: #9CDCFE">column</span><span style="color: #D4D4D4">=</span><span style="color: #B5CEA8">0</span><span style="color: #D4D4D4">, </span><span style="color: #9CDCFE">sticky</span><span style="color: #D4D4D4">=</span><span style="color: #CE9178">&quot;w&quot;</span><span style="color: #D4D4D4">)</span></span>
<span class="line"><span style="color: #D4D4D4"> </span><span style="color: #569CD6">self</span><span style="color: #D4D4D4">.password_entry = tk.Entry(</span><span style="color: #569CD6">self</span><span style="color: #D4D4D4">, </span><span style="color: #9CDCFE">show</span><span style="color: #D4D4D4">=</span><span style="color: #CE9178">&quot;*&quot;</span><span style="color: #D4D4D4">, </span><span style="color: #9CDCFE">width</span><span style="color: #D4D4D4">=</span><span style="color: #B5CEA8">26</span><span style="color: #D4D4D4">)</span></span>
<span class="line"><span style="color: #D4D4D4"> </span><span style="color: #569CD6">self</span><span style="color: #D4D4D4">.password_entry.grid(</span><span style="color: #9CDCFE">row</span><span style="color: #D4D4D4">=</span><span style="color: #B5CEA8">2</span><span style="color: #D4D4D4">, </span><span style="color: #9CDCFE">column</span><span style="color: #D4D4D4">=</span><span style="color: #B5CEA8">1</span><span style="color: #D4D4D4">, </span><span style="color: #9CDCFE">padx</span><span style="color: #D4D4D4">=</span><span style="color: #B5CEA8">10</span><span style="color: #D4D4D4">, </span><span style="color: #9CDCFE">pady</span><span style="color: #D4D4D4">=</span><span style="color: #B5CEA8">10</span><span style="color: #D4D4D4">, </span><span style="color: #9CDCFE">sticky</span><span style="color: #D4D4D4">=</span><span style="color: #CE9178">&quot;e&quot;</span><span style="color: #D4D4D4">)</span></span>
<span class="line"><span style="color: #D4D4D4"> </span></span>
<span class="line"><span style="color: #D4D4D4"> tk.Label(</span><span style="color: #569CD6">self</span><span style="color: #D4D4D4">, </span><span style="color: #9CDCFE">text</span><span style="color: #D4D4D4">=</span><span style="color: #CE9178">&quot;Email:&quot;</span><span style="color: #D4D4D4">).grid(</span><span style="color: #9CDCFE">row</span><span style="color: #D4D4D4">=</span><span style="color: #B5CEA8">3</span><span style="color: #D4D4D4">, </span><span style="color: #9CDCFE">column</span><span style="color: #D4D4D4">=</span><span style="color: #B5CEA8">0</span><span style="color: #D4D4D4">, </span><span style="color: #9CDCFE">sticky</span><span style="color: #D4D4D4">=</span><span style="color: #CE9178">&quot;w&quot;</span><span style="color: #D4D4D4">)</span></span>
<span class="line"><span style="color: #D4D4D4"> </span><span style="color: #569CD6">self</span><span style="color: #D4D4D4">.email_entry = tk.Entry(</span><span style="color: #569CD6">self</span><span style="color: #D4D4D4">, </span><span style="color: #9CDCFE">width</span><span style="color: #D4D4D4">=</span><span style="color: #B5CEA8">26</span><span style="color: #D4D4D4">)</span></span>
<span class="line"><span style="color: #D4D4D4"> </span><span style="color: #569CD6">self</span><span style="color: #D4D4D4">.email_entry.grid(</span><span style="color: #9CDCFE">row</span><span style="color: #D4D4D4">=</span><span style="color: #B5CEA8">3</span><span style="color: #D4D4D4">, </span><span style="color: #9CDCFE">column</span><span style="color: #D4D4D4">=</span><span style="color: #B5CEA8">1</span><span style="color: #D4D4D4">, </span><span style="color: #9CDCFE">padx</span><span style="color: #D4D4D4">=</span><span style="color: #B5CEA8">10</span><span style="color: #D4D4D4">, </span><span style="color: #9CDCFE">pady</span><span style="color: #D4D4D4">=</span><span style="color: #B5CEA8">10</span><span style="color: #D4D4D4">, </span><span style="color: #9CDCFE">sticky</span><span style="color: #D4D4D4">=</span><span style="color: #CE9178">&quot;e&quot;</span><span style="color: #D4D4D4">)</span></span>
<span class="line"><span style="color: #D4D4D4"> </span></span>
<span class="line"><span style="color: #D4D4D4"> tk.Label(</span><span style="color: #569CD6">self</span><span style="color: #D4D4D4">, </span><span style="color: #9CDCFE">text</span><span style="color: #D4D4D4">=</span><span style="color: #CE9178">&quot;Gender:&quot;</span><span style="color: #D4D4D4">).grid(</span><span style="color: #9CDCFE">row</span><span style="color: #D4D4D4">=</span><span style="color: #B5CEA8">4</span><span style="color: #D4D4D4">, </span><span style="color: #9CDCFE">column</span><span style="color: #D4D4D4">=</span><span style="color: #B5CEA8">0</span><span style="color: #D4D4D4">, </span><span style="color: #9CDCFE">sticky</span><span style="color: #D4D4D4">=</span><span style="color: #CE9178">&quot;w&quot;</span><span style="color: #D4D4D4">)</span></span>
<span class="line"><span style="color: #D4D4D4"> </span><span style="color: #569CD6">self</span><span style="color: #D4D4D4">.gender_entry = tk.Entry(</span><span style="color: #569CD6">self</span><span style="color: #D4D4D4">, </span><span style="color: #9CDCFE">width</span><span style="color: #D4D4D4">=</span><span style="color: #B5CEA8">10</span><span style="color: #D4D4D4">)</span></span>
<span class="line"><span style="color: #D4D4D4"> </span><span style="color: #569CD6">self</span><span style="color: #D4D4D4">.gender_entry.grid(</span><span style="color: #9CDCFE">row</span><span style="color: #D4D4D4">=</span><span style="color: #B5CEA8">4</span><span style="color: #D4D4D4">, </span><span style="color: #9CDCFE">column</span><span style="color: #D4D4D4">=</span><span style="color: #B5CEA8">1</span><span style="color: #D4D4D4">, </span><span style="color: #9CDCFE">padx</span><span style="color: #D4D4D4">=</span><span style="color: #B5CEA8">10</span><span style="color: #D4D4D4">, </span><span style="color: #9CDCFE">pady</span><span style="color: #D4D4D4">=</span><span style="color: #B5CEA8">10</span><span style="color: #D4D4D4">, </span><span style="color: #9CDCFE">sticky</span><span style="color: #D4D4D4">=</span><span style="color: #CE9178">&quot;e&quot;</span><span style="color: #D4D4D4">)</span></span>
<span class="line"><span style="color: #D4D4D4"> </span></span>
<span class="line"><span style="color: #D4D4D4"> tk.Label(</span><span style="color: #569CD6">self</span><span style="color: #D4D4D4">, </span><span style="color: #9CDCFE">text</span><span style="color: #D4D4D4">=</span><span style="color: #CE9178">&quot;Age:&quot;</span><span style="color: #D4D4D4">).grid(</span><span style="color: #9CDCFE">row</span><span style="color: #D4D4D4">=</span><span style="color: #B5CEA8">5</span><span style="color: #D4D4D4">, </span><span style="color: #9CDCFE">column</span><span style="color: #D4D4D4">=</span><span style="color: #B5CEA8">0</span><span style="color: #D4D4D4">, </span><span style="color: #9CDCFE">sticky</span><span style="color: #D4D4D4">=</span><span style="color: #CE9178">&quot;w&quot;</span><span style="color: #D4D4D4">)</span></span>
<span class="line"><span style="color: #D4D4D4"> </span><span style="color: #569CD6">self</span><span style="color: #D4D4D4">.age_entry = tk.Entry(</span><span style="color: #569CD6">self</span><span style="color: #D4D4D4">, </span><span style="color: #9CDCFE">width</span><span style="color: #D4D4D4">=</span><span style="color: #B5CEA8">10</span><span style="color: #D4D4D4">)</span></span>
<span class="line"><span style="color: #D4D4D4"> </span><span style="color: #569CD6">self</span><span style="color: #D4D4D4">.age_entry.grid(</span><span style="color: #9CDCFE">row</span><span style="color: #D4D4D4">=</span><span style="color: #B5CEA8">5</span><span style="color: #D4D4D4">, </span><span style="color: #9CDCFE">column</span><span style="color: #D4D4D4">=</span><span style="color: #B5CEA8">1</span><span style="color: #D4D4D4">, </span><span style="color: #9CDCFE">padx</span><span style="color: #D4D4D4">=</span><span style="color: #B5CEA8">10</span><span style="color: #D4D4D4">, </span><span style="color: #9CDCFE">pady</span><span style="color: #D4D4D4">=</span><span style="color: #B5CEA8">10</span><span style="color: #D4D4D4">, </span><span style="color: #9CDCFE">sticky</span><span style="color: #D4D4D4">=</span><span style="color: #CE9178">&quot;e&quot;</span><span style="color: #D4D4D4">)</span></span>
<span class="line"><span style="color: #D4D4D4"> </span></span>
<span class="line"><span style="color: #D4D4D4"> tk.Label(</span><span style="color: #569CD6">self</span><span style="color: #D4D4D4">, </span><span style="color: #9CDCFE">text</span><span style="color: #D4D4D4">=</span><span style="color: #CE9178">&quot;Address:&quot;</span><span style="color: #D4D4D4">).grid(</span><span style="color: #9CDCFE">row</span><span style="color: #D4D4D4">=</span><span style="color: #B5CEA8">6</span><span style="color: #D4D4D4">, </span><span style="color: #9CDCFE">column</span><span style="color: #D4D4D4">=</span><span style="color: #B5CEA8">0</span><span style="color: #D4D4D4">, </span><span style="color: #9CDCFE">sticky</span><span style="color: #D4D4D4">=</span><span style="color: #CE9178">&quot;w&quot;</span><span style="color: #D4D4D4">)</span></span>
<span class="line"><span style="color: #D4D4D4"> </span><span style="color: #569CD6">self</span><span style="color: #D4D4D4">.address_entry = tk.Text(</span><span style="color: #569CD6">self</span><span style="color: #D4D4D4">, </span><span style="color: #9CDCFE">width</span><span style="color: #D4D4D4">=</span><span style="color: #B5CEA8">20</span><span style="color: #D4D4D4">, </span><span style="color: #9CDCFE">height</span><span style="color: #D4D4D4">=</span><span style="color: #B5CEA8">3</span><span style="color: #D4D4D4">)</span></span>
<span class="line"><span style="color: #D4D4D4"> </span><span style="color: #569CD6">self</span><span style="color: #D4D4D4">.address_entry.grid(</span><span style="color: #9CDCFE">row</span><span style="color: #D4D4D4">=</span><span style="color: #B5CEA8">6</span><span style="color: #D4D4D4">, </span><span style="color: #9CDCFE">column</span><span style="color: #D4D4D4">=</span><span style="color: #B5CEA8">1</span><span style="color: #D4D4D4">, </span><span style="color: #9CDCFE">padx</span><span style="color: #D4D4D4">=</span><span style="color: #B5CEA8">10</span><span style="color: #D4D4D4">, </span><span style="color: #9CDCFE">pady</span><span style="color: #D4D4D4">=</span><span style="color: #B5CEA8">10</span><span style="color: #D4D4D4">, </span><span style="color: #9CDCFE">sticky</span><span style="color: #D4D4D4">=</span><span style="color: #CE9178">&quot;e&quot;</span><span style="color: #D4D4D4">)</span></span>
<span class="line"><span style="color: #D4D4D4"> </span></span>
<span class="line"><span style="color: #D4D4D4"> submit_button = tk.Button(</span><span style="color: #569CD6">self</span><span style="color: #D4D4D4">, </span><span style="color: #9CDCFE">text</span><span style="color: #D4D4D4">=</span><span style="color: #CE9178">&quot;Submit&quot;</span><span style="color: #D4D4D4">, </span><span style="color: #9CDCFE">width</span><span style="color: #D4D4D4">=</span><span style="color: #B5CEA8">8</span><span style="color: #D4D4D4">, </span><span style="color: #9CDCFE">command</span><span style="color: #D4D4D4">=</span><span style="color: #569CD6">self</span><span style="color: #D4D4D4">.submit)</span></span>
<span class="line"><span style="color: #D4D4D4"> submit_button.grid(</span><span style="color: #9CDCFE">row</span><span style="color: #D4D4D4">=</span><span style="color: #B5CEA8">7</span><span style="color: #D4D4D4">, </span><span style="color: #9CDCFE">column</span><span style="color: #D4D4D4">=</span><span style="color: #B5CEA8">1</span><span style="color: #D4D4D4">, </span><span style="color: #9CDCFE">padx</span><span style="color: #D4D4D4">=</span><span style="color: #B5CEA8">10</span><span style="color: #D4D4D4">, </span><span style="color: #9CDCFE">pady</span><span style="color: #D4D4D4">=</span><span style="color: #B5CEA8">10</span><span style="color: #D4D4D4">, </span><span style="color: #9CDCFE">sticky</span><span style="color: #D4D4D4">=</span><span style="color: #CE9178">&quot;e&quot;</span><span style="color: #D4D4D4">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D4D4D4"> submit_button = tk.Button(</span><span style="color: #569CD6">self</span><span style="color: #D4D4D4">, </span><span style="color: #9CDCFE">text</span><span style="color: #D4D4D4">=</span><span style="color: #CE9178">&quot;Back&quot;</span><span style="color: #D4D4D4">, </span><span style="color: #9CDCFE">width</span><span style="color: #D4D4D4">=</span><span style="color: #B5CEA8">8</span><span style="color: #D4D4D4">, </span><span style="color: #9CDCFE">command</span><span style="color: #D4D4D4">=</span><span style="color: #569CD6">self</span><span style="color: #D4D4D4">.back)</span></span>
<span class="line"><span style="color: #D4D4D4"> submit_button.grid(</span><span style="color: #9CDCFE">row</span><span style="color: #D4D4D4">=</span><span style="color: #B5CEA8">7</span><span style="color: #D4D4D4">, </span><span style="color: #9CDCFE">column</span><span style="color: #D4D4D4">=</span><span style="color: #B5CEA8">0</span><span style="color: #D4D4D4">, </span><span style="color: #9CDCFE">sticky</span><span style="color: #D4D4D4">=</span><span style="color: #CE9178">&quot;w&quot;</span><span style="color: #D4D4D4">, </span><span style="color: #9CDCFE">padx</span><span style="color: #D4D4D4">=</span><span style="color: #B5CEA8">10</span><span style="color: #D4D4D4">, </span><span style="color: #9CDCFE">pady</span><span style="color: #D4D4D4">=(</span><span style="color: #B5CEA8">10</span><span style="color: #D4D4D4">, </span><span style="color: #B5CEA8">10</span><span style="color: #D4D4D4">))</span></span>
<span class="line"><span style="color: #D4D4D4"> </span><span style="color: #569CD6">self</span><span style="color: #D4D4D4">.pack()</span></span>
<span class="line"><span style="color: #D4D4D4"> </span></span>
<span class="line"><span style="color: #D4D4D4"> </span><span style="color: #569CD6">def</span><span style="color: #D4D4D4"> </span><span style="color: #DCDCAA">submit</span><span style="color: #D4D4D4">(</span><span style="color: #9CDCFE">self</span><span style="color: #D4D4D4">):</span></span>
<span class="line"><span style="color: #D4D4D4"> insert_user_data = </span><span style="color: #CE9178">&quot;&quot;&quot;INSERT INTO users(name, password, email, age, gender, address)</span></span>
<span class="line"><span style="color: #CE9178"> VALUES (?, ?, ?, ?, ?, ?)&quot;&quot;&quot;</span></span>
<span class="line"><span style="color: #D4D4D4"> </span></span>
<span class="line"><span style="color: #D4D4D4"> user_data = (</span><span style="color: #569CD6">self</span><span style="color: #D4D4D4">.first_name_entry.get().strip(), </span></span>
<span class="line"><span style="color: #D4D4D4"> </span><span style="color: #569CD6">self</span><span style="color: #D4D4D4">.password_entry.get().strip(), </span></span>
<span class="line"><span style="color: #D4D4D4"> </span><span style="color: #569CD6">self</span><span style="color: #D4D4D4">.email_entry.get().strip(), </span></span>
<span class="line"><span style="color: #D4D4D4"> </span><span style="color: #569CD6">self</span><span style="color: #D4D4D4">.age_entry.get().strip(),</span></span>
<span class="line"><span style="color: #D4D4D4"> </span><span style="color: #569CD6">self</span><span style="color: #D4D4D4">.gender_entry.get().strip(), </span></span>
<span class="line"><span style="color: #D4D4D4"> </span><span style="color: #569CD6">self</span><span style="color: #D4D4D4">.address_entry.get(</span><span style="color: #B5CEA8">1.0</span><span style="color: #D4D4D4">, tk.END).strip())</span></span>
<span class="line"><span style="color: #D4D4D4"> </span></span>
<span class="line"><span style="color: #D4D4D4"> cursor.execute(insert_user_data, user_data)</span></span>
<span class="line"><span style="color: #D4D4D4"> conn.commit()</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D4D4D4"> </span><span style="color: #569CD6">self</span><span style="color: #D4D4D4">.destroy()</span></span>
<span class="line"><span style="color: #D4D4D4"> MainWindow(</span><span style="color: #569CD6">self</span><span style="color: #D4D4D4">.master)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color: #D4D4D4"> </span><span style="color: #569CD6">def</span><span style="color: #D4D4D4"> </span><span style="color: #DCDCAA">back</span><span style="color: #D4D4D4">(</span><span style="color: #9CDCFE">self</span><span style="color: #D4D4D4">):</span></span>
<span class="line"><span style="color: #D4D4D4"> </span><span style="color: #C586C0">for</span><span style="color: #D4D4D4"> widget </span><span style="color: #C586C0">in</span><span style="color: #D4D4D4"> </span><span style="color: #569CD6">self</span><span style="color: #D4D4D4">.winfo_children(): </span></span>
<span class="line"><span style="color: #D4D4D4"> widget.destroy()</span></span>
<span class="line"><span style="color: #D4D4D4"> </span><span style="color: #569CD6">self</span><span style="color: #D4D4D4">.destroy()</span></span>
<span class="line"><span style="color: #D4D4D4"> WelcomeWindow(</span><span style="color: #569CD6">self</span><span style="color: #D4D4D4">.master)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color: #569CD6">class</span><span style="color: #D4D4D4"> </span><span style="color: #4EC9B0">MainWindow</span><span style="color: #D4D4D4">(</span><span style="color: #4EC9B0">tk</span><span style="color: #D4D4D4">.</span><span style="color: #4EC9B0">Frame</span><span style="color: #D4D4D4">):</span></span>
<span class="line"><span style="color: #D4D4D4"> </span><span style="color: #569CD6">def</span><span style="color: #D4D4D4"> </span><span style="color: #DCDCAA">__init__</span><span style="color: #D4D4D4">(</span><span style="color: #9CDCFE">self</span><span style="color: #D4D4D4">, </span><span style="color: #9CDCFE">master</span><span style="color: #D4D4D4">):</span></span>
<span class="line"><span style="color: #D4D4D4"> </span><span style="color: #4EC9B0">super</span><span style="color: #D4D4D4">().</span><span style="color: #DCDCAA">__init__</span><span style="color: #D4D4D4">()</span></span>
<span class="line"><span style="color: #D4D4D4"> </span><span style="color: #569CD6">self</span><span style="color: #D4D4D4">.master = master</span></span>
<span class="line"><span style="color: #D4D4D4"> center_window(</span><span style="color: #B5CEA8">600</span><span style="color: #D4D4D4">, </span><span style="color: #B5CEA8">400</span><span style="color: #D4D4D4">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D4D4D4"> </span><span style="color: #569CD6">self</span><span style="color: #D4D4D4">.generateUserList()</span></span>
<span class="line"><span style="color: #D4D4D4"> </span><span style="color: #569CD6">self</span><span style="color: #D4D4D4">.pack()</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D4D4D4"> </span><span style="color: #569CD6">def</span><span style="color: #D4D4D4"> </span><span style="color: #DCDCAA">generateUserList</span><span style="color: #D4D4D4">(</span><span style="color: #9CDCFE">self</span><span style="color: #D4D4D4">):</span></span>
<span class="line"><span style="color: #D4D4D4"> cursor.execute(</span><span style="color: #CE9178">&quot;SELECT * FROM users&quot;</span><span style="color: #D4D4D4">)</span></span>
<span class="line"><span style="color: #D4D4D4"> users = cursor.fetchall()</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D4D4D4"> columns = [</span><span style="color: #CE9178">&quot;ID&quot;</span><span style="color: #D4D4D4">, </span><span style="color: #CE9178">&quot;Name&quot;</span><span style="color: #D4D4D4">, </span><span style="color: #CE9178">&quot;Password&quot;</span><span style="color: #D4D4D4">, </span><span style="color: #CE9178">&quot;Email&quot;</span><span style="color: #D4D4D4">, </span><span style="color: #CE9178">&quot;Age&quot;</span><span style="color: #D4D4D4">, </span><span style="color: #CE9178">&quot;Gender&quot;</span><span style="color: #D4D4D4">, </span><span style="color: #CE9178">&quot;Address&quot;</span><span style="color: #D4D4D4">]</span></span>
<span class="line"><span style="color: #D4D4D4"> column_widths = [</span><span style="color: #B5CEA8">5</span><span style="color: #D4D4D4">, </span><span style="color: #B5CEA8">10</span><span style="color: #D4D4D4">, </span><span style="color: #B5CEA8">10</span><span style="color: #D4D4D4">, </span><span style="color: #B5CEA8">30</span><span style="color: #D4D4D4">, </span><span style="color: #B5CEA8">5</span><span style="color: #D4D4D4">, </span><span style="color: #B5CEA8">10</span><span style="color: #D4D4D4">, </span><span style="color: #B5CEA8">20</span><span style="color: #D4D4D4">]</span></span>
<span class="line"><span style="color: #D4D4D4"> </span><span style="color: #C586C0">for</span><span style="color: #D4D4D4"> col_index, col_name </span><span style="color: #C586C0">in</span><span style="color: #D4D4D4"> </span><span style="color: #DCDCAA">enumerate</span><span style="color: #D4D4D4">(columns):</span></span>
<span class="line"><span style="color: #D4D4D4"> label = tk.Label(</span><span style="color: #569CD6">self</span><span style="color: #D4D4D4">, </span><span style="color: #9CDCFE">text</span><span style="color: #D4D4D4">=col_name, </span><span style="color: #9CDCFE">padx</span><span style="color: #D4D4D4">=</span><span style="color: #B5CEA8">5</span><span style="color: #D4D4D4">, </span><span style="color: #9CDCFE">pady</span><span style="color: #D4D4D4">=</span><span style="color: #B5CEA8">5</span><span style="color: #D4D4D4">)</span></span>
<span class="line"><span style="color: #D4D4D4"> label.grid(</span><span style="color: #9CDCFE">row</span><span style="color: #D4D4D4">=</span><span style="color: #B5CEA8">0</span><span style="color: #D4D4D4">, </span><span style="color: #9CDCFE">column</span><span style="color: #D4D4D4">=col_index)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D4D4D4"> </span><span style="color: #6A9955"># Iterate over users and create Entry widgets</span></span>
<span class="line"><span style="color: #D4D4D4"> </span><span style="color: #C586C0">for</span><span style="color: #D4D4D4"> row_index, user </span><span style="color: #C586C0">in</span><span style="color: #D4D4D4"> </span><span style="color: #DCDCAA">enumerate</span><span style="color: #D4D4D4">(users):</span></span>
<span class="line"><span style="color: #D4D4D4"> </span><span style="color: #C586C0">for</span><span style="color: #D4D4D4"> col_index, value </span><span style="color: #C586C0">in</span><span style="color: #D4D4D4"> </span><span style="color: #DCDCAA">enumerate</span><span style="color: #D4D4D4">(user):</span></span>
<span class="line"><span style="color: #D4D4D4"> entry = tk.Entry(</span><span style="color: #569CD6">self</span><span style="color: #D4D4D4">, </span><span style="color: #9CDCFE">width</span><span style="color: #D4D4D4">=column_widths[col_index], </span><span style="color: #9CDCFE">disabledforeground</span><span style="color: #D4D4D4">=</span><span style="color: #CE9178">&quot;black&quot;</span><span style="color: #D4D4D4">)</span></span>
<span class="line"><span style="color: #D4D4D4"> entry.grid(</span><span style="color: #9CDCFE">row</span><span style="color: #D4D4D4">=row_index + </span><span style="color: #B5CEA8">1</span><span style="color: #D4D4D4">, </span><span style="color: #9CDCFE">column</span><span style="color: #D4D4D4">=col_index)</span></span>
<span class="line"><span style="color: #D4D4D4"> entry.insert(</span><span style="color: #B5CEA8">0</span><span style="color: #D4D4D4">, </span><span style="color: #4EC9B0">str</span><span style="color: #D4D4D4">(value)) </span><span style="color: #6A9955"># Insert user data into Entry widget</span></span>
<span class="line"><span style="color: #D4D4D4"> entry.configure(</span><span style="color: #9CDCFE">state</span><span style="color: #D4D4D4">=</span><span style="color: #CE9178">&quot;disabled&quot;</span><span style="color: #D4D4D4">)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color: #D4D4D4">root = tk.Tk()</span></span>
<span class="line"><span style="color: #D4D4D4">root.eval(</span><span style="color: #CE9178">&#39;tk::PlaceWindow . center&#39;</span><span style="color: #D4D4D4">)</span></span>
<span class="line"><span style="color: #D4D4D4">WelcomeWindow(root)</span></span>
<span class="line"><span style="color: #D4D4D4">root.mainloop()</span></span></code></pre></div>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<hr>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<p>This marks the end of the Python Tkinter GUI with SQLite Tutorial. Any suggestions or contributions for CodersLegacy are more than welcome. Questions regarding the tutorial content can be asked in the comments section below.</p>
<p>The post <a href="https://coderslegacy.com/python-tkinter-gui-with-sqlite-tutorial/">Python Tkinter GUI with SQLite Tutorial</a> appeared first on <a href="https://coderslegacy.com">CodersLegacy</a>.</p>]]></description>
                <pubDate>Mon, 17 Feb 2025 22:43:00 +0200</pubDate>
                <guid isPermaLink="false">https://api.follow.it/track-rss-story-click/v3/Pni2oPawGk0gSMjnOn_nY7VeiPtDcMc_</guid>
            </item>
                    <item>
                <title><![CDATA[Mastering FFmpeg Streaming and RTSP: A Comprehensive Guide]]></title>
                <link>https://api.follow.it/track-rss-story-click/v3/Pni2oPawGk0maLgbg_cZRPwqh5Ir64hJ</link>
                <description><![CDATA[<img src="https://api.follow.it/track-rss-story-loaded/v1/LqTrmv9PJPK5wdYMkTi61xeIF_fEM9tn" border=0 width="1" height="1" alt="Mastering FFmpeg Streaming and RTSP: A Comprehensive Guide" title="Mastering FFmpeg Streaming and RTSP: A Comprehensive Guide"> <p>Streaming video and audio has never been more accessible, thanks to powerful tools like FFmpeg and robust protocols such as RTSP. </p>



<p>Whether you&#8217;re building a live streaming application or setting up a surveillance system, this guide will walk you through everything you need to know—from understanding the need for an RTSP server to using FFmpeg for a variety of streaming scenarios, including HLS.</p>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<hr>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<h2 class="wp-block-heading">Introduction to FFmpeg</h2>



<p>In today&#8217;s digital age, streaming media has become an essential part of communication, entertainment, and security. At the heart of many streaming solutions lies FFmpeg, an open-source command-line tool that can handle nearly every audio and video processing task imaginable. Combined with the RTSP (Real Time Streaming Protocol), FFmpeg can stream content in real time, making it ideal for applications like live broadcasts, remote surveillance, and interactive media experiences.</p>



<p>In this blog post, we’ll explore:</p>



<ul class="wp-block-list">
<li><strong>Why you need an RTSP server:</strong> Understanding its role in a streaming ecosystem.</li>



<li><strong>Setting up an RTSP server using MediaMTX:</strong> Both via Docker and traditional installation.</li>



<li><strong>Using FFmpeg to push streams:</strong> From files, microphones, and webcams.</li>



<li><strong>Creating HLS streams with FFmpeg:</strong> For broader device compatibility and adaptive streaming.</li>
</ul>



<p>Let’s dive in!</p>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<hr>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<h2 class="wp-block-heading">The Need for an RTSP Server</h2>



<p>First, let&#8217;s discuss what RTSP even is. </p>



<p>RTSP stands for Real Time Streaming Protocol. It’s a network control protocol designed for use in entertainment and communications systems to control streaming media servers. In simpler terms, RTSP allows clients (like media players) to control a media stream (pause, play, record, etc.) from a server. Unlike HTTP-based streaming, RTSP is built for real-time streaming and is widely used in video surveillance, live broadcasts, and remote conferencing.</p>



<p>So why do we need an RTSP server when already have FFmpeg to create the RTSP stream?</p>



<p>Well that&#8217;s because we need something that can &#8220;accept&#8221; and &#8220;distribute&#8221; the stream. FFmpeg can stream &#8220;to&#8221; a URL, but cannot &#8220;publish&#8221; or &#8220;distribute&#8221; the stream. Good RTSP servers are also highly optimized for fast streaming, highly scalable for handling multiple streams, and also implement cool features like synchronization and buffering. </p>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<hr>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<h2 class="wp-block-heading">Setting Up MediaMTX RTSP Server</h2>



<p>MediaMTX (formerly known as RTSP Simple Server) is a popular open-source RTSP server that&#8217;s simple to set up and use. It supports various streaming protocols and is lightweight, making it an excellent choice for both hobbyists and professionals.<br><br></p>



<h3 class="wp-block-heading">Option 1: Setting Up MediaMTX Using Docker</h3>



<p>Using Docker is often the quickest way to get started without worrying about dependencies or system configurations. If you already have Docker installed, this is a pretty good way to get started with MediaMTX.</p>



<ol class="wp-block-list">
<li><strong>Pull and Launch the MediaMTX Docker Image:</strong></li>
</ol>



<div class="wp-block-kevinbatdorf-code-block-pro" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:flex;align-items:center;padding:10px 0px 10px 16px;margin-bottom:-2px;width:100%;text-align:left;background-color:#2b2b2b;color:#c7c7c7">Bash</span><span role="button" tabindex="0" data-code="docker run --rm -it --network=host bluenviron/mediamtx:latest" style="color:#D4D4D4;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path></svg></span><pre class="shiki dark-plus" style="background-color: #1E1E1E" tabindex="0"><code><span class="line"><span style="color: #DCDCAA">docker</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">run</span><span style="color: #D4D4D4"> </span><span style="color: #569CD6">--rm</span><span style="color: #D4D4D4"> </span><span style="color: #569CD6">-it</span><span style="color: #D4D4D4"> </span><span style="color: #569CD6">--network=host</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">bluenviron/mediamtx:latest</span></span></code></pre></div>



<ol start="2" class="wp-block-list">
<li><strong>Verify the Setup:</strong> Open your web browser and navigate to <code>http://localhost:8888</code> to access the MediaMTX dashboard.</li>
</ol>



<p><br></p>



<h3 class="wp-block-heading">Option 2: Traditional Installation</h3>



<p>If you prefer installing directly on your machine without Docker, follow these steps:</p>



<ol class="wp-block-list">
<li><strong>Download MediaMTX:</strong> Visit the <a href="https://github.com/aler9/mediamtx">MediaMTX GitHub repository</a> and follow the instructions to download the latest release.<br><br></li>



<li><strong>Install Dependencies:</strong> Ensure you have the necessary dependencies installed (e.g., Go runtime if building from source). For most distributions, precompiled binaries are available.<br><br></li>



<li><strong>Run MediaMTX:</strong> Once downloaded, run the server by executing:</li>
</ol>



<div class="wp-block-kevinbatdorf-code-block-pro" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:flex;align-items:center;padding:10px 0px 10px 16px;margin-bottom:-2px;width:100%;text-align:left;background-color:#2b2b2b;color:#c7c7c7">Bash</span><span role="button" tabindex="0" data-code="./mediamtx" style="color:#D4D4D4;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path></svg></span><pre class="shiki dark-plus" style="background-color: #1E1E1E" tabindex="0"><code><span class="line"><span style="color: #DCDCAA">./mediamtx</span></span></code></pre></div>



<ol start="4" class="wp-block-list">
<li><strong>Access the Dashboard:</strong> As with the Docker method, navigate to <code>http://localhost:8888</code> in your web browser to access the server dashboard.</li>
</ol>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<hr>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<h2 class="wp-block-heading">4. Using FFmpeg to Push Streams</h2>



<p>FFmpeg is an incredibly versatile tool for handling multimedia content. In this section, we’ll explore several ways to use FFmpeg to push streams to your RTSP server. Whether your source is a file, a microphone, or a webcam, FFmpeg has you covered.<br><br></p>



<h3 class="wp-block-heading">4.1. Streaming a File </h3>



<p>To stream a video file (e.g., <code>sample.mp4</code>) to your RTSP server:</p>



<pre class="wp-block-preformatted"><code>ffmpeg -re -i sample.mp4 -c copy -f rtsp rtsp://localhost:8554/live.sdp</code></pre>



<p><strong>Explanation:</strong></p>



<ul class="wp-block-list">
<li><code>-re</code>: Read input at native frame rate (real time).</li>



<li><code>-i sample.mp4</code>: Input file.</li>



<li><code>-c copy</code>: Copy the streams without re-encoding.</li>



<li><code>-f rtsp</code>: Use RTSP as the output format.</li>



<li><code>rtsp://localhost:8554/live.sdp</code>: RTSP server URL and stream name.</li>
</ul>



<p><br></p>



<h3 class="wp-block-heading">4.2. Streaming from a Microphone (Linux)</h3>



<p>To capture audio from your microphone and stream it:</p>



<pre class="wp-block-preformatted"><code>ffmpeg -f alsa -i default -acodec libmp3lame -ab 128k -ar 44100 -f rtsp rtsp://localhost:8554/micstream.sdp</code></pre>



<p><strong>Explanation:</strong></p>



<ul class="wp-block-list">
<li><code>-f alsa</code>: Use ALSA (Advanced Linux Sound Architecture) for audio capture (Linux). For Windows or macOS, you might need to use a different input format (e.g., <code>-f dshow</code> on Windows).</li>



<li><code>-i default</code>: Use the default audio device.</li>



<li><code>-acodec libmp3lame</code>: Encode audio using MP3.</li>



<li><code>-ab 128k</code>: Set audio bitrate to 128 kbps.</li>



<li><code>-ar 44100</code>: Set audio sample rate to 44.1 kHz.</li>



<li><code>-f rtsp rtsp://localhost:8554/micstream.sdp</code>: Output to RTSP.</li>
</ul>



<p><br></p>



<p>4.3. Streaming from a Microphone (Windows)</p>



<p>For live audio capture from a microphone on Windows, FFmpeg leverages DirectShow. First, you need to identify your microphone’s device name. Run the following command to list available DirectShow devices:</p>



<div class="wp-block-kevinbatdorf-code-block-pro" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:flex;align-items:center;padding:10px 0px 10px 16px;margin-bottom:-2px;width:100%;text-align:left;background-color:#2b2b2b;color:#c7c7c7">Bash</span><span role="button" tabindex="0" data-code="ffmpeg -list_devices true -f dshow -i dummy" style="color:#D4D4D4;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path></svg></span><pre class="shiki dark-plus" style="background-color: #1E1E1E" tabindex="0"><code><span class="line"><span style="color: #DCDCAA">ffmpeg</span><span style="color: #D4D4D4"> </span><span style="color: #569CD6">-list_devices</span><span style="color: #D4D4D4"> </span><span style="color: #569CD6">true</span><span style="color: #D4D4D4"> </span><span style="color: #569CD6">-f</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">dshow</span><span style="color: #D4D4D4"> </span><span style="color: #569CD6">-i</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">dummy</span></span></code></pre></div>



<p>Look for the audio device name in the output (for example, <code>"Microphone (Realtek High Definition Audio)"</code>). Then, use that device name in the command:</p>



<div class="wp-block-kevinbatdorf-code-block-pro" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:flex;align-items:center;padding:10px 0px 10px 16px;margin-bottom:-2px;width:100%;text-align:left;background-color:#2b2b2b;color:#c7c7c7">Bash</span><span role="button" tabindex="0" data-code="ffmpeg -f dshow -i audio=&quot;Microphone (Realtek High Definition Audio)&quot; -acodec libmp3lame -ab 128k -ar 44100 -f rtsp rtsp://localhost:8554/micstream.sdp" style="color:#D4D4D4;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path></svg></span><pre class="shiki dark-plus" style="background-color: #1E1E1E" tabindex="0"><code><span class="line"><span style="color: #DCDCAA">ffmpeg</span><span style="color: #D4D4D4"> </span><span style="color: #569CD6">-f</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">dshow</span><span style="color: #D4D4D4"> </span><span style="color: #569CD6">-i</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">audio=&quot;Microphone (Realtek High Definition Audio)&quot;</span><span style="color: #D4D4D4"> </span><span style="color: #569CD6">-acodec</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">libmp3lame</span><span style="color: #D4D4D4"> </span><span style="color: #569CD6">-ab</span><span style="color: #D4D4D4"> </span><span style="color: #B5CEA8">128</span><span style="color: #CE9178">k</span><span style="color: #D4D4D4"> </span><span style="color: #569CD6">-ar</span><span style="color: #D4D4D4"> </span><span style="color: #B5CEA8">44100</span><span style="color: #D4D4D4"> </span><span style="color: #569CD6">-f</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">rtsp</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">rtsp://localhost:8554/micstream.sdp</span></span></code></pre></div>



<p><strong>Explanation:</strong></p>



<ul class="wp-block-list">
<li><strong><code>-f dshow</code></strong>: Uses DirectShow as the input format.</li>



<li><strong><code>-i audio="Microphone (Realtek High Definition Audio)"</code></strong>: Specifies the audio input device (replace with your microphone’s actual name).</li>



<li><strong><code>-acodec libmp3lame</code></strong>: Encodes the audio using the MP3 codec.</li>



<li><strong><code>-ab 128k</code></strong>: Sets the audio bitrate to 128 kbps.</li>



<li><strong><code>-ar 44100</code></strong>: Sets the audio sample rate to 44.1 kHz.</li>



<li><strong><code>-f rtsp rtsp://localhost:8554/micstream.sdp</code></strong>: Streams the captured audio to the RTSP server.</li>
</ul>



<p><br></p>



<h3 class="wp-block-heading">4.4. Streaming from a Webcam (Linux)</h3>



<p>To stream video from your webcam (on Linux, typically <code>/dev/video0</code>):</p>



<div class="wp-block-kevinbatdorf-code-block-pro" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:flex;align-items:center;padding:10px 0px 10px 16px;margin-bottom:-2px;width:100%;text-align:left;background-color:#2b2b2b;color:#c7c7c7">Bash</span><span role="button" tabindex="0" data-code="ffmpeg -f v4l2 -i /dev/video0 -c:v libx264 -preset veryfast -maxrate 3000k -bufsize 6000k -f rtsp rtsp://localhost:8554/webcam.sdp" style="color:#D4D4D4;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path></svg></span><pre class="shiki dark-plus" style="background-color: #1E1E1E" tabindex="0"><code><span class="line"><span style="color: #DCDCAA">ffmpeg</span><span style="color: #D4D4D4"> </span><span style="color: #569CD6">-f</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">v4l2</span><span style="color: #D4D4D4"> </span><span style="color: #569CD6">-i</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">/dev/video0</span><span style="color: #D4D4D4"> </span><span style="color: #569CD6">-c:v</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">libx264</span><span style="color: #D4D4D4"> </span><span style="color: #569CD6">-preset</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">veryfast</span><span style="color: #D4D4D4"> </span><span style="color: #569CD6">-maxrate</span><span style="color: #D4D4D4"> </span><span style="color: #B5CEA8">3000</span><span style="color: #CE9178">k</span><span style="color: #D4D4D4"> </span><span style="color: #569CD6">-bufsize</span><span style="color: #D4D4D4"> </span><span style="color: #B5CEA8">6000</span><span style="color: #CE9178">k</span><span style="color: #D4D4D4"> </span><span style="color: #569CD6">-f</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">rtsp</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">rtsp://localhost:8554/webcam.sdp</span></span></code></pre></div>



<p>For both audio and video:</p>



<div class="wp-block-kevinbatdorf-code-block-pro" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:flex;align-items:center;padding:10px 0px 10px 16px;margin-bottom:-2px;width:100%;text-align:left;background-color:#2b2b2b;color:#c7c7c7">Bash</span><span role="button" tabindex="0" data-code="ffmpeg -f v4l2 -i /dev/video0 -f alsa -i default -c:v libx264 -preset veryfast -maxrate 3000k -bufsize 6000k -c:a aac -b:a 128k -f rtsp rtsp://localhost:8554/camstream.sdp" style="color:#D4D4D4;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path></svg></span><pre class="shiki dark-plus" style="background-color: #1E1E1E" tabindex="0"><code><span class="line"><span style="color: #DCDCAA">ffmpeg</span><span style="color: #D4D4D4"> </span><span style="color: #569CD6">-f</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">v4l2</span><span style="color: #D4D4D4"> </span><span style="color: #569CD6">-i</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">/dev/video0</span><span style="color: #D4D4D4"> </span><span style="color: #569CD6">-f</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">alsa</span><span style="color: #D4D4D4"> </span><span style="color: #569CD6">-i</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">default</span><span style="color: #D4D4D4"> </span><span style="color: #569CD6">-c:v</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">libx264</span><span style="color: #D4D4D4"> </span><span style="color: #569CD6">-preset</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">veryfast</span><span style="color: #D4D4D4"> </span><span style="color: #569CD6">-maxrate</span><span style="color: #D4D4D4"> </span><span style="color: #B5CEA8">3000</span><span style="color: #CE9178">k</span><span style="color: #D4D4D4"> </span><span style="color: #569CD6">-bufsize</span><span style="color: #D4D4D4"> </span><span style="color: #B5CEA8">6000</span><span style="color: #CE9178">k</span><span style="color: #D4D4D4"> </span><span style="color: #569CD6">-c:a</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">aac</span><span style="color: #D4D4D4"> </span><span style="color: #569CD6">-b:a</span><span style="color: #D4D4D4"> </span><span style="color: #B5CEA8">128</span><span style="color: #CE9178">k</span><span style="color: #D4D4D4"> </span><span style="color: #569CD6">-f</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">rtsp</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">rtsp://localhost:8554/camstream.sdp</span></span></code></pre></div>



<p><strong>Explanation:</strong></p>



<ul class="wp-block-list">
<li><code>-f v4l2</code>: Use Video4Linux2 for video capture.</li>



<li><code>-i /dev/video0</code>: Specify the webcam device.</li>



<li><code>-c:v libx264</code>: Encode video using H.264.</li>



<li><code>-preset veryfast</code>: Use the “veryfast” preset for lower latency.</li>



<li><code>-maxrate</code> and <code>-bufsize</code>: Control bitrate and buffering.</li>



<li><code>-f rtsp rtsp://localhost:8554/webcam.sdp</code>: Output stream to RTSP server.</li>



<li><code>-f alsa -i default</code>: Captures audio from the default ALSA device.</li>
</ul>



<p><br></p>



<p>4.5. Streaming from a Webcam (Windows)</p>



<p>Like before, you can capture video from your webcam using DirectShow. First, list available video devices with:</p>



<div class="wp-block-kevinbatdorf-code-block-pro" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:flex;align-items:center;padding:10px 0px 10px 16px;margin-bottom:-2px;width:100%;text-align:left;background-color:#2b2b2b;color:#c7c7c7">Bash</span><span role="button" tabindex="0" data-code="ffmpeg -list_devices true -f dshow -i dummy" style="color:#D4D4D4;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path></svg></span><pre class="shiki dark-plus" style="background-color: #1E1E1E" tabindex="0"><code><span class="line"><span style="color: #DCDCAA">ffmpeg</span><span style="color: #D4D4D4"> </span><span style="color: #569CD6">-list_devices</span><span style="color: #D4D4D4"> </span><span style="color: #569CD6">true</span><span style="color: #D4D4D4"> </span><span style="color: #569CD6">-f</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">dshow</span><span style="color: #D4D4D4"> </span><span style="color: #569CD6">-i</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">dummy</span></span></code></pre></div>



<p>Identify your webcam’s device name (for example, <code>"Integrated Camera"</code> or <code>"Logitech HD Webcam C270"</code>). Then, stream the webcam feed with a command like this:</p>



<div class="wp-block-kevinbatdorf-code-block-pro" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:flex;align-items:center;padding:10px 0px 10px 16px;margin-bottom:-2px;width:100%;text-align:left;background-color:#2b2b2b;color:#c7c7c7">Bash</span><span role="button" tabindex="0" data-code="ffmpeg -f dshow -i video=&quot;Integrated Camera&quot; -c:v libx264 -preset veryfast -maxrate 3000k -bufsize 6000k -f rtsp rtsp://localhost:8554/webcam.sdp" style="color:#D4D4D4;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path></svg></span><pre class="shiki dark-plus" style="background-color: #1E1E1E" tabindex="0"><code><span class="line"><span style="color: #DCDCAA">ffmpeg</span><span style="color: #D4D4D4"> </span><span style="color: #569CD6">-f</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">dshow</span><span style="color: #D4D4D4"> </span><span style="color: #569CD6">-i</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">video=&quot;Integrated Camera&quot;</span><span style="color: #D4D4D4"> </span><span style="color: #569CD6">-c:v</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">libx264</span><span style="color: #D4D4D4"> </span><span style="color: #569CD6">-preset</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">veryfast</span><span style="color: #D4D4D4"> </span><span style="color: #569CD6">-maxrate</span><span style="color: #D4D4D4"> </span><span style="color: #B5CEA8">3000</span><span style="color: #CE9178">k</span><span style="color: #D4D4D4"> </span><span style="color: #569CD6">-bufsize</span><span style="color: #D4D4D4"> </span><span style="color: #B5CEA8">6000</span><span style="color: #CE9178">k</span><span style="color: #D4D4D4"> </span><span style="color: #569CD6">-f</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">rtsp</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">rtsp://localhost:8554/webcam.sdp</span></span></code></pre></div>



<p>To capture both video and audio, you’ll need to identify your camera and microphone device names.</p>



<div class="wp-block-kevinbatdorf-code-block-pro" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:flex;align-items:center;padding:10px 0px 10px 16px;margin-bottom:-2px;width:100%;text-align:left;background-color:#2b2b2b;color:#c7c7c7">Bash</span><span role="button" tabindex="0" data-code="ffmpeg -f dshow -i video=&quot;Integrated Camera&quot;:audio=&quot;Microphone (Realtek High Definition Audio)&quot; -c:v libx264 -preset veryfast -maxrate 3000k -bufsize 6000k -c:a aac -b:a 128k -f rtsp rtsp://localhost:8554/camstream.sdp" style="color:#D4D4D4;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path></svg></span><pre class="shiki dark-plus" style="background-color: #1E1E1E" tabindex="0"><code><span class="line"><span style="color: #DCDCAA">ffmpeg</span><span style="color: #D4D4D4"> </span><span style="color: #569CD6">-f</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">dshow</span><span style="color: #D4D4D4"> </span><span style="color: #569CD6">-i</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">video=&quot;Integrated Camera&quot;:audio=&quot;Microphone (Realtek High Definition Audio)&quot;</span><span style="color: #D4D4D4"> </span><span style="color: #569CD6">-c:v</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">libx264</span><span style="color: #D4D4D4"> </span><span style="color: #569CD6">-preset</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">veryfast</span><span style="color: #D4D4D4"> </span><span style="color: #569CD6">-maxrate</span><span style="color: #D4D4D4"> </span><span style="color: #B5CEA8">3000</span><span style="color: #CE9178">k</span><span style="color: #D4D4D4"> </span><span style="color: #569CD6">-bufsize</span><span style="color: #D4D4D4"> </span><span style="color: #B5CEA8">6000</span><span style="color: #CE9178">k</span><span style="color: #D4D4D4"> </span><span style="color: #569CD6">-c:a</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">aac</span><span style="color: #D4D4D4"> </span><span style="color: #569CD6">-b:a</span><span style="color: #D4D4D4"> </span><span style="color: #B5CEA8">128</span><span style="color: #CE9178">k</span><span style="color: #D4D4D4"> </span><span style="color: #569CD6">-f</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">rtsp</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">rtsp://localhost:8554/camstream.sdp</span></span></code></pre></div>



<p><strong>Explanation:</strong></p>



<ul class="wp-block-list">
<li><strong><code>-f dshow</code></strong>: Uses DirectShow as the input format.</li>



<li><strong><code>-i video="Integrated Camera"</code></strong>: Specifies the video input device (replace with your webcam’s actual name).</li>



<li><strong><code>-c:v libx264</code></strong>: Encodes video using the H.264 codec.</li>



<li><strong><code>-preset veryfast</code></strong>: Uses the “veryfast” preset for quick encoding with lower latency.</li>



<li><strong><code>-maxrate 3000k -bufsize 6000k</code></strong>: Controls bitrate and buffering to maintain a steady stream.</li>



<li><strong><code>-f rtsp rtsp://localhost:8554/webcam.sdp</code></strong>: Streams the webcam feed to the RTSP server.</li>
</ul>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<hr>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<h2 class="wp-block-heading">Verifying Your Stream with FFplay or VLC</h2>



<p>After setting up your streaming pipeline, it&#8217;s important to verify that your stream is being broadcast correctly. Two common tools for this task are <strong>FFplay</strong> and <strong>VLC</strong>, both of which offer straightforward ways to play network streams.<br><br></p>



<h3 class="wp-block-heading">Using FFplay</h3>



<p>FFplay is a simple media player that comes bundled with FFmpeg. To verify your stream, simply open a Command Prompt or terminal window and run:</p>



<div class="wp-block-kevinbatdorf-code-block-pro" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:flex;align-items:center;padding:10px 0px 10px 16px;margin-bottom:-2px;width:100%;text-align:left;background-color:#2b2b2b;color:#c7c7c7">Bash</span><span role="button" tabindex="0" data-code="ffplay rtsp://localhost:8554/live.sdp" style="color:#D4D4D4;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path></svg></span><pre class="shiki dark-plus" style="background-color: #1E1E1E" tabindex="0"><code><span class="line"><span style="color: #DCDCAA">ffplay</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">rtsp://localhost:8554/live.sdp</span></span></code></pre></div>



<p>Replace <code>rtsp://localhost:8554/live.sdp</code> with the URL of your stream if it&#8217;s different. FFplay will launch a window and begin playing the stream. Look for any signs of latency, dropped frames, or artifacts that might indicate issues with your stream.</p>



<p><br></p>



<h3 class="wp-block-heading">Using VLC</h3>



<p>VLC is a versatile media player available on most platforms. To verify your stream with VLC, follow these steps:</p>



<ol class="wp-block-list">
<li><strong>Open VLC Media Player.</strong></li>



<li><strong>Go to the Media Menu:</strong> Click on <code>Media</code> > <code>Open Network Stream...</code></li>



<li><strong>Enter the Stream URL:</strong> Input your stream URL (e.g., <code>rtsp://localhost:8554/live.sdp</code> or <code>http://localhost:8080/index.m3u8</code> for HLS).</li>



<li><strong>Click Play:</strong> VLC will connect to the stream and begin playback.</li>
</ol>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<hr>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<p>By mastering these tools and techniques, you can build robust streaming solutions tailored to a wide range of applications, whether for live broadcasting, remote surveillance, or interactive media. I hope this guide has provided you with a clear path to setting up your streaming environment. Happy streaming!</p>
<p>The post <a href="https://coderslegacy.com/ffmpeg-rtsp-streaming/">Mastering FFmpeg Streaming and RTSP: A Comprehensive Guide</a> appeared first on <a href="https://coderslegacy.com">CodersLegacy</a>.</p>]]></description>
                <pubDate>Sat, 15 Feb 2025 22:56:26 +0200</pubDate>
                <guid isPermaLink="false">https://api.follow.it/track-rss-story-click/v3/Pni2oPawGk0maLgbg_cZRPwqh5Ir64hJ</guid>
            </item>
                    <item>
                <title><![CDATA[The Global Interpreter Lock (GIL) in Python: A Comprehensive History]]></title>
                <link>https://api.follow.it/track-rss-story-click/v3/Pni2oPawGk2mBf9YteJXjtKEpFgimKzx</link>
                <description><![CDATA[<img src="https://api.follow.it/track-rss-story-loaded/v1/P9kWSsrtfSKPDnk9o8ldOeT5HJgy6HUf" border=0 width="1" height="1" alt="The Global Interpreter Lock (GIL) in Python: A Comprehensive History" title="The Global Interpreter Lock (GIL) in Python: A Comprehensive History"> <p>The Global Interpreter Lock, commonly referred to as the GIL, has been one of Python&#8217;s most discussed features since its inception. The GIL is a mutex that protects access to Python objects, preventing multiple native threads from executing Python bytecode at once. While it simplifies memory management in CPython, the most widely used Python implementation, it has also been a source of controversy, especially in multi-threaded applications.</p>



<p>This article delves into the entire history of the GIL, from its creation to its gradual phase-out, and finally, its optional status in Python 3.13.</p>



<p><br></p>


				<div class="wp-block-uagb-table-of-contents uagb-toc__align-left uagb-toc__columns-1  uagb-block-fc51994c     "
					data-scroll= "1"
					data-offset= "30"
					style=""
				>
				<div class="uagb-toc__wrap">
						<div class="uagb-toc__title">
							Table Of Contents						</div>
																<div class="uagb-toc__list-wrap">
						<ol class="uagb-toc__list"><li class="uagb-toc__list"><a href="#the-inception-of-the-global-interpreter-lock-gil" class="uagb-toc-link__trigger">The Inception of the Global Interpreter Lock (GIL)</a><ul class="uagb-toc__list"><li class="uagb-toc__list"><a href="#early-days-of-python-late-1980s-early-1990s" class="uagb-toc-link__trigger">Early Days of Python (Late 1980s &#8211; Early 1990s)</a><li class="uagb-toc__list"><li class="uagb-toc__list"><a href="#why-the-gil-made-sense-initially" class="uagb-toc-link__trigger">Why the GIL Made Sense Initially</a></li></ul></li><li class="uagb-toc__list"><a href="#the-growing-pains-of-the-gil" class="uagb-toc-link__trigger">The Growing Pains of the GIL</a><ul class="uagb-toc__list"><li class="uagb-toc__list"><a href="#the-advent-of-multi-core-processors-2000s" class="uagb-toc-link__trigger">The Advent of Multi-Core Processors (2000s)</a><li class="uagb-toc__list"><li class="uagb-toc__list"><a href="#community-pushback-and-attempts-to-remove-the-gil" class="uagb-toc-link__trigger">Community Pushback and Attempts to Remove the GIL</a></li></ul></li></ul></li><li class="uagb-toc__list"><a href="#pythons-evolution-the-global-interpreter-lock-gil-becomes-optional" class="uagb-toc-link__trigger">Python&#039;s Evolution: The Global Interpreter Lock (GIL) Becomes Optional</a><ul class="uagb-toc__list"><li class="uagb-toc__list"><a href="#continued-frustration-and-alternative-python-implementations" class="uagb-toc-link__trigger">Continued Frustration and Alternative Python Implementations</a><li class="uagb-toc__list"><li class="uagb-toc__list"><a href="#python-32-the-gil-is-redesigned" class="uagb-toc-link__trigger">Python 3.2: The GIL Is Redesigned</a><li class="uagb-toc__list"><li class="uagb-toc__list"><a href="#python-312-per-interpreter-gil-optimization" class="uagb-toc-link__trigger">Python 3.12: Per-Interpreter GIL Optimization</a><li class="uagb-toc__list"><li class="uagb-toc__list"><a href="#phasing-out-the-gil-the-path-to-python-313" class="uagb-toc-link__trigger">Phasing Out the GIL: The Path to Python 3.13</a><li class="uagb-toc__list"><li class="uagb-toc__list"><a href="#python-313-the-gil-becomes-optional" class="uagb-toc-link__trigger">Python 3.13: The GIL Becomes Optional</a></li></ul></li></ul></li></ul></li><li class="uagb-toc__list"><a href="#conclusion" class="uagb-toc-link__trigger">Conclusion</a></ul></ul></ul></ol>					</div>
									</div>
				</div>
			


<p><br></p>



<h2 class="wp-block-heading">The Inception of the Global Interpreter Lock (GIL)</h2>



<h3 class="wp-block-heading">Early Days of Python (Late 1980s &#8211; Early 1990s)</h3>



<p>Python was created by Guido van Rossum in the late 1980s, and the first official release, Python 1.0, was in 1991. From the very beginning, Python aimed to be an easy-to-use, high-level language that prioritized readability. However, when it came to implementing the language, especially in CPython, the reference implementation of Python, memory management and object access were critical concerns.</p>



<p>In the early days, computers were largely single-core, and multi-threaded applications were not as common. The GIL was introduced as a straightforward solution to protect Python’s internal data structures, particularly the reference counts used in its memory management system. By ensuring that only one thread could execute Python bytecode at a time, the GIL simplified the implementation of the interpreter, avoiding complex and error-prone code for thread-safe memory management.</p>



<p><br></p>



<h3 class="wp-block-heading">Why the GIL Made Sense Initially</h3>



<p>The decision to use the GIL was pragmatic:</p>



<ul class="wp-block-list">
<li><strong>Simplicity</strong>: The GIL allowed the Python interpreter to be implemented without the need for fine-grained locking around every operation on Python objects.</li>



<li><strong>Performance</strong>: On single-core machines, the GIL was not a performance bottleneck, as only one thread could execute at a time anyway. The overhead introduced by the GIL was negligible.</li>
</ul>



<p>At the time, the trade-offs seemed reasonable, and the GIL allowed Python to grow and evolve rapidly without being bogged down by the complexities of thread management.</p>



<p><br></p>



<h2 class="wp-block-heading">The Growing Pains of the GIL</h2>



<h3 class="wp-block-heading">The Advent of Multi-Core Processors (2000s)</h3>



<p>As multi-core processors became the norm in the early 2000s, the limitations of the GIL became more apparent. Developers started writing more multi-threaded applications, and the GIL quickly turned from a helpful feature into a significant bottleneck. Since the GIL allowed only one thread to execute Python bytecode at a time, Python programs couldn&#8217;t fully utilize the computational power of multi-core systems.</p>



<p><br></p>



<h3 class="wp-block-heading">Community Pushback and Attempts to Remove the GIL</h3>



<p>Over the years, there were several attempts by the Python community to remove or replace the GIL:</p>



<ul class="wp-block-list">
<li><strong>Greg Stein&#8217;s Free-threading Patch (1999)</strong>: One of the earliest attempts to remove the GIL came from Greg Stein, who proposed a patch that introduced fine-grained locks to replace the GIL. However, the performance overhead was too high, and the patch never made it into the mainline Python codebase.</li>



<li><strong>Python 3000 Discussions (2000s)</strong>: During the development of Python 3.0 (also known as Python 3000), there was significant discussion around removing the GIL. However, the challenges of maintaining backward compatibility and the complexity of alternative solutions meant that the GIL was retained.</li>
</ul>



<p>Despite these efforts, the GIL remained a part of CPython, and developers had to find workarounds, such as using <a href="https://coderslegacy.com/unlocking-the-power-of-multiprocessing-in-python/">multiprocessing</a> instead of threading to achieve parallelism.</p>



<p><br></p>



<h2 class="wp-block-heading">Python&#8217;s Evolution: The Global Interpreter Lock (GIL) Becomes Optional</h2>



<h3 class="wp-block-heading">Continued Frustration and Alternative Python Implementations</h3>



<p>As Python continued to grow in popularity, so did the frustration with the GIL. Some developers turned to alternative Python implementations that did not have a GIL:</p>



<ul class="wp-block-list">
<li><strong>Jython and IronPython</strong>: These implementations, based on the Java and .NET ecosystems respectively, do not have a GIL, allowing true multi-threading. However, they lacked the extensive library support of CPython.</li>



<li><strong>PyPy</strong>: Another alternative implementation, PyPy, focuses on performance through a <a href="https://coderslegacy.com/python-jit-compilers/">Just-In-Time (JIT) compiler</a>. While PyPy also uses a GIL, its speed improvements in other areas make it a popular choice.</li>
</ul>



<p><br></p>



<h3 class="wp-block-heading">Python 3.2: The GIL Is Redesigned</h3>



<p>In Python 3.2, the Global Interpreter Lock was not removed, but it was significantly improved. Antoine Pitrou, a Python core developer, redesigned the GIL to reduce contention and improve multi-threaded performance. This was a welcome change, but it did not eliminate the inherent limitations of the GIL on multi-core processors.</p>



<p><br></p>



<h3 class="wp-block-heading">Python 3.12: Per-Interpreter GIL Optimization</h3>



<p>A major milestone in the evolution of the Global Interpreter Lock (GIL) came with Python 3.12. This version introduced the &#8220;Per-Interpreter GIL&#8221; optimization, a significant shift from the traditional global GIL model. With this change, each sub-interpreter within a Python process received its own GIL, allowing sub-interpreters to run concurrently without interfering with each other. </p>



<p>This improvement dramatically reduced GIL contention in multi-threaded applications that utilized multiple sub-interpreters, making it possible to achieve better parallelism within a single process. While this did not fully remove the GIL, it was a crucial step towards reducing its impact, especially in scenarios involving complex, multi-threaded workloads.</p>



<p><br></p>



<h3 class="wp-block-heading">Phasing Out the GIL: The Path to Python 3.13</h3>



<p>The real breakthrough came in the 2020s with increasing community pressure and advancements in hardware and software engineering. The Python Steering Council and core developers began actively exploring ways to phase out the GIL or make it optional.</p>



<ul class="wp-block-list">
<li><strong>Sub-Interpreters and PEP 554</strong>: Python Enhancement Proposal 554 introduced the concept of sub-interpreters, allowing separate Python interpreters within the same process to run concurrently without sharing a GIL. This paved the way for more granular concurrency.<br><br></li>



<li><strong>PEP 684: Per-Interpreter GIL</strong>: Another significant step was the introduction of PEP 684, which proposed a per-interpreter GIL, allowing each sub-interpreter to have its own GIL, thus enabling true parallelism within a single process.</li>
</ul>



<p><br></p>



<h3 class="wp-block-heading">Python 3.13: The GIL Becomes Optional</h3>



<p>Finally, with the release of Python 3.13, the Global Interpreter Lock (GIL) has become optional. Developers can now choose to disable the GIL when building Python, allowing for true multi-threaded performance in CPython. This is a monumental change that reflects decades of evolution and addresses one of the most significant criticisms of Python.</p>



<ul class="wp-block-list">
<li><strong>Opting Out of the GIL</strong>: When building Python 3.13, developers can use a configuration option to disable the GIL. This involves using fine-grained locks and other mechanisms to manage concurrency, but it comes with some trade-offs in single-threaded performance.</li>
</ul>



<p><br></p>



<h2 class="wp-block-heading">Conclusion</h2>



<p>The history of the GIL is a story of trade-offs, pragmatism, and community-driven evolution. From its inception as a simple solution for single-threaded performance to its gradual phase-out and eventual optional status, the GIL has played a central role in shaping Python&#8217;s development. </p>



<p>With Python 3.13, the language has taken a significant step forward, offering developers more flexibility and better performance in multi-threaded applications. The future of Python, without the constraints of the GIL, looks brighter than ever, as it continues to adapt and grow in a rapidly evolving computing landscape.</p>
<p>The post <a href="https://coderslegacy.com/global-interpreter-lock-gil/">The Global Interpreter Lock (GIL) in Python: A Comprehensive History</a> appeared first on <a href="https://coderslegacy.com">CodersLegacy</a>.</p>]]></description>
                <pubDate>Sat, 31 Aug 2024 15:48:32 +0200</pubDate>
                <guid isPermaLink="false">https://api.follow.it/track-rss-story-click/v3/Pni2oPawGk2mBf9YteJXjtKEpFgimKzx</guid>
            </item>
                    <item>
                <title><![CDATA[Unlocking the Power of Multiprocessing in Python]]></title>
                <link>https://api.follow.it/track-rss-story-click/v3/Pni2oPawGk2RvKSLoap_oagzzHWHxDTV</link>
                <description><![CDATA[<img src="https://api.follow.it/track-rss-story-loaded/v1/wE_Fa3AVALzYBvw6aaXTe-T5HJgy6HUf" border=0 width="1" height="1" alt="Unlocking the Power of Multiprocessing in Python" title="Unlocking the Power of Multiprocessing in Python"> <p>Python is a versatile language that excels in many areas, but when it comes to taking full advantage of multi-core processors, it can sometimes feel like hitting a wall. This is where <strong>multiprocessing</strong> comes in—a powerful tool in Python&#8217;s arsenal that lets you break through the <a href="https://coderslegacy.com/global-interpreter-lock-gil/">limitations of the Global Interpreter Lock</a> (GIL) and unlock true parallelism in your programs.</p>



<p>In this guide, we’ll dive deep into the world of Python’s <code>multiprocessing</code> module. Whether you’re new to the concept or looking to refine your skills, this tutorial will take you through everything from the basics to more advanced techniques. </p>



<p><br></p>


				<div class="wp-block-uagb-table-of-contents uagb-toc__align-left uagb-toc__columns-1  uagb-block-f339daaf     "
					data-scroll= "1"
					data-offset= "30"
					style=""
				>
				<div class="uagb-toc__wrap">
						<div class="uagb-toc__title">
							Table Of Contents						</div>
																<div class="uagb-toc__list-wrap">
						<ol class="uagb-toc__list"><li class="uagb-toc__list"><a href="#why-multiprocessing" class="uagb-toc-link__trigger">Why Multiprocessing?</a><li class="uagb-toc__list"><a href="#getting-started-with-multiprocessing" class="uagb-toc-link__trigger">Getting Started with Multiprocessing</a><li class="uagb-toc__list"><a href="#sharing-data-between-processes" class="uagb-toc-link__trigger">Sharing Data Between Processes</a><li class="uagb-toc__list"><a href="#process-synchronization" class="uagb-toc-link__trigger">Process Synchronization</a><li class="uagb-toc__list"><a href="#managing-multiple-processes-with-pools" class="uagb-toc-link__trigger">Managing Multiple Processes with Pools</a><li class="uagb-toc__list"><a href="#handling-errors-in-multiprocessing" class="uagb-toc-link__trigger">Handling Errors in Multiprocessing</a><li class="uagb-toc__list"><a href="#best-practices-for-using-multiprocessing" class="uagb-toc-link__trigger">Best Practices for Using Multiprocessing</a><li class="uagb-toc__list"><a href="#real-world-use-cases" class="uagb-toc-link__trigger">Real-World Use Cases</a><li class="uagb-toc__list"><a href="#conclusion" class="uagb-toc-link__trigger">Conclusion</a></ol>					</div>
									</div>
				</div>
			


<p><br></p>



<h2 class="wp-block-heading">Why Multiprocessing?</h2>



<p>Before we get into the nitty-gritty, let’s talk about why multiprocessing is such a game-changer.</p>



<h3 class="wp-block-heading">The Problem with Threads</h3>



<p>If you’ve ever tried to use <a href="https://coderslegacy.com/python/how-to-create-a-new-thread/">threads in Python to run tasks concurrently</a>, you might have run into an annoying limitation: the Global Interpreter Lock, or GIL. The GIL ensures that only one thread executes Python bytecode at a time, which means that threads can’t run in parallel on multiple CPU cores. This effectively limits the performance benefits of threading, especially for CPU-bound tasks like number crunching or data processing.</p>



<p><br></p>



<h3 class="wp-block-heading">The Multiprocessing Solution</h3>



<p>Enter <strong>multiprocessing</strong>. Unlike threading, multiprocessing doesn’t share memory between tasks. Instead, it creates separate memory spaces for each process, allowing them to run truly in parallel on multiple cores. This makes it an ideal choice for CPU-bound tasks where you need to maximize performance.</p>



<p>Now that we’ve covered the “why,” let’s get into the “how.”</p>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<hr>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<h2 class="wp-block-heading">Getting Started with Multiprocessing</h2>



<p>Python’s <code>multiprocessing</code> module makes it easy to create and manage multiple processes. Let’s start with a simple example to get a feel for how it works.</p>



<h3 class="wp-block-heading">Creating Your First Process</h3>



<p>Creating a new process in Python is as easy as importing the <code>multiprocessing</code> module and using the <code>Process</code> class.</p>



<div class="wp-block-kevinbatdorf-code-block-pro" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:flex;align-items:center;padding:10px 0px 10px 16px;margin-bottom:-2px;width:100%;text-align:left;background-color:#2b2b2b;color:#c7c7c7">Python</span><span role="button" tabindex="0" data-code="import multiprocessing

def say_hello(name):
    print(f&quot;Hello, {name}!&quot;)

if __name__ == &quot;__main__&quot;:
    # Create a new process
    process = multiprocessing.Process(target=say_hello, args=(&quot;World&quot;,))

    # Start the process
    process.start()

    # Wait for the process to finish
    process.join()" style="color:#D4D4D4;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path></svg></span><pre class="shiki dark-plus" style="background-color: #1E1E1E" tabindex="0"><code><span class="line"><span style="color: #C586C0">import</span><span style="color: #D4D4D4"> multiprocessing</span></span>
<span class="line"></span>
<span class="line"><span style="color: #569CD6">def</span><span style="color: #D4D4D4"> </span><span style="color: #DCDCAA">say_hello</span><span style="color: #D4D4D4">(</span><span style="color: #9CDCFE">name</span><span style="color: #D4D4D4">):</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #DCDCAA">print</span><span style="color: #D4D4D4">(</span><span style="color: #569CD6">f</span><span style="color: #CE9178">&quot;Hello, </span><span style="color: #569CD6">{</span><span style="color: #D4D4D4">name</span><span style="color: #569CD6">}</span><span style="color: #CE9178">!&quot;</span><span style="color: #D4D4D4">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C586C0">if</span><span style="color: #D4D4D4"> </span><span style="color: #9CDCFE">__name__</span><span style="color: #D4D4D4"> == </span><span style="color: #CE9178">&quot;__main__&quot;</span><span style="color: #D4D4D4">:</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #6A9955"># Create a new process</span></span>
<span class="line"><span style="color: #D4D4D4">    process = multiprocessing.Process(</span><span style="color: #9CDCFE">target</span><span style="color: #D4D4D4">=say_hello, </span><span style="color: #9CDCFE">args</span><span style="color: #D4D4D4">=(</span><span style="color: #CE9178">&quot;World&quot;</span><span style="color: #D4D4D4">,))</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #6A9955"># Start the process</span></span>
<span class="line"><span style="color: #D4D4D4">    process.start()</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #6A9955"># Wait for the process to finish</span></span>
<span class="line"><span style="color: #D4D4D4">    process.join()</span></span></code></pre></div>



<h3 class="wp-block-heading">Breaking It Down</h3>



<ul class="wp-block-list">
<li><strong><code>target=say_hello</code></strong>: This is the function that the new process will run.</li>



<li><strong><code>args=("World",)</code></strong>: These are the arguments passed to the function.</li>



<li><strong><code>start()</code></strong>: This actually kicks off the process.</li>



<li><strong><code>join()</code></strong>: This makes the main program wait until the process finishes before moving on.</li>
</ul>



<p>When you run this code, you’ll see “Hello, World!” printed by the child process. Simple, right?</p>



<p><br></p>



<h3 class="wp-block-heading">Running Multiple Processes</h3>



<p>What if you want to run multiple tasks in parallel? Easy—you can create and start multiple processes just as easily.</p>



<div class="wp-block-kevinbatdorf-code-block-pro" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:flex;align-items:center;padding:10px 0px 10px 16px;margin-bottom:-2px;width:100%;text-align:left;background-color:#2b2b2b;color:#c7c7c7">Python</span><span role="button" tabindex="0" data-code="import multiprocessing

def say_hello(name):
    print(f&quot;Hello, {name}!&quot;)

if __name__ == &quot;__main__&quot;:
    processes = []
    for i in range(5):
        process = multiprocessing.Process(target=say_hello, args=(f&quot;World {i+1}&quot;,))
        processes.append(process)
        process.start()

    for process in processes:
        process.join()" style="color:#D4D4D4;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path></svg></span><pre class="shiki dark-plus" style="background-color: #1E1E1E" tabindex="0"><code><span class="line"><span style="color: #C586C0">import</span><span style="color: #D4D4D4"> multiprocessing</span></span>
<span class="line"></span>
<span class="line"><span style="color: #569CD6">def</span><span style="color: #D4D4D4"> </span><span style="color: #DCDCAA">say_hello</span><span style="color: #D4D4D4">(</span><span style="color: #9CDCFE">name</span><span style="color: #D4D4D4">):</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #DCDCAA">print</span><span style="color: #D4D4D4">(</span><span style="color: #569CD6">f</span><span style="color: #CE9178">&quot;Hello, </span><span style="color: #569CD6">{</span><span style="color: #D4D4D4">name</span><span style="color: #569CD6">}</span><span style="color: #CE9178">!&quot;</span><span style="color: #D4D4D4">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C586C0">if</span><span style="color: #D4D4D4"> </span><span style="color: #9CDCFE">__name__</span><span style="color: #D4D4D4"> == </span><span style="color: #CE9178">&quot;__main__&quot;</span><span style="color: #D4D4D4">:</span></span>
<span class="line"><span style="color: #D4D4D4">    processes = []</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #C586C0">for</span><span style="color: #D4D4D4"> i </span><span style="color: #C586C0">in</span><span style="color: #D4D4D4"> </span><span style="color: #DCDCAA">range</span><span style="color: #D4D4D4">(</span><span style="color: #B5CEA8">5</span><span style="color: #D4D4D4">):</span></span>
<span class="line"><span style="color: #D4D4D4">        process = multiprocessing.Process(</span><span style="color: #9CDCFE">target</span><span style="color: #D4D4D4">=say_hello, </span><span style="color: #9CDCFE">args</span><span style="color: #D4D4D4">=(</span><span style="color: #569CD6">f</span><span style="color: #CE9178">&quot;World </span><span style="color: #569CD6">{</span><span style="color: #D4D4D4">i+</span><span style="color: #B5CEA8">1</span><span style="color: #569CD6">}</span><span style="color: #CE9178">&quot;</span><span style="color: #D4D4D4">,))</span></span>
<span class="line"><span style="color: #D4D4D4">        processes.append(process)</span></span>
<span class="line"><span style="color: #D4D4D4">        process.start()</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #C586C0">for</span><span style="color: #D4D4D4"> process </span><span style="color: #C586C0">in</span><span style="color: #D4D4D4"> processes:</span></span>
<span class="line"><span style="color: #D4D4D4">        process.join()</span></span></code></pre></div>



<p>This code will create five processes, each printing a different greeting. The best part? They’ll all run in parallel, taking full advantage of your CPU’s cores.</p>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<hr>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<h2 class="wp-block-heading">Sharing Data Between Processes</h2>



<p>Since each process in multiprocessing has its own memory space, sharing data between processes isn’t as straightforward as it is with threads. But don’t worry—Python’s <code>multiprocessing</code> module gives you a few tools to handle this.</p>



<h3 class="wp-block-heading">Using Queues</h3>



<p>A <code>Queue</code> is a simple way to pass messages between processes. It’s a first-in, first-out (FIFO) structure that’s thread- and process-safe.</p>



<div class="wp-block-kevinbatdorf-code-block-pro" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:flex;align-items:center;padding:10px 0px 10px 16px;margin-bottom:-2px;width:100%;text-align:left;background-color:#2b2b2b;color:#c7c7c7">Python</span><span role="button" tabindex="0" data-code="import multiprocessing

def worker(queue):
    queue.put(&quot;Data from worker&quot;)

if __name__ == &quot;__main__&quot;:
    queue = multiprocessing.Queue()

    process = multiprocessing.Process(target=worker, args=(queue,))
    process.start()
    process.join()

    # Get data from the queue
    print(queue.get())" style="color:#D4D4D4;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path></svg></span><pre class="shiki dark-plus" style="background-color: #1E1E1E" tabindex="0"><code><span class="line"><span style="color: #C586C0">import</span><span style="color: #D4D4D4"> multiprocessing</span></span>
<span class="line"></span>
<span class="line"><span style="color: #569CD6">def</span><span style="color: #D4D4D4"> </span><span style="color: #DCDCAA">worker</span><span style="color: #D4D4D4">(</span><span style="color: #9CDCFE">queue</span><span style="color: #D4D4D4">):</span></span>
<span class="line"><span style="color: #D4D4D4">    queue.put(</span><span style="color: #CE9178">&quot;Data from worker&quot;</span><span style="color: #D4D4D4">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C586C0">if</span><span style="color: #D4D4D4"> </span><span style="color: #9CDCFE">__name__</span><span style="color: #D4D4D4"> == </span><span style="color: #CE9178">&quot;__main__&quot;</span><span style="color: #D4D4D4">:</span></span>
<span class="line"><span style="color: #D4D4D4">    queue = multiprocessing.Queue()</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D4D4D4">    process = multiprocessing.Process(</span><span style="color: #9CDCFE">target</span><span style="color: #D4D4D4">=worker, </span><span style="color: #9CDCFE">args</span><span style="color: #D4D4D4">=(queue,))</span></span>
<span class="line"><span style="color: #D4D4D4">    process.start()</span></span>
<span class="line"><span style="color: #D4D4D4">    process.join()</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #6A9955"># Get data from the queue</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #DCDCAA">print</span><span style="color: #D4D4D4">(queue.get())</span></span></code></pre></div>



<p>Here, the child process puts data into the queue, and the main process retrieves it. This is super useful for scenarios where you need processes to communicate or return results.</p>



<p><br></p>



<h3 class="wp-block-heading">Shared Memory: Value and Array</h3>



<p>If you need to share simple data types like integers or arrays between processes, <code>multiprocessing</code> provides <code>Value</code> and <code>Array</code>.</p>



<div class="wp-block-kevinbatdorf-code-block-pro" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:flex;align-items:center;padding:10px 0px 10px 16px;margin-bottom:-2px;width:100%;text-align:left;background-color:#2b2b2b;color:#c7c7c7">Python</span><span role="button" tabindex="0" data-code="import multiprocessing

def increment_value(shared_value):
    shared_value.value += 1

if __name__ == &quot;__main__&quot;:
    shared_value = multiprocessing.Value('i', 0)  # 'i' for integer

    processes = [multiprocessing.Process(target=increment_value, args=(shared_value,)) for _ in range(5)]

    for process in processes:
        process.start()

    for process in processes:
        process.join()

    print(f&quot;Final value: {shared_value.value}&quot;)" style="color:#D4D4D4;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path></svg></span><pre class="shiki dark-plus" style="background-color: #1E1E1E" tabindex="0"><code><span class="line"><span style="color: #C586C0">import</span><span style="color: #D4D4D4"> multiprocessing</span></span>
<span class="line"></span>
<span class="line"><span style="color: #569CD6">def</span><span style="color: #D4D4D4"> </span><span style="color: #DCDCAA">increment_value</span><span style="color: #D4D4D4">(</span><span style="color: #9CDCFE">shared_value</span><span style="color: #D4D4D4">):</span></span>
<span class="line"><span style="color: #D4D4D4">    shared_value.value += </span><span style="color: #B5CEA8">1</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C586C0">if</span><span style="color: #D4D4D4"> </span><span style="color: #9CDCFE">__name__</span><span style="color: #D4D4D4"> == </span><span style="color: #CE9178">&quot;__main__&quot;</span><span style="color: #D4D4D4">:</span></span>
<span class="line"><span style="color: #D4D4D4">    shared_value = multiprocessing.Value(</span><span style="color: #CE9178">&#39;i&#39;</span><span style="color: #D4D4D4">, </span><span style="color: #B5CEA8">0</span><span style="color: #D4D4D4">)  </span><span style="color: #6A9955"># &#39;i&#39; for integer</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D4D4D4">    processes = [multiprocessing.Process(</span><span style="color: #9CDCFE">target</span><span style="color: #D4D4D4">=increment_value, </span><span style="color: #9CDCFE">args</span><span style="color: #D4D4D4">=(shared_value,)) </span><span style="color: #C586C0">for</span><span style="color: #D4D4D4"> _ </span><span style="color: #C586C0">in</span><span style="color: #D4D4D4"> </span><span style="color: #DCDCAA">range</span><span style="color: #D4D4D4">(</span><span style="color: #B5CEA8">5</span><span style="color: #D4D4D4">)]</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #C586C0">for</span><span style="color: #D4D4D4"> process </span><span style="color: #C586C0">in</span><span style="color: #D4D4D4"> processes:</span></span>
<span class="line"><span style="color: #D4D4D4">        process.start()</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #C586C0">for</span><span style="color: #D4D4D4"> process </span><span style="color: #C586C0">in</span><span style="color: #D4D4D4"> processes:</span></span>
<span class="line"><span style="color: #D4D4D4">        process.join()</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #DCDCAA">print</span><span style="color: #D4D4D4">(</span><span style="color: #569CD6">f</span><span style="color: #CE9178">&quot;Final value: </span><span style="color: #569CD6">{</span><span style="color: #D4D4D4">shared_value.value</span><span style="color: #569CD6">}</span><span style="color: #CE9178">&quot;</span><span style="color: #D4D4D4">)</span></span></code></pre></div>



<p>In this example, five processes increment the same shared integer. The final output shows how multiprocessing can handle shared memory while keeping data consistent.</p>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<hr>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<h2 class="wp-block-heading">Process Synchronization</h2>



<p>When multiple processes need to access shared resources, synchronization becomes crucial. Without it, you could run into race conditions where processes interfere with each other.</p>



<h3 class="wp-block-heading">Using Locks</h3>



<p>A <code><a href="https://coderslegacy.com/python/how-to-use-locks-with-threads/">Lock</a></code> is a simple way to ensure that only one process accesses a resource at a time.</p>



<div class="wp-block-kevinbatdorf-code-block-pro" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:flex;align-items:center;padding:10px 0px 10px 16px;margin-bottom:-2px;width:100%;text-align:left;background-color:#2b2b2b;color:#c7c7c7">Python</span><span role="button" tabindex="0" data-code="import multiprocessing

def increment_value(shared_value, lock):
    with lock:
        shared_value.value += 1

if __name__ == &quot;__main__&quot;:
    lock = multiprocessing.Lock()
    shared_value = multiprocessing.Value('i', 0)

    processes = [multiprocessing.Process(target=increment_value, args=(shared_value, lock)) for _ in range(5)]

    for process in processes:
        process.start()

    for process in processes:
        process.join()

    print(f&quot;Final value with lock: {shared_value.value}&quot;)" style="color:#D4D4D4;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path></svg></span><pre class="shiki dark-plus" style="background-color: #1E1E1E" tabindex="0"><code><span class="line"><span style="color: #C586C0">import</span><span style="color: #D4D4D4"> multiprocessing</span></span>
<span class="line"></span>
<span class="line"><span style="color: #569CD6">def</span><span style="color: #D4D4D4"> </span><span style="color: #DCDCAA">increment_value</span><span style="color: #D4D4D4">(</span><span style="color: #9CDCFE">shared_value</span><span style="color: #D4D4D4">, </span><span style="color: #9CDCFE">lock</span><span style="color: #D4D4D4">):</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #C586C0">with</span><span style="color: #D4D4D4"> lock:</span></span>
<span class="line"><span style="color: #D4D4D4">        shared_value.value += </span><span style="color: #B5CEA8">1</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C586C0">if</span><span style="color: #D4D4D4"> </span><span style="color: #9CDCFE">__name__</span><span style="color: #D4D4D4"> == </span><span style="color: #CE9178">&quot;__main__&quot;</span><span style="color: #D4D4D4">:</span></span>
<span class="line"><span style="color: #D4D4D4">    lock = multiprocessing.Lock()</span></span>
<span class="line"><span style="color: #D4D4D4">    shared_value = multiprocessing.Value(</span><span style="color: #CE9178">&#39;i&#39;</span><span style="color: #D4D4D4">, </span><span style="color: #B5CEA8">0</span><span style="color: #D4D4D4">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D4D4D4">    processes = [multiprocessing.Process(</span><span style="color: #9CDCFE">target</span><span style="color: #D4D4D4">=increment_value, </span><span style="color: #9CDCFE">args</span><span style="color: #D4D4D4">=(shared_value, lock)) </span><span style="color: #C586C0">for</span><span style="color: #D4D4D4"> _ </span><span style="color: #C586C0">in</span><span style="color: #D4D4D4"> </span><span style="color: #DCDCAA">range</span><span style="color: #D4D4D4">(</span><span style="color: #B5CEA8">5</span><span style="color: #D4D4D4">)]</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #C586C0">for</span><span style="color: #D4D4D4"> process </span><span style="color: #C586C0">in</span><span style="color: #D4D4D4"> processes:</span></span>
<span class="line"><span style="color: #D4D4D4">        process.start()</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #C586C0">for</span><span style="color: #D4D4D4"> process </span><span style="color: #C586C0">in</span><span style="color: #D4D4D4"> processes:</span></span>
<span class="line"><span style="color: #D4D4D4">        process.join()</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #DCDCAA">print</span><span style="color: #D4D4D4">(</span><span style="color: #569CD6">f</span><span style="color: #CE9178">&quot;Final value with lock: </span><span style="color: #569CD6">{</span><span style="color: #D4D4D4">shared_value.value</span><span style="color: #569CD6">}</span><span style="color: #CE9178">&quot;</span><span style="color: #D4D4D4">)</span></span></code></pre></div>



<p>In this example, the <code>lock</code> ensures that only one process can increment the shared value at a time, <a href="https://coderslegacy.com/python/how-to-prevent-race-conditions/">preventing race conditions</a>.</p>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<hr>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<h2 class="wp-block-heading">Managing Multiple Processes with Pools</h2>



<p>When you have a lot of tasks to run, managing individual processes can get tricky. That’s where <code>Pool</code> comes in handy—it allows you to manage a pool of worker processes that can execute tasks concurrently.</p>



<h3 class="wp-block-heading">Example: Using a Pool</h3>



<div class="wp-block-kevinbatdorf-code-block-pro" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:flex;align-items:center;padding:10px 0px 10px 16px;margin-bottom:-2px;width:100%;text-align:left;background-color:#2b2b2b;color:#c7c7c7">Python</span><span role="button" tabindex="0" data-code="import multiprocessing

def square(n):
    return n * n

if __name__ == &quot;__main__&quot;:
    with multiprocessing.Pool(processes=4) as pool:
        results = pool.map(square, range(10))

    print(results)" style="color:#D4D4D4;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path></svg></span><pre class="shiki dark-plus" style="background-color: #1E1E1E" tabindex="0"><code><span class="line"><span style="color: #C586C0">import</span><span style="color: #D4D4D4"> multiprocessing</span></span>
<span class="line"></span>
<span class="line"><span style="color: #569CD6">def</span><span style="color: #D4D4D4"> </span><span style="color: #DCDCAA">square</span><span style="color: #D4D4D4">(</span><span style="color: #9CDCFE">n</span><span style="color: #D4D4D4">):</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #C586C0">return</span><span style="color: #D4D4D4"> n * n</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C586C0">if</span><span style="color: #D4D4D4"> </span><span style="color: #9CDCFE">__name__</span><span style="color: #D4D4D4"> == </span><span style="color: #CE9178">&quot;__main__&quot;</span><span style="color: #D4D4D4">:</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #C586C0">with</span><span style="color: #D4D4D4"> multiprocessing.Pool(</span><span style="color: #9CDCFE">processes</span><span style="color: #D4D4D4">=</span><span style="color: #B5CEA8">4</span><span style="color: #D4D4D4">) </span><span style="color: #C586C0">as</span><span style="color: #D4D4D4"> pool:</span></span>
<span class="line"><span style="color: #D4D4D4">        results = pool.map(square, </span><span style="color: #DCDCAA">range</span><span style="color: #D4D4D4">(</span><span style="color: #B5CEA8">10</span><span style="color: #D4D4D4">))</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #DCDCAA">print</span><span style="color: #D4D4D4">(results)</span></span></code></pre></div>



<h3 class="wp-block-heading">How It Works:</h3>



<ul class="wp-block-list">
<li><strong><code>Pool(processes=4)</code></strong>: Creates a pool with 4 worker processes.</li>



<li><strong><code>map()</code></strong>: Distributes the <code>square</code> function across the input range, with each worker process handling part of the workload.</li>
</ul>



<p>This is a super-efficient way to run the same function on multiple inputs, especially when you need to process large datasets.</p>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<hr>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<h2 class="wp-block-heading">Handling Errors in Multiprocessing</h2>



<p>One tricky aspect of multiprocessing is error handling. If a worker process encounters an error, it won’t automatically propagate to the main process. Here’s how you can handle that.</p>



<h3 class="wp-block-heading">Example: Catching Exceptions</h3>



<div class="wp-block-kevinbatdorf-code-block-pro" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:flex;align-items:center;padding:10px 0px 10px 16px;margin-bottom:-2px;width:100%;text-align:left;background-color:#2b2b2b;color:#c7c7c7">Python</span><span role="button" tabindex="0" data-code="import multiprocessing

def worker_function(n):
    if n == 5:
        raise ValueError(&quot;Intentional error&quot;)
    return n * n

def error_callback(error):
    print(f&quot;Error: {error}&quot;)

if __name__ == &quot;__main__&quot;:
    with multiprocessing.Pool(processes=4) as pool:
        try:
            results = pool.map(worker_function, range(10))
        except Exception as e:
            print(f&quot;An error occurred: {e}&quot;)" style="color:#D4D4D4;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path></svg></span><pre class="shiki dark-plus" style="background-color: #1E1E1E" tabindex="0"><code><span class="line"><span style="color: #C586C0">import</span><span style="color: #D4D4D4"> multiprocessing</span></span>
<span class="line"></span>
<span class="line"><span style="color: #569CD6">def</span><span style="color: #D4D4D4"> </span><span style="color: #DCDCAA">worker_function</span><span style="color: #D4D4D4">(</span><span style="color: #9CDCFE">n</span><span style="color: #D4D4D4">):</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #C586C0">if</span><span style="color: #D4D4D4"> n == </span><span style="color: #B5CEA8">5</span><span style="color: #D4D4D4">:</span></span>
<span class="line"><span style="color: #D4D4D4">        </span><span style="color: #C586C0">raise</span><span style="color: #D4D4D4"> </span><span style="color: #4EC9B0">ValueError</span><span style="color: #D4D4D4">(</span><span style="color: #CE9178">&quot;Intentional error&quot;</span><span style="color: #D4D4D4">)</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #C586C0">return</span><span style="color: #D4D4D4"> n * n</span></span>
<span class="line"></span>
<span class="line"><span style="color: #569CD6">def</span><span style="color: #D4D4D4"> </span><span style="color: #DCDCAA">error_callback</span><span style="color: #D4D4D4">(</span><span style="color: #9CDCFE">error</span><span style="color: #D4D4D4">):</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #DCDCAA">print</span><span style="color: #D4D4D4">(</span><span style="color: #569CD6">f</span><span style="color: #CE9178">&quot;Error: </span><span style="color: #569CD6">{</span><span style="color: #D4D4D4">error</span><span style="color: #569CD6">}</span><span style="color: #CE9178">&quot;</span><span style="color: #D4D4D4">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C586C0">if</span><span style="color: #D4D4D4"> </span><span style="color: #9CDCFE">__name__</span><span style="color: #D4D4D4"> == </span><span style="color: #CE9178">&quot;__main__&quot;</span><span style="color: #D4D4D4">:</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #C586C0">with</span><span style="color: #D4D4D4"> multiprocessing.Pool(</span><span style="color: #9CDCFE">processes</span><span style="color: #D4D4D4">=</span><span style="color: #B5CEA8">4</span><span style="color: #D4D4D4">) </span><span style="color: #C586C0">as</span><span style="color: #D4D4D4"> pool:</span></span>
<span class="line"><span style="color: #D4D4D4">        </span><span style="color: #C586C0">try</span><span style="color: #D4D4D4">:</span></span>
<span class="line"><span style="color: #D4D4D4">            results = pool.map(worker_function, </span><span style="color: #DCDCAA">range</span><span style="color: #D4D4D4">(</span><span style="color: #B5CEA8">10</span><span style="color: #D4D4D4">))</span></span>
<span class="line"><span style="color: #D4D4D4">        </span><span style="color: #C586C0">except</span><span style="color: #D4D4D4"> </span><span style="color: #4EC9B0">Exception</span><span style="color: #D4D4D4"> </span><span style="color: #C586C0">as</span><span style="color: #D4D4D4"> e:</span></span>
<span class="line"><span style="color: #D4D4D4">            </span><span style="color: #DCDCAA">print</span><span style="color: #D4D4D4">(</span><span style="color: #569CD6">f</span><span style="color: #CE9178">&quot;An error occurred: </span><span style="color: #569CD6">{</span><span style="color: #D4D4D4">e</span><span style="color: #569CD6">}</span><span style="color: #CE9178">&quot;</span><span style="color: #D4D4D4">)</span></span></code></pre></div>



<p>In this setup, if an error occurs in one of the worker processes, you can catch it and handle it gracefully. This ensures your application remains robust, even when things go wrong.</p>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<hr>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<h2 class="wp-block-heading">Best Practices for Using Multiprocessing</h2>



<p>To get the most out of multiprocessing, keep these tips in mind:</p>



<ol class="wp-block-list">
<li><strong>Avoid Excessive Process Creation</strong>: Creating too many processes can actually slow things down due to the overhead of managing them. Use a <code>Pool</code> to manage multiple tasks efficiently.<br><br></li>



<li><strong>Careful with Shared Data</strong>: While shared memory can be powerful, it also introduces complexity. Always use synchronization primitives like <code>Lock</code> or <code>Semaphore</code> to avoid race conditions.<br><br></li>



<li><strong>Test on Your Target Hardware</strong>: Performance can vary based on the number of CPU cores available, so it’s important to test your multiprocessing code on the hardware where it will be deployed.<br><br></li>



<li><strong>Consider Alternatives</strong>: For I/O-bound tasks, consider using <code>concurrent.futures</code> or asynchronous programming with <code>asyncio</code> instead of multiprocessing.</li>
</ol>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<hr>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<h2 class="wp-block-heading">Real-World Use Cases</h2>



<p>So when should you reach for multiprocessing? Here are a few scenarios where it really shines:</p>



<ul class="wp-block-list">
<li><strong>Data Processing</strong>: Multiprocessing is perfect for tasks like processing large datasets, where you can split the workload across multiple processes.<br><br></li>



<li><strong>Machine Learning</strong>: Training machine learning models often involves heavy computation, making multiprocessing a great way to speed up the process.<br><br></li>



<li><strong>Image and Video Processing</strong>: When dealing with large images or video files, multiprocessing can significantly reduce processing time.</li>
</ul>



<p><br></p>



<h2 class="wp-block-heading">Conclusion</h2>



<p>Multiprocessing in Python is a powerful tool that allows you to take full advantage of multi-core processors, bypassing the limitations of the GIL. Whether you’re processing large datasets, training machine learning models, or just looking to speed up your Python code, understanding and leveraging multiprocessing can lead to significant performance gains.</p>



<p>By following the examples and tips in this guide, you’ll be well on your way to mastering multiprocessing in Python. So go ahead, try it out in your projects, and see the difference it can make!</p>
<p>The post <a href="https://coderslegacy.com/unlocking-the-power-of-multiprocessing-in-python/">Unlocking the Power of Multiprocessing in Python</a> appeared first on <a href="https://coderslegacy.com">CodersLegacy</a>.</p>]]></description>
                <pubDate>Sat, 31 Aug 2024 15:45:05 +0200</pubDate>
                <guid isPermaLink="false">https://api.follow.it/track-rss-story-click/v3/Pni2oPawGk2RvKSLoap_oagzzHWHxDTV</guid>
            </item>
                    <item>
                <title><![CDATA[Understanding the Switch Case Statement in Python 3.10]]></title>
                <link>https://api.follow.it/track-rss-story-click/v3/Pni2oPawGk3ZRJLJC1RdgqrkJyTkC_2b</link>
                <description><![CDATA[<img src="https://api.follow.it/track-rss-story-loaded/v1/EiIIY2Jr2Musx5i2u1H00OT5HJgy6HUf" border=0 width="1" height="1" alt="Understanding the Switch Case Statement in Python 3.10" title="Understanding the Switch Case Statement in Python 3.10"> <p>Python is known for its simplicity and readability, but one feature it has historically lacked is a native switch case statement, commonly found in other programming languages like C, C++, and Java. Instead, Python developers often relied on a series of <a href="https://coderslegacy.com/python/python-if-else/"><code>if-elif-else</code> statements</a> or dictionaries to emulate switch-case behavior. </p>



<p>However, with the release of Python 3.10, a new feature known as &#8220;Structural Pattern Matching&#8221; was introduced, which effectively brings a form of switch-case functionality to Python.</p>



<p>In this tutorial, we’ll explore how to use the switch case statement, Python’s new approach to handling multiple conditions in a more readable and efficient way.</p>



<p><br></p>



<h2 class="wp-block-heading">Introduction to the <code>match</code> Statement</h2>



<p>The <code>match</code> statement in Python 3.10 allows for pattern matching, which is more powerful and flexible than the traditional switch-case statements found in other languages. Pattern matching checks a given value against a series of patterns and executes the corresponding block of code when a match is found.</p>



<p>Here’s a basic structure of how a <code>match</code> statement works:</p>



<div class="wp-block-kevinbatdorf-code-block-pro" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:flex;align-items:center;padding:10px 0px 10px 16px;margin-bottom:-2px;width:100%;text-align:left;background-color:#2b2b2b;color:#c7c7c7">Python</span><span role="button" tabindex="0" data-code="def example(value):
    match value:
        case pattern1:
            # Code block for pattern1
        case pattern2:
            # Code block for pattern2
        case _:
            # Default case (similar to 'default' in switch-case)" style="color:#D4D4D4;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path></svg></span><pre class="shiki dark-plus" style="background-color: #1E1E1E" tabindex="0"><code><span class="line"><span style="color: #569CD6">def</span><span style="color: #D4D4D4"> </span><span style="color: #DCDCAA">example</span><span style="color: #D4D4D4">(</span><span style="color: #9CDCFE">value</span><span style="color: #D4D4D4">):</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #C586C0">match</span><span style="color: #D4D4D4"> value:</span></span>
<span class="line"><span style="color: #D4D4D4">        </span><span style="color: #C586C0">case</span><span style="color: #D4D4D4"> pattern1:</span></span>
<span class="line"><span style="color: #D4D4D4">            </span><span style="color: #6A9955"># Code block for pattern1</span></span>
<span class="line"><span style="color: #D4D4D4">        </span><span style="color: #C586C0">case</span><span style="color: #D4D4D4"> pattern2:</span></span>
<span class="line"><span style="color: #D4D4D4">            </span><span style="color: #6A9955"># Code block for pattern2</span></span>
<span class="line"><span style="color: #D4D4D4">        </span><span style="color: #C586C0">case</span><span style="color: #D4D4D4"> _:</span></span>
<span class="line"><span style="color: #D4D4D4">            </span><span style="color: #6A9955"># Default case (similar to &#39;default&#39; in switch-case)</span></span></code></pre></div>



<h3 class="wp-block-heading">Key Components:</h3>



<ul class="wp-block-list">
<li><strong><code>match</code> statement</strong>: The equivalent of the <code>switch</code> keyword in other languages.</li>



<li><strong><code>case</code> clauses</strong>: These represent the individual cases you want to check against, similar to <code>case</code> in switch-case.</li>



<li><strong>Wildcard (<code>_</code>)</strong>: Acts as the default case, covering any values that don&#8217;t match the specified patterns.</li>
</ul>



<p><br></p>



<h2 class="wp-block-heading">Example: Basic Pattern Matching</h2>



<p>Let’s start with a simple example of using <code>match</code> to simulate a switch-case statement that handles different types of user inputs.</p>



<div class="wp-block-kevinbatdorf-code-block-pro" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:flex;align-items:center;padding:10px 0px 10px 16px;margin-bottom:-2px;width:100%;text-align:left;background-color:#2b2b2b;color:#c7c7c7">Python</span><span role="button" tabindex="0" data-code="def process_command(command):
    match command:
        case &quot;start&quot;:
            return &quot;Starting the system...&quot;
        case &quot;stop&quot;:
            return &quot;Stopping the system...&quot;
        case &quot;restart&quot;:
            return &quot;Restarting the system...&quot;
        case _:
            return &quot;Unknown command.&quot;

# Testing the function
print(process_command(&quot;start&quot;))    # Output: Starting the system...
print(process_command(&quot;pause&quot;))    # Output: Unknown command." style="color:#D4D4D4;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path></svg></span><pre class="shiki dark-plus" style="background-color: #1E1E1E" tabindex="0"><code><span class="line"><span style="color: #569CD6">def</span><span style="color: #D4D4D4"> </span><span style="color: #DCDCAA">process_command</span><span style="color: #D4D4D4">(</span><span style="color: #9CDCFE">command</span><span style="color: #D4D4D4">):</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #C586C0">match</span><span style="color: #D4D4D4"> command:</span></span>
<span class="line"><span style="color: #D4D4D4">        </span><span style="color: #C586C0">case</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">&quot;start&quot;</span><span style="color: #D4D4D4">:</span></span>
<span class="line"><span style="color: #D4D4D4">            </span><span style="color: #C586C0">return</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">&quot;Starting the system...&quot;</span></span>
<span class="line"><span style="color: #D4D4D4">        </span><span style="color: #C586C0">case</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">&quot;stop&quot;</span><span style="color: #D4D4D4">:</span></span>
<span class="line"><span style="color: #D4D4D4">            </span><span style="color: #C586C0">return</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">&quot;Stopping the system...&quot;</span></span>
<span class="line"><span style="color: #D4D4D4">        </span><span style="color: #C586C0">case</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">&quot;restart&quot;</span><span style="color: #D4D4D4">:</span></span>
<span class="line"><span style="color: #D4D4D4">            </span><span style="color: #C586C0">return</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">&quot;Restarting the system...&quot;</span></span>
<span class="line"><span style="color: #D4D4D4">        </span><span style="color: #C586C0">case</span><span style="color: #D4D4D4"> _:</span></span>
<span class="line"><span style="color: #D4D4D4">            </span><span style="color: #C586C0">return</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">&quot;Unknown command.&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A9955"># Testing the function</span></span>
<span class="line"><span style="color: #DCDCAA">print</span><span style="color: #D4D4D4">(process_command(</span><span style="color: #CE9178">&quot;start&quot;</span><span style="color: #D4D4D4">))    </span><span style="color: #6A9955"># Output: Starting the system...</span></span>
<span class="line"><span style="color: #DCDCAA">print</span><span style="color: #D4D4D4">(process_command(</span><span style="color: #CE9178">&quot;pause&quot;</span><span style="color: #D4D4D4">))    </span><span style="color: #6A9955"># Output: Unknown command.</span></span></code></pre></div>



<p>In this example:</p>



<ul class="wp-block-list">
<li>The <code>match</code> statement checks the value of <code>command</code>.</li>



<li>Depending on the matched value, the corresponding message is returned.</li>



<li>The wildcard (<code>_</code>) case handles any input that doesn&#8217;t match the predefined commands, acting as a fallback or default case.</li>
</ul>



<p><br></p>



<h2 class="wp-block-heading">Advanced Pattern Matching</h2>



<p>The <code>match</code> statement in Python 3.10 is not limited to simple value matching. It supports more complex patterns, including:</p>



<h3 class="wp-block-heading">1. Matching Data Structures</h3>



<p>You can use pattern matching with lists, tuples, and dictionaries.</p>



<div class="wp-block-kevinbatdorf-code-block-pro" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:flex;align-items:center;padding:10px 0px 10px 16px;margin-bottom:-2px;width:100%;text-align:left;background-color:#2b2b2b;color:#c7c7c7">Python</span><span role="button" tabindex="0" data-code="def analyze_shape(shape):
    match shape:
        case (&quot;circle&quot;, radius):
            return f&quot;Circle with radius {radius}&quot;
        case (&quot;rectangle&quot;, width, height):
            return f&quot;Rectangle with width {width} and height {height}&quot;
        case (&quot;square&quot;, side):
            return f&quot;Square with side {side}&quot;
        case _:
            return &quot;Unknown shape&quot;

# Testing the function
print(analyze_shape((&quot;circle&quot;, 5)))       # Output: Circle with radius 5
print(analyze_shape((&quot;rectangle&quot;, 4, 6))) # Output: Rectangle with width 4 and height 6" style="color:#D4D4D4;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path></svg></span><pre class="shiki dark-plus" style="background-color: #1E1E1E" tabindex="0"><code><span class="line"><span style="color: #569CD6">def</span><span style="color: #D4D4D4"> </span><span style="color: #DCDCAA">analyze_shape</span><span style="color: #D4D4D4">(</span><span style="color: #9CDCFE">shape</span><span style="color: #D4D4D4">):</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #C586C0">match</span><span style="color: #D4D4D4"> shape:</span></span>
<span class="line"><span style="color: #D4D4D4">        </span><span style="color: #C586C0">case</span><span style="color: #D4D4D4"> (</span><span style="color: #CE9178">&quot;circle&quot;</span><span style="color: #D4D4D4">, radius):</span></span>
<span class="line"><span style="color: #D4D4D4">            </span><span style="color: #C586C0">return</span><span style="color: #D4D4D4"> </span><span style="color: #569CD6">f</span><span style="color: #CE9178">&quot;Circle with radius </span><span style="color: #569CD6">{</span><span style="color: #D4D4D4">radius</span><span style="color: #569CD6">}</span><span style="color: #CE9178">&quot;</span></span>
<span class="line"><span style="color: #D4D4D4">        </span><span style="color: #C586C0">case</span><span style="color: #D4D4D4"> (</span><span style="color: #CE9178">&quot;rectangle&quot;</span><span style="color: #D4D4D4">, width, height):</span></span>
<span class="line"><span style="color: #D4D4D4">            </span><span style="color: #C586C0">return</span><span style="color: #D4D4D4"> </span><span style="color: #569CD6">f</span><span style="color: #CE9178">&quot;Rectangle with width </span><span style="color: #569CD6">{</span><span style="color: #D4D4D4">width</span><span style="color: #569CD6">}</span><span style="color: #CE9178"> and height </span><span style="color: #569CD6">{</span><span style="color: #D4D4D4">height</span><span style="color: #569CD6">}</span><span style="color: #CE9178">&quot;</span></span>
<span class="line"><span style="color: #D4D4D4">        </span><span style="color: #C586C0">case</span><span style="color: #D4D4D4"> (</span><span style="color: #CE9178">&quot;square&quot;</span><span style="color: #D4D4D4">, side):</span></span>
<span class="line"><span style="color: #D4D4D4">            </span><span style="color: #C586C0">return</span><span style="color: #D4D4D4"> </span><span style="color: #569CD6">f</span><span style="color: #CE9178">&quot;Square with side </span><span style="color: #569CD6">{</span><span style="color: #D4D4D4">side</span><span style="color: #569CD6">}</span><span style="color: #CE9178">&quot;</span></span>
<span class="line"><span style="color: #D4D4D4">        </span><span style="color: #C586C0">case</span><span style="color: #D4D4D4"> _:</span></span>
<span class="line"><span style="color: #D4D4D4">            </span><span style="color: #C586C0">return</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">&quot;Unknown shape&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A9955"># Testing the function</span></span>
<span class="line"><span style="color: #DCDCAA">print</span><span style="color: #D4D4D4">(analyze_shape((</span><span style="color: #CE9178">&quot;circle&quot;</span><span style="color: #D4D4D4">, </span><span style="color: #B5CEA8">5</span><span style="color: #D4D4D4">)))       </span><span style="color: #6A9955"># Output: Circle with radius 5</span></span>
<span class="line"><span style="color: #DCDCAA">print</span><span style="color: #D4D4D4">(analyze_shape((</span><span style="color: #CE9178">&quot;rectangle&quot;</span><span style="color: #D4D4D4">, </span><span style="color: #B5CEA8">4</span><span style="color: #D4D4D4">, </span><span style="color: #B5CEA8">6</span><span style="color: #D4D4D4">))) </span><span style="color: #6A9955"># Output: Rectangle with width 4 and height 6</span></span></code></pre></div>



<p><br></p>



<h3 class="wp-block-heading">2. Matching with Conditions (Guards)</h3>



<p>You can add conditions to cases using <code>if</code> statements, known as &#8220;guards&#8221;.</p>



<div class="wp-block-kevinbatdorf-code-block-pro" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:flex;align-items:center;padding:10px 0px 10px 16px;margin-bottom:-2px;width:100%;text-align:left;background-color:#2b2b2b;color:#c7c7c7">Python</span><span role="button" tabindex="0" data-code="def categorize_number(number):
    match number:
        case n if n &lt; 0:
            return &quot;Negative number&quot;
        case n if n == 0:
            return &quot;Zero&quot;
        case n if n &gt; 0:
            return &quot;Positive number&quot;

# Testing the function
print(categorize_number(-5))  # Output: Negative number
print(categorize_number(0))   # Output: Zero
print(categorize_number(10))  # Output: Positive number" style="color:#D4D4D4;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path></svg></span><pre class="shiki dark-plus" style="background-color: #1E1E1E" tabindex="0"><code><span class="line"><span style="color: #569CD6">def</span><span style="color: #D4D4D4"> </span><span style="color: #DCDCAA">categorize_number</span><span style="color: #D4D4D4">(</span><span style="color: #9CDCFE">number</span><span style="color: #D4D4D4">):</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #C586C0">match</span><span style="color: #D4D4D4"> number:</span></span>
<span class="line"><span style="color: #D4D4D4">        </span><span style="color: #C586C0">case</span><span style="color: #D4D4D4"> n </span><span style="color: #C586C0">if</span><span style="color: #D4D4D4"> n &lt; </span><span style="color: #B5CEA8">0</span><span style="color: #D4D4D4">:</span></span>
<span class="line"><span style="color: #D4D4D4">            </span><span style="color: #C586C0">return</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">&quot;Negative number&quot;</span></span>
<span class="line"><span style="color: #D4D4D4">        </span><span style="color: #C586C0">case</span><span style="color: #D4D4D4"> n </span><span style="color: #C586C0">if</span><span style="color: #D4D4D4"> n == </span><span style="color: #B5CEA8">0</span><span style="color: #D4D4D4">:</span></span>
<span class="line"><span style="color: #D4D4D4">            </span><span style="color: #C586C0">return</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">&quot;Zero&quot;</span></span>
<span class="line"><span style="color: #D4D4D4">        </span><span style="color: #C586C0">case</span><span style="color: #D4D4D4"> n </span><span style="color: #C586C0">if</span><span style="color: #D4D4D4"> n &gt; </span><span style="color: #B5CEA8">0</span><span style="color: #D4D4D4">:</span></span>
<span class="line"><span style="color: #D4D4D4">            </span><span style="color: #C586C0">return</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">&quot;Positive number&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A9955"># Testing the function</span></span>
<span class="line"><span style="color: #DCDCAA">print</span><span style="color: #D4D4D4">(categorize_number(-</span><span style="color: #B5CEA8">5</span><span style="color: #D4D4D4">))  </span><span style="color: #6A9955"># Output: Negative number</span></span>
<span class="line"><span style="color: #DCDCAA">print</span><span style="color: #D4D4D4">(categorize_number(</span><span style="color: #B5CEA8">0</span><span style="color: #D4D4D4">))   </span><span style="color: #6A9955"># Output: Zero</span></span>
<span class="line"><span style="color: #DCDCAA">print</span><span style="color: #D4D4D4">(categorize_number(</span><span style="color: #B5CEA8">10</span><span style="color: #D4D4D4">))  </span><span style="color: #6A9955"># Output: Positive number</span></span></code></pre></div>



<p><br></p>



<h3 class="wp-block-heading">3. Combining Patterns</h3>



<p>You can also combine multiple patterns in a single case using the <code>|</code> (or) operator.</p>



<div class="wp-block-kevinbatdorf-code-block-pro" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:flex;align-items:center;padding:10px 0px 10px 16px;margin-bottom:-2px;width:100%;text-align:left;background-color:#2b2b2b;color:#c7c7c7">Python</span><span role="button" tabindex="0" data-code="def get_day_type(day):
    match day:
        case &quot;Saturday&quot; | &quot;Sunday&quot;:
            return &quot;Weekend&quot;
        case &quot;Monday&quot; | &quot;Tuesday&quot; | &quot;Wednesday&quot; | &quot;Thursday&quot; | &quot;Friday&quot;:
            return &quot;Weekday&quot;
        case _:
            return &quot;Invalid day&quot;

# Testing the function
print(get_day_type(&quot;Sunday&quot;))   # Output: Weekend
print(get_day_type(&quot;Monday&quot;))   # Output: Weekday
print(get_day_type(&quot;Funday&quot;))   # Output: Invalid day" style="color:#D4D4D4;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path></svg></span><pre class="shiki dark-plus" style="background-color: #1E1E1E" tabindex="0"><code><span class="line"><span style="color: #569CD6">def</span><span style="color: #D4D4D4"> </span><span style="color: #DCDCAA">get_day_type</span><span style="color: #D4D4D4">(</span><span style="color: #9CDCFE">day</span><span style="color: #D4D4D4">):</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #C586C0">match</span><span style="color: #D4D4D4"> day:</span></span>
<span class="line"><span style="color: #D4D4D4">        </span><span style="color: #C586C0">case</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">&quot;Saturday&quot;</span><span style="color: #D4D4D4"> | </span><span style="color: #CE9178">&quot;Sunday&quot;</span><span style="color: #D4D4D4">:</span></span>
<span class="line"><span style="color: #D4D4D4">            </span><span style="color: #C586C0">return</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">&quot;Weekend&quot;</span></span>
<span class="line"><span style="color: #D4D4D4">        </span><span style="color: #C586C0">case</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">&quot;Monday&quot;</span><span style="color: #D4D4D4"> | </span><span style="color: #CE9178">&quot;Tuesday&quot;</span><span style="color: #D4D4D4"> | </span><span style="color: #CE9178">&quot;Wednesday&quot;</span><span style="color: #D4D4D4"> | </span><span style="color: #CE9178">&quot;Thursday&quot;</span><span style="color: #D4D4D4"> | </span><span style="color: #CE9178">&quot;Friday&quot;</span><span style="color: #D4D4D4">:</span></span>
<span class="line"><span style="color: #D4D4D4">            </span><span style="color: #C586C0">return</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">&quot;Weekday&quot;</span></span>
<span class="line"><span style="color: #D4D4D4">        </span><span style="color: #C586C0">case</span><span style="color: #D4D4D4"> _:</span></span>
<span class="line"><span style="color: #D4D4D4">            </span><span style="color: #C586C0">return</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">&quot;Invalid day&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A9955"># Testing the function</span></span>
<span class="line"><span style="color: #DCDCAA">print</span><span style="color: #D4D4D4">(get_day_type(</span><span style="color: #CE9178">&quot;Sunday&quot;</span><span style="color: #D4D4D4">))   </span><span style="color: #6A9955"># Output: Weekend</span></span>
<span class="line"><span style="color: #DCDCAA">print</span><span style="color: #D4D4D4">(get_day_type(</span><span style="color: #CE9178">&quot;Monday&quot;</span><span style="color: #D4D4D4">))   </span><span style="color: #6A9955"># Output: Weekday</span></span>
<span class="line"><span style="color: #DCDCAA">print</span><span style="color: #D4D4D4">(get_day_type(</span><span style="color: #CE9178">&quot;Funday&quot;</span><span style="color: #D4D4D4">))   </span><span style="color: #6A9955"># Output: Invalid day</span></span></code></pre></div>



<p><br></p>



<h2 class="wp-block-heading">When to Use <code>match</code> Over <code>if-elif-else</code></h2>



<p>While you can still use <code>if-elif-else</code> statements, <code>match</code> provides a cleaner and more readable alternative when dealing with multiple conditions. It’s especially useful when:</p>



<ul class="wp-block-list">
<li>You have a large number of conditions to check.</li>



<li>You want to match complex data structures.</li>



<li>You need to execute different code blocks based on the structure of data, not just its value.</li>
</ul>



<p><br></p>



<p>By mastering this new feature, you can write cleaner, more maintainable code that can easily adapt to complex logic scenarios.</p>



<p>As you start integrating <code>match</code> into your code, you&#8217;ll likely find many situations where it simplifies your conditional logic, making your Python code not only more efficient but also more Pythonic.</p>
<p>The post <a href="https://coderslegacy.com/understanding-the-switch-case-statement/">Understanding the Switch Case Statement in Python 3.10</a> appeared first on <a href="https://coderslegacy.com">CodersLegacy</a>.</p>]]></description>
                <pubDate>Fri, 30 Aug 2024 22:50:50 +0200</pubDate>
                <guid isPermaLink="false">https://api.follow.it/track-rss-story-click/v3/Pni2oPawGk3ZRJLJC1RdgqrkJyTkC_2b</guid>
            </item>
                    <item>
                <title><![CDATA[Adding Data Files in Nuitka (Python Files, Images, etc)]]></title>
                <link>https://api.follow.it/track-rss-story-click/v3/Pni2oPawGk3P0CwBk7GLeUGb1Jh49AJn</link>
                <description><![CDATA[<img src="https://api.follow.it/track-rss-story-loaded/v1/2BMKY0ClyGVTpTutQVgdieT5HJgy6HUf" border=0 width="1" height="1" alt="Adding Data Files in Nuitka (Python Files, Images, etc)" title="Adding Data Files in Nuitka (Python Files, Images, etc)"> <p>Nuitka is a Python-to-C compiler that converts Python code into executable binaries. While Nuitka efficiently compiles Python scripts, incorporating data files such as images, audio, video, and additional Python files requires can be a little tricky. This guide outlines the steps to include various data files in a Nuitka standalone executable.</p>



<p><br></p>



<h2 class="wp-block-heading">Basic Setup for Nuitka</h2>



<p>Before delving into the inclusion of data files, ensure you have Nuitka installed. You can install Nuitka via pip:</p>



<pre class="wp-block-code"><code>pip install nuitka
</code></pre>



<p>For a more detailed starter guide on Nuitka and its various options, you can follow this link to our main <a href="https://coderslegacy.com/python/nuitka-tutorial/">Nuitka Tutorial</a>. If you already familiar with Nuitka, then proceed ahead in this tutorial to learn how to add data files in our Nuitka EXE. </p>



<p><br></p>



<h2 class="wp-block-heading">Compiling a Python Script with Nuitka</h2>



<p>Assuming you have a Python script named <code>main.py</code>, the basic command to compile it into a standalone executable using Nuitka is:</p>



<pre class="wp-block-code"><code>python -m nuitka --standalone main.py
</code></pre>



<p>This command creates a standalone directory containing the executable and all necessary dependencies. However, if your program relies on external data files (images, audio, video, other Python files), you need to explicitly include these files.</p>



<p><br></p>



<h2 class="wp-block-heading">Adding Data Files in Nuitka</h2>



<h3 class="wp-block-heading">1. Adding Individual Files</h3>



<p>To include individual files such as images, use the <code>--include-data-files</code> option. The syntax is:</p>



<pre class="wp-block-code"><code>--include-data-files=&lt;source-location>=&lt;target-location>
</code></pre>



<p>For example, to include an image file <code>favicon.ico</code>, the command is:</p>



<pre class="wp-block-code"><code>--include-data-files=./favicon.ico=favicon.ico
</code></pre>



<p>This command tells Nuitka to include the <code>favicon.ico</code> file from the current directory and place it in the same location within the output directory.</p>



<p><br></p>



<h3 class="wp-block-heading">2. Adding Directories</h3>



<p>To include entire directories, use the <code>--include-data-dir</code> option. The syntax is the same as earlier:</p>



<pre class="wp-block-code"><code>--include-data-dir=&lt;source-location>=&lt;target-location></code></pre>



<p>For instance, to include an entire directory named <code>Images</code>, the command is:</p>



<pre class="wp-block-code"><code>--include-data-dir=./Images=Images
</code></pre>



<p>This will copy the <code>Images</code> directory from the current location to the output directory, preserving its structure.</p>



<p><br></p>



<h2 class="wp-block-heading">Example: Adding Data Files of Multiple Types</h2>



<p>Suppose you have a project with the following files and directories:</p>



<ul>
<li><code>main.py</code>: The main Python script.</li>



<li><code>favicon.ico</code>: An icon file.</li>



<li><code>Images/</code>: A directory containing images.</li>



<li><code>audio.mp3</code>: An audio file.</li>



<li><code>videos/</code>: A directory containing video files.</li>



<li><code>utils.py</code>: An additional Python file used in the project.</li>
</ul>



<p>To compile this project with all necessary data files included, the command would be:</p>



<pre class="wp-block-code"><code>python -m nuitka --standalone --include-data-files=./favicon.ico=favicon.ico --include-data-files=./audio.mp3=audio.mp3 --include-data-dir=./Images=Images --include-data-dir=./videos=videos --include-data-files=./utils.py=utils.py --disable-console main.py
</code></pre>



<p>Pretty confusing isn&#8217;t it? </p>



<p>Having to write out this command over and over again each time you want to re-build your executable is a massive pain. Instead, I recommend you use Nuitka Configuration Files, which allow you write out all your dependencies/datafiles/imports in a single file, which can then be executed as many times as you like. </p>



<p><br></p>



<h2 class="wp-block-heading">Final Word</h2>



<p>By using the <code>--include-data-files</code> and <code>--include-data-dir</code> options, you can include all necessary data files in your Nuitka-compiled executable. This ensures that your standalone application has all the resources it needs to run successfully, whether they are images, audio, video files, or additional Python scripts. Combining these options with plugins and other configurations allows for the creation of robust and self-sufficient executables.</p>



<p>Happy coding!</p>



<p>This marks the end of the Adding Data Files in Nuitka Tutorial. Any suggestions or contributions for CodersLegacy are more than welcome. Questions regarding the tutorial content are more than welcome. </p>
<p>The post <a href="https://coderslegacy.com/adding-data-files-in-nuitka-python-files-images-etc/">Adding Data Files in Nuitka (Python Files, Images, etc)</a> appeared first on <a href="https://coderslegacy.com">CodersLegacy</a>.</p>]]></description>
                <pubDate>Tue, 18 Jun 2024 12:09:58 +0200</pubDate>
                <guid isPermaLink="false">https://api.follow.it/track-rss-story-click/v3/Pni2oPawGk3P0CwBk7GLeUGb1Jh49AJn</guid>
            </item>
                    <item>
                <title><![CDATA[How to make ttk.Treeview Editable (Python)]]></title>
                <link>https://api.follow.it/track-rss-story-click/v3/Pni2oPawGk1Ic5O7_12rOS1Ly282xAAw</link>
                <description><![CDATA[<img src="https://api.follow.it/track-rss-story-loaded/v1/Bg-LUlYuwp9TpTutQVgdieT5HJgy6HUf" border=0 width="1" height="1" alt="How to make ttk.Treeview Editable (Python)" title="How to make ttk.Treeview Editable (Python)"> <p>In this tutorial we will explore how to make the Tkinter Treeview Widget, &#8220;Editable&#8221;. In a <a href="https://coderslegacy.com/tkinter-table-widget-using-treeview-python/">previous tutorial</a>, we wrote the following code to represent Product data in a Tabular format using the Treeview widget. But the problem with this approach, is that there is no way of editing the Table from the user&#8217;s perspective.</p>



<div class="wp-block-kevinbatdorf-code-block-pro" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:flex;align-items:center;padding:10px 0px 10px 16px;margin-bottom:-2px;width:100%;text-align:left;background-color:#39404f;color:#c8d0e0">Python</span><span role="button" tabindex="0" data-code="import tkinter as tk
from tkinter import ttk


class ProductTable(tk.Tk):
    def __init__(self, products, **kwargs):
        super().__init__(**kwargs)
        self.products = products
        self.tree = ttk.Treeview(self, columns=(&quot;ID&quot;, &quot;Name&quot;, &quot;Category&quot;, &quot;Price&quot;), show=&quot;headings&quot;)
        self.tree.heading(&quot;ID&quot;, text=&quot;ID&quot;)
        self.tree.heading(&quot;Name&quot;, text=&quot;Name&quot;)
        self.tree.heading(&quot;Category&quot;, text=&quot;Category&quot;)
        self.tree.heading(&quot;Price&quot;, text=&quot;Price&quot;)

        # Insert sample data into the Treeview
        for product in self.products:
            self.tree.insert(&quot;&quot;, &quot;end&quot;, values=product)
        self.tree.pack(fill=&quot;both&quot;, expand=True)

products = [
        (&quot;1001&quot;, &quot;Product A&quot;, &quot;Category 1&quot;, &quot;$10.99&quot;),
        (&quot;1002&quot;, &quot;Product B&quot;, &quot;Category 2&quot;, &quot;$15.49&quot;),
        (&quot;1003&quot;, &quot;Product C&quot;, &quot;Category 1&quot;, &quot;$8.95&quot;),
        (&quot;1004&quot;, &quot;Product D&quot;, &quot;Category 3&quot;, &quot;$12.99&quot;),
        (&quot;1005&quot;, &quot;Product E&quot;, &quot;Category 2&quot;, &quot;$9.99&quot;),
        (&quot;1006&quot;, &quot;Product F&quot;, &quot;Category 1&quot;, &quot;$7.50&quot;),
        (&quot;1007&quot;, &quot;Product G&quot;, &quot;Category 3&quot;, &quot;$11.25&quot;),
        (&quot;1008&quot;, &quot;Product H&quot;, &quot;Category 2&quot;, &quot;$14.99&quot;),
        (&quot;1009&quot;, &quot;Product I&quot;, &quot;Category 1&quot;, &quot;$6.99&quot;),
        (&quot;1010&quot;, &quot;Product J&quot;, &quot;Category 3&quot;, &quot;$10.00&quot;)
    ]

app = ProductTable(products)
app.mainloop()" style="color:#d8dee9ff;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path></svg></span><pre class="shiki nord" style="background-color: #2e3440ff" tabindex="0"><code><span class="line"><span style="color: #81A1C1">import</span><span style="color: #D8DEE9FF"> tkinter </span><span style="color: #81A1C1">as</span><span style="color: #D8DEE9FF"> tk</span></span>
<span class="line"><span style="color: #81A1C1">from</span><span style="color: #D8DEE9FF"> tkinter </span><span style="color: #81A1C1">import</span><span style="color: #D8DEE9FF"> ttk</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color: #81A1C1">class</span><span style="color: #D8DEE9FF"> </span><span style="color: #8FBCBB">ProductTable</span><span style="color: #ECEFF4">(</span><span style="color: #8FBCBB; font-weight: bold">tk</span><span style="color: #ECEFF4">.</span><span style="color: #8FBCBB; font-weight: bold">Tk</span><span style="color: #ECEFF4">):</span></span>
<span class="line"><span style="color: #D8DEE9FF">    </span><span style="color: #81A1C1">def</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">__init__</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">products</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">**</span><span style="color: #D8DEE9">kwargs</span><span style="color: #ECEFF4">):</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #88C0D0">super</span><span style="color: #ECEFF4">().</span><span style="color: #88C0D0">__init__</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">**</span><span style="color: #D8DEE9FF">kwargs</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">products </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> products</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">tree </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> ttk</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">Treeview</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">columns</span><span style="color: #81A1C1">=</span><span style="color: #ECEFF4">(</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">ID</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Name</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Category</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Price</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">),</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">show</span><span style="color: #81A1C1">=</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">headings</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">tree</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">heading</span><span style="color: #ECEFF4">(</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">ID</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">text</span><span style="color: #81A1C1">=</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">ID</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">tree</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">heading</span><span style="color: #ECEFF4">(</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Name</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">text</span><span style="color: #81A1C1">=</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Name</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">tree</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">heading</span><span style="color: #ECEFF4">(</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Category</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">text</span><span style="color: #81A1C1">=</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Category</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">tree</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">heading</span><span style="color: #ECEFF4">(</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Price</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">text</span><span style="color: #81A1C1">=</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Price</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #616E88"># Insert sample data into the Treeview</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">for</span><span style="color: #D8DEE9FF"> product </span><span style="color: #81A1C1">in</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">products</span><span style="color: #ECEFF4">:</span></span>
<span class="line"><span style="color: #D8DEE9FF">            </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">tree</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">insert</span><span style="color: #ECEFF4">(</span><span style="color: #ECEFF4">&quot;&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">end</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">values</span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF">product</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">tree</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">pack</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9">fill</span><span style="color: #81A1C1">=</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">both</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">expand</span><span style="color: #81A1C1">=True</span><span style="color: #ECEFF4">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D8DEE9FF">products </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">[</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #ECEFF4">(</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">1001</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Product A</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Category 1</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">$10.99</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">),</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #ECEFF4">(</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">1002</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Product B</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Category 2</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">$15.49</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">),</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #ECEFF4">(</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">1003</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Product C</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Category 1</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">$8.95</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">),</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #ECEFF4">(</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">1004</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Product D</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Category 3</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">$12.99</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">),</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #ECEFF4">(</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">1005</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Product E</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Category 2</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">$9.99</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">),</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #ECEFF4">(</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">1006</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Product F</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Category 1</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">$7.50</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">),</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #ECEFF4">(</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">1007</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Product G</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Category 3</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">$11.25</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">),</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #ECEFF4">(</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">1008</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Product H</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Category 2</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">$14.99</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">),</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #ECEFF4">(</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">1009</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Product I</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Category 1</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">$6.99</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">),</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #ECEFF4">(</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">1010</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Product J</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Category 3</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">$10.00</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">    </span><span style="color: #ECEFF4">]</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D8DEE9FF">app </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">ProductTable</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9FF">products</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">app</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">mainloop</span><span style="color: #ECEFF4">()</span></span></code></pre></div>



<figure class="wp-block-image size-full"><img fetchpriority="high" decoding="async" width="993" height="310" src="https://coderslegacy.com/wp-content/uploads/2024/04/image-5.png" alt="How to make ttk.Treeview Editable" class="wp-image-15445" srcset="https://coderslegacy.com/wp-content/uploads/2024/04/image-5.png 993w, https://coderslegacy.com/wp-content/uploads/2024/04/image-5-300x94.png 300w, https://coderslegacy.com/wp-content/uploads/2024/04/image-5-768x240.png 768w" sizes="(max-width: 993px) 100vw, 993px" /></figure>



<p>Ideally, we want the user to be able to interact with the Table with the mouse cursor, and edit whichever cell he likes. This is what we will do in this tutorial.</p>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<hr>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<h2 class="wp-block-heading">How to make the Treeview Table Editable</h2>



<p>The first thing you need to understand, is that there is no native way of making the Treeview widget editable. No special parameter, or function that makes it editable. No. </p>



<p>Instead, what we have to do is come up with our own unique solution to make the Treeview widget editable. Basically we have to make the &#8220;edit&#8221; functionality ourselves. An innovative solution to this problem, is to create the &#8220;illusion&#8221; that we are editing the Treeview widget. Let me explain how this is possible. </p>



<p>Here is what we will do.</p>



<ol>
<li>When the user double-clicks on a Treeview cell, we will record these coordinates (available from the double click event). </li>



<li>We will then use these coordinates to spawn an Entry widget at this location, with the same dimensions as the Treeview cell. The Entry widget will appear over the Treeview cell, hiding it temporarily. </li>



<li>We will then copy the value (programmatically) from the Treeview cell to the Entry widget, and highlight the text in blue (giving it the appearance of selected text). </li>



<li>The user can then modify the text inside the Entry widget, and when he is done, will press the Enter key. This will destroy the Entry widget, but before that, we will copy the new text from the Entry widget which the user modified, and update the Treeview cell with it. </li>
</ol>



<p>Thus, our edit feature is complete. We will now share the code, piece by piece. </p>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<hr>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<h2 class="wp-block-heading">Code</h2>



<p>First, we will define a special Entry widget class. This class will inherit from the regular Entry widget, and add a few extra methods and some custom initialization logic in the <code>__init__</code> method. The code has been well commented to help you understand it.</p>



<div class="wp-block-kevinbatdorf-code-block-pro" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:flex;align-items:center;padding:10px 0px 10px 16px;margin-bottom:-2px;width:100%;text-align:left;background-color:#39404f;color:#c8d0e0">Python</span><span role="button" tabindex="0" data-code="class EntryPopup(ttk.Entry):
    def __init__(self, parent, iid, column, text, **kw):
        super().__init__(parent, **kw)
        self.tv = parent.tree  # reference to parent window's treeview
        self.iid = iid  # row id
        self.column = column 

        self.insert(0, text) 
        self['exportselection'] = False  # Prevents selected text from being copied to  
                                         # clipboard when widget loses focus
        self.focus_force()  # Set focus to the Entry widget
        self.select_all()   # Highlight all text within the entry widget
        self.bind(&quot;&lt;Return&gt;&quot;, self.on_return) # Enter key bind
        self.bind(&quot;&lt;Control-a&gt;&quot;, self.select_all) # CTRL + A key bind
        self.bind(&quot;&lt;Escape&gt;&quot;, lambda *ignore: self.destroy()) # ESC key bind
        
    def on_return(self, event):
        '''Insert text into treeview, and delete the entry popup'''
        rowid = self.tv.focus()  # Find row id of the cell which was clicked
        vals = self.tv.item(rowid, 'values')  # Returns a tuple of all values from the row with id, &quot;rowid&quot;
        vals = list(vals)  # Convert the values to a list so it becomes mutable
        vals[self.column] = self.get()  # Update values with the new text from the entry widget
        self.tv.item(rowid, values=vals)  # Update the Treeview cell with updated row values
        self.destroy()  # Destroy the Entry Widget
        
    def select_all(self, *ignore):
        ''' Set selection on the whole text '''
        self.selection_range(0, 'end')
        return 'break' # returns 'break' to interrupt default key-bindings" style="color:#d8dee9ff;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path></svg></span><pre class="shiki nord" style="background-color: #2e3440ff" tabindex="0"><code><span class="line"><span style="color: #81A1C1">class</span><span style="color: #D8DEE9FF"> </span><span style="color: #8FBCBB">EntryPopup</span><span style="color: #ECEFF4">(</span><span style="color: #8FBCBB; font-weight: bold">ttk</span><span style="color: #ECEFF4">.</span><span style="color: #8FBCBB; font-weight: bold">Entry</span><span style="color: #ECEFF4">):</span></span>
<span class="line"><span style="color: #D8DEE9FF">    </span><span style="color: #81A1C1">def</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">__init__</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">parent</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">iid</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">column</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">text</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">**</span><span style="color: #D8DEE9">kw</span><span style="color: #ECEFF4">):</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #88C0D0">super</span><span style="color: #ECEFF4">().</span><span style="color: #88C0D0">__init__</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9FF">parent</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">**</span><span style="color: #D8DEE9FF">kw</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">tv </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> parent</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">tree  </span><span style="color: #616E88"># reference to parent window&#39;s treeview</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">iid </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> iid  </span><span style="color: #616E88"># row id</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">column </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> column </span></span>
<span class="line"></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">insert</span><span style="color: #ECEFF4">(</span><span style="color: #B48EAD">0</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> text</span><span style="color: #ECEFF4">)</span><span style="color: #D8DEE9FF"> </span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">[</span><span style="color: #ECEFF4">&#39;</span><span style="color: #A3BE8C">exportselection</span><span style="color: #ECEFF4">&#39;</span><span style="color: #ECEFF4">]</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">False</span><span style="color: #D8DEE9FF">  </span><span style="color: #616E88"># Prevents selected text from being copied to  </span></span>
<span class="line"><span style="color: #D8DEE9FF">                                         </span><span style="color: #616E88"># clipboard when widget loses focus</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">focus_force</span><span style="color: #ECEFF4">()</span><span style="color: #D8DEE9FF">  </span><span style="color: #616E88"># Set focus to the Entry widget</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">select_all</span><span style="color: #ECEFF4">()</span><span style="color: #D8DEE9FF">   </span><span style="color: #616E88"># Highlight all text within the entry widget</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">bind</span><span style="color: #ECEFF4">(</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">&lt;Return&gt;</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">on_return</span><span style="color: #ECEFF4">)</span><span style="color: #D8DEE9FF"> </span><span style="color: #616E88"># Enter key bind</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">bind</span><span style="color: #ECEFF4">(</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">&lt;Control-a&gt;</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">select_all</span><span style="color: #ECEFF4">)</span><span style="color: #D8DEE9FF"> </span><span style="color: #616E88"># CTRL + A key bind</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">bind</span><span style="color: #ECEFF4">(</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">&lt;Escape&gt;</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">lambda</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">*</span><span style="color: #D8DEE9">ignore</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">destroy</span><span style="color: #ECEFF4">())</span><span style="color: #D8DEE9FF"> </span><span style="color: #616E88"># ESC key bind</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span></span>
<span class="line"><span style="color: #D8DEE9FF">    </span><span style="color: #81A1C1">def</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">on_return</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">event</span><span style="color: #ECEFF4">):</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #ECEFF4">&#39;&#39;&#39;</span><span style="color: #A3BE8C">Insert text into treeview, and delete the entry popup</span><span style="color: #ECEFF4">&#39;&#39;&#39;</span></span>
<span class="line"><span style="color: #D8DEE9FF">        rowid </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">tv</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">focus</span><span style="color: #ECEFF4">()</span><span style="color: #D8DEE9FF">  </span><span style="color: #616E88"># Find row id of the cell which was clicked</span></span>
<span class="line"><span style="color: #D8DEE9FF">        vals </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">tv</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">item</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9FF">rowid</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&#39;</span><span style="color: #A3BE8C">values</span><span style="color: #ECEFF4">&#39;</span><span style="color: #ECEFF4">)</span><span style="color: #D8DEE9FF">  </span><span style="color: #616E88"># Returns a tuple of all values from the row with id, &quot;rowid&quot;</span></span>
<span class="line"><span style="color: #D8DEE9FF">        vals </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">list</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9FF">vals</span><span style="color: #ECEFF4">)</span><span style="color: #D8DEE9FF">  </span><span style="color: #616E88"># Convert the values to a list so it becomes mutable</span></span>
<span class="line"><span style="color: #D8DEE9FF">        vals</span><span style="color: #ECEFF4">[</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">column</span><span style="color: #ECEFF4">]</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">get</span><span style="color: #ECEFF4">()</span><span style="color: #D8DEE9FF">  </span><span style="color: #616E88"># Update values with the new text from the entry widget</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">tv</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">item</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9FF">rowid</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">values</span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF">vals</span><span style="color: #ECEFF4">)</span><span style="color: #D8DEE9FF">  </span><span style="color: #616E88"># Update the Treeview cell with updated row values</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">destroy</span><span style="color: #ECEFF4">()</span><span style="color: #D8DEE9FF">  </span><span style="color: #616E88"># Destroy the Entry Widget</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span></span>
<span class="line"><span style="color: #D8DEE9FF">    </span><span style="color: #81A1C1">def</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">select_all</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">*</span><span style="color: #D8DEE9">ignore</span><span style="color: #ECEFF4">):</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #ECEFF4">&#39;&#39;&#39;</span><span style="color: #A3BE8C"> Set selection on the whole text </span><span style="color: #ECEFF4">&#39;&#39;&#39;</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">selection_range</span><span style="color: #ECEFF4">(</span><span style="color: #B48EAD">0</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&#39;</span><span style="color: #A3BE8C">end</span><span style="color: #ECEFF4">&#39;</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">return</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&#39;</span><span style="color: #A3BE8C">break</span><span style="color: #ECEFF4">&#39;</span><span style="color: #D8DEE9FF"> </span><span style="color: #616E88"># returns &#39;break&#39; to interrupt default key-bindings</span></span></code></pre></div>



<p>Next, in the <code>__init__</code> method of the Table class, we add the following line, binding the double left-click to a method that we will define in the next step.</p>



<div class="wp-block-kevinbatdorf-code-block-pro" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:flex;align-items:center;padding:10px 0px 10px 16px;margin-bottom:-2px;width:100%;text-align:left;background-color:#39404f;color:#c8d0e0">Python</span><span role="button" tabindex="0" data-code="        self.tree.bind(&quot;&lt;Double-1&gt;&quot;, lambda event: self.onDoubleClick(event))" style="color:#d8dee9ff;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path></svg></span><pre class="shiki nord" style="background-color: #2e3440ff" tabindex="0"><code><span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">tree</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">bind</span><span style="color: #ECEFF4">(</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">&lt;Double-1&gt;</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">lambda</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">event</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">onDoubleClick</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9FF">event</span><span style="color: #ECEFF4">))</span></span></code></pre></div>



<p>Now we will define the double click method, which is responsible for spawning the Entry widget at the right location.</p>



<div class="wp-block-kevinbatdorf-code-block-pro" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:flex;align-items:center;padding:10px 0px 10px 16px;margin-bottom:-2px;width:100%;text-align:left;background-color:#39404f;color:#c8d0e0">Python</span><span role="button" tabindex="0" data-code="    def onDoubleClick(self, event):
            '''Executed, when a row is double-clicked'''
            # close previous popups
            try:  # in case there was no previous popup
                self.entryPopup.destroy()
            except AttributeError:
                pass

            # what row and column was clicked on
            rowid = self.tree.identify_row(event.y)
            column = self.tree.identify_column(event.x)

            # return if the header was double clicked
            if not rowid:
                return

            # get cell position and cell dimensions
            x, y, width, height = self.tree.bbox(rowid, column)
            print(x, y, width, height)

            # y-axis offset
            pady = height // 2

            # place Entry Widget
            text = self.tree.item(rowid, 'values')[int(column[1:])-1]
            self.entryPopup = EntryPopup(self, rowid, int(column[1:])-1, text)
            self.entryPopup.place(x=x, y=y+pady, width=width, height=height, anchor='w')" style="color:#d8dee9ff;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path></svg></span><pre class="shiki nord" style="background-color: #2e3440ff" tabindex="0"><code><span class="line"><span style="color: #D8DEE9FF">    </span><span style="color: #81A1C1">def</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">onDoubleClick</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">event</span><span style="color: #ECEFF4">):</span></span>
<span class="line"><span style="color: #D8DEE9FF">            </span><span style="color: #ECEFF4">&#39;&#39;&#39;</span><span style="color: #A3BE8C">Executed, when a row is double-clicked</span><span style="color: #ECEFF4">&#39;&#39;&#39;</span></span>
<span class="line"><span style="color: #D8DEE9FF">            </span><span style="color: #616E88"># close previous popups</span></span>
<span class="line"><span style="color: #D8DEE9FF">            </span><span style="color: #81A1C1">try</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF">  </span><span style="color: #616E88"># in case there was no previous popup</span></span>
<span class="line"><span style="color: #D8DEE9FF">                </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">entryPopup</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">destroy</span><span style="color: #ECEFF4">()</span></span>
<span class="line"><span style="color: #D8DEE9FF">            </span><span style="color: #81A1C1">except</span><span style="color: #D8DEE9FF"> </span><span style="color: #8FBCBB">AttributeError</span><span style="color: #ECEFF4">:</span></span>
<span class="line"><span style="color: #D8DEE9FF">                </span><span style="color: #81A1C1">pass</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D8DEE9FF">            </span><span style="color: #616E88"># what row and column was clicked on</span></span>
<span class="line"><span style="color: #D8DEE9FF">            rowid </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">tree</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">identify_row</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9FF">event</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">y</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">            column </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">tree</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">identify_column</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9FF">event</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">x</span><span style="color: #ECEFF4">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D8DEE9FF">            </span><span style="color: #616E88"># return if the header was double clicked</span></span>
<span class="line"><span style="color: #D8DEE9FF">            </span><span style="color: #81A1C1">if</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">not</span><span style="color: #D8DEE9FF"> rowid</span><span style="color: #ECEFF4">:</span></span>
<span class="line"><span style="color: #D8DEE9FF">                </span><span style="color: #81A1C1">return</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D8DEE9FF">            </span><span style="color: #616E88"># get cell position and cell dimensions</span></span>
<span class="line"><span style="color: #D8DEE9FF">            x</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> y</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> width</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> height </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">tree</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">bbox</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9FF">rowid</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> column</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">            </span><span style="color: #88C0D0">print</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9FF">x</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> y</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> width</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> height</span><span style="color: #ECEFF4">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D8DEE9FF">            </span><span style="color: #616E88"># y-axis offset</span></span>
<span class="line"><span style="color: #D8DEE9FF">            pady </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> height </span><span style="color: #81A1C1">//</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">2</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D8DEE9FF">            </span><span style="color: #616E88"># place Entry Widget</span></span>
<span class="line"><span style="color: #D8DEE9FF">            text </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">tree</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">item</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9FF">rowid</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&#39;</span><span style="color: #A3BE8C">values</span><span style="color: #ECEFF4">&#39;</span><span style="color: #ECEFF4">)[</span><span style="color: #88C0D0">int</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9FF">column</span><span style="color: #ECEFF4">[</span><span style="color: #B48EAD">1</span><span style="color: #ECEFF4">:])</span><span style="color: #81A1C1">-</span><span style="color: #B48EAD">1</span><span style="color: #ECEFF4">]</span></span>
<span class="line"><span style="color: #D8DEE9FF">            </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">entryPopup </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">EntryPopup</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> rowid</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">int</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9FF">column</span><span style="color: #ECEFF4">[</span><span style="color: #B48EAD">1</span><span style="color: #ECEFF4">:])</span><span style="color: #81A1C1">-</span><span style="color: #B48EAD">1</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> text</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">            </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">entryPopup</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">place</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9">x</span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF">x</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">y</span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF">y</span><span style="color: #81A1C1">+</span><span style="color: #D8DEE9FF">pady</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">width</span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF">width</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">height</span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF">height</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">anchor</span><span style="color: #81A1C1">=</span><span style="color: #ECEFF4">&#39;</span><span style="color: #A3BE8C">w</span><span style="color: #ECEFF4">&#39;</span><span style="color: #ECEFF4">)</span></span></code></pre></div>



<p>And that&#8217;s all. We can now run our code, and double click any cell to edit its values.</p>



<figure class="wp-block-image size-full"><img decoding="async" width="993" height="309" src="https://coderslegacy.com/wp-content/uploads/2024/04/image-6.png" alt="" class="wp-image-15446" srcset="https://coderslegacy.com/wp-content/uploads/2024/04/image-6.png 993w, https://coderslegacy.com/wp-content/uploads/2024/04/image-6-300x93.png 300w, https://coderslegacy.com/wp-content/uploads/2024/04/image-6-768x239.png 768w" sizes="(max-width: 993px) 100vw, 993px" /></figure>



<p>We have updated the price of Product-C to $9.99 from its old value $8.95. The best part about this, is that it looks 100% natural. Here is the complete code for the Table class (excluding the custom Entry class).</p>



<div class="wp-block-kevinbatdorf-code-block-pro" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:flex;align-items:center;padding:10px 0px 10px 16px;margin-bottom:-2px;width:100%;text-align:left;background-color:#39404f;color:#c8d0e0">Python</span><span role="button" tabindex="0" data-code="import tkinter as tk
from tkinter import ttk

class Table(tk.Tk):
    def __init__(self, data, **kwargs):
        super().__init__(**kwargs)
        self.data = data
        self.initialize_ui()
 
    def initialize_ui(self):
        # Create Treeview widget
        self.tree = ttk.Treeview(self, columns=(&quot;ID&quot;, &quot;Name&quot;, &quot;Category&quot;, &quot;Price&quot;), show=&quot;headings&quot;)
        self.tree.heading(&quot;ID&quot;, text=&quot;ID&quot;)
        self.tree.heading(&quot;Name&quot;, text=&quot;Name&quot;)
        self.tree.heading(&quot;Category&quot;, text=&quot;Category&quot;)
        self.tree.heading(&quot;Price&quot;, text=&quot;Price&quot;)
        self.tree.bind(&quot;&lt;Double-1&gt;&quot;, lambda event: self.onDoubleClick(event))

        # Insert sample data into the Treeview
        for product in self.data:
            self.tree.insert(&quot;&quot;, &quot;end&quot;, values=product)
        self.tree.pack(fill=&quot;both&quot;, expand=True)

    def onDoubleClick(self, event):
            '''Executed, when a row is double-clicked'''
            # close previous popups
            try:  # in case there was no previous popup
                self.entryPopup.destroy()
            except AttributeError:
                pass

            # what row and column was clicked on
            rowid = self.tree.identify_row(event.y)
            column = self.tree.identify_column(event.x)

            # return if the header was double clicked
            if not rowid:
                return

            # get cell position and cell dimensions
            x, y, width, height = self.tree.bbox(rowid, column)
            print(x, y, width, height)

            # y-axis offset
            pady = height // 2

            # place Entry Widget
            text = self.tree.item(rowid, 'values')[int(column[1:])-1]
            self.entryPopup = EntryPopup(self, rowid, int(column[1:])-1, text)
            self.entryPopup.place(x=x, y=y+pady, width=width, height=height, anchor='w')

    def get_column(self, column_name):
        column_values = []
        for id in self.tree.get_children():
            column_values.append(self.tree.item(id, &quot;values&quot;)[self.tree[&quot;columns&quot;].index(column_name)])
        return column_values
    
    def get_row(self, row_index):
        print(&quot;get_children return value: &quot;, self.tree.get_children())
        return self.tree.item(self.tree.get_children()[row_index], &quot;values&quot;)

products = [
        (&quot;1001&quot;, &quot;Product A&quot;, &quot;Category 1&quot;, &quot;$10.99&quot;),
        (&quot;1002&quot;, &quot;Product B&quot;, &quot;Category 2&quot;, &quot;$15.49&quot;),
        (&quot;1003&quot;, &quot;Product C&quot;, &quot;Category 1&quot;, &quot;$8.95&quot;),
        (&quot;1004&quot;, &quot;Product D&quot;, &quot;Category 3&quot;, &quot;$12.99&quot;),
        (&quot;1005&quot;, &quot;Product E&quot;, &quot;Category 2&quot;, &quot;$9.99&quot;),
        (&quot;1006&quot;, &quot;Product F&quot;, &quot;Category 1&quot;, &quot;$7.50&quot;),
        (&quot;1007&quot;, &quot;Product G&quot;, &quot;Category 3&quot;, &quot;$11.25&quot;),
        (&quot;1008&quot;, &quot;Product H&quot;, &quot;Category 2&quot;, &quot;$14.99&quot;),
        (&quot;1009&quot;, &quot;Product I&quot;, &quot;Category 1&quot;, &quot;$6.99&quot;),
        (&quot;1010&quot;, &quot;Product J&quot;, &quot;Category 3&quot;, &quot;$10.00&quot;)
    ]

app = Table(products)
app.mainloop()" style="color:#d8dee9ff;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path></svg></span><pre class="shiki nord" style="background-color: #2e3440ff" tabindex="0"><code><span class="line"><span style="color: #81A1C1">import</span><span style="color: #D8DEE9FF"> tkinter </span><span style="color: #81A1C1">as</span><span style="color: #D8DEE9FF"> tk</span></span>
<span class="line"><span style="color: #81A1C1">from</span><span style="color: #D8DEE9FF"> tkinter </span><span style="color: #81A1C1">import</span><span style="color: #D8DEE9FF"> ttk</span></span>
<span class="line"></span>
<span class="line"><span style="color: #81A1C1">class</span><span style="color: #D8DEE9FF"> </span><span style="color: #8FBCBB">Table</span><span style="color: #ECEFF4">(</span><span style="color: #8FBCBB; font-weight: bold">tk</span><span style="color: #ECEFF4">.</span><span style="color: #8FBCBB; font-weight: bold">Tk</span><span style="color: #ECEFF4">):</span></span>
<span class="line"><span style="color: #D8DEE9FF">    </span><span style="color: #81A1C1">def</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">__init__</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">data</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">**</span><span style="color: #D8DEE9">kwargs</span><span style="color: #ECEFF4">):</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #88C0D0">super</span><span style="color: #ECEFF4">().</span><span style="color: #88C0D0">__init__</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">**</span><span style="color: #D8DEE9FF">kwargs</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">data </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> data</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">initialize_ui</span><span style="color: #ECEFF4">()</span></span>
<span class="line"><span style="color: #D8DEE9FF"> </span></span>
<span class="line"><span style="color: #D8DEE9FF">    </span><span style="color: #81A1C1">def</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">initialize_ui</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">):</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #616E88"># Create Treeview widget</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">tree </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> ttk</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">Treeview</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">columns</span><span style="color: #81A1C1">=</span><span style="color: #ECEFF4">(</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">ID</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Name</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Category</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Price</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">),</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">show</span><span style="color: #81A1C1">=</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">headings</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">tree</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">heading</span><span style="color: #ECEFF4">(</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">ID</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">text</span><span style="color: #81A1C1">=</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">ID</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">tree</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">heading</span><span style="color: #ECEFF4">(</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Name</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">text</span><span style="color: #81A1C1">=</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Name</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">tree</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">heading</span><span style="color: #ECEFF4">(</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Category</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">text</span><span style="color: #81A1C1">=</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Category</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">tree</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">heading</span><span style="color: #ECEFF4">(</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Price</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">text</span><span style="color: #81A1C1">=</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Price</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">tree</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">bind</span><span style="color: #ECEFF4">(</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">&lt;Double-1&gt;</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">lambda</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">event</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">onDoubleClick</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9FF">event</span><span style="color: #ECEFF4">))</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #616E88"># Insert sample data into the Treeview</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">for</span><span style="color: #D8DEE9FF"> product </span><span style="color: #81A1C1">in</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">data</span><span style="color: #ECEFF4">:</span></span>
<span class="line"><span style="color: #D8DEE9FF">            </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">tree</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">insert</span><span style="color: #ECEFF4">(</span><span style="color: #ECEFF4">&quot;&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">end</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">values</span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF">product</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">tree</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">pack</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9">fill</span><span style="color: #81A1C1">=</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">both</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">expand</span><span style="color: #81A1C1">=True</span><span style="color: #ECEFF4">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D8DEE9FF">    </span><span style="color: #81A1C1">def</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">onDoubleClick</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">event</span><span style="color: #ECEFF4">):</span></span>
<span class="line"><span style="color: #D8DEE9FF">            </span><span style="color: #ECEFF4">&#39;&#39;&#39;</span><span style="color: #A3BE8C">Executed, when a row is double-clicked</span><span style="color: #ECEFF4">&#39;&#39;&#39;</span></span>
<span class="line"><span style="color: #D8DEE9FF">            </span><span style="color: #616E88"># close previous popups</span></span>
<span class="line"><span style="color: #D8DEE9FF">            </span><span style="color: #81A1C1">try</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF">  </span><span style="color: #616E88"># in case there was no previous popup</span></span>
<span class="line"><span style="color: #D8DEE9FF">                </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">entryPopup</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">destroy</span><span style="color: #ECEFF4">()</span></span>
<span class="line"><span style="color: #D8DEE9FF">            </span><span style="color: #81A1C1">except</span><span style="color: #D8DEE9FF"> </span><span style="color: #8FBCBB">AttributeError</span><span style="color: #ECEFF4">:</span></span>
<span class="line"><span style="color: #D8DEE9FF">                </span><span style="color: #81A1C1">pass</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D8DEE9FF">            </span><span style="color: #616E88"># what row and column was clicked on</span></span>
<span class="line"><span style="color: #D8DEE9FF">            rowid </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">tree</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">identify_row</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9FF">event</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">y</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">            column </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">tree</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">identify_column</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9FF">event</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">x</span><span style="color: #ECEFF4">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D8DEE9FF">            </span><span style="color: #616E88"># return if the header was double clicked</span></span>
<span class="line"><span style="color: #D8DEE9FF">            </span><span style="color: #81A1C1">if</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">not</span><span style="color: #D8DEE9FF"> rowid</span><span style="color: #ECEFF4">:</span></span>
<span class="line"><span style="color: #D8DEE9FF">                </span><span style="color: #81A1C1">return</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D8DEE9FF">            </span><span style="color: #616E88"># get cell position and cell dimensions</span></span>
<span class="line"><span style="color: #D8DEE9FF">            x</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> y</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> width</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> height </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">tree</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">bbox</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9FF">rowid</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> column</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">            </span><span style="color: #88C0D0">print</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9FF">x</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> y</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> width</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> height</span><span style="color: #ECEFF4">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D8DEE9FF">            </span><span style="color: #616E88"># y-axis offset</span></span>
<span class="line"><span style="color: #D8DEE9FF">            pady </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> height </span><span style="color: #81A1C1">//</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">2</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D8DEE9FF">            </span><span style="color: #616E88"># place Entry Widget</span></span>
<span class="line"><span style="color: #D8DEE9FF">            text </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">tree</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">item</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9FF">rowid</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&#39;</span><span style="color: #A3BE8C">values</span><span style="color: #ECEFF4">&#39;</span><span style="color: #ECEFF4">)[</span><span style="color: #88C0D0">int</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9FF">column</span><span style="color: #ECEFF4">[</span><span style="color: #B48EAD">1</span><span style="color: #ECEFF4">:])</span><span style="color: #81A1C1">-</span><span style="color: #B48EAD">1</span><span style="color: #ECEFF4">]</span></span>
<span class="line"><span style="color: #D8DEE9FF">            </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">entryPopup </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">EntryPopup</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> rowid</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">int</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9FF">column</span><span style="color: #ECEFF4">[</span><span style="color: #B48EAD">1</span><span style="color: #ECEFF4">:])</span><span style="color: #81A1C1">-</span><span style="color: #B48EAD">1</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> text</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">            </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">entryPopup</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">place</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9">x</span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF">x</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">y</span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF">y</span><span style="color: #81A1C1">+</span><span style="color: #D8DEE9FF">pady</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">width</span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF">width</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">height</span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF">height</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">anchor</span><span style="color: #81A1C1">=</span><span style="color: #ECEFF4">&#39;</span><span style="color: #A3BE8C">w</span><span style="color: #ECEFF4">&#39;</span><span style="color: #ECEFF4">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D8DEE9FF">    </span><span style="color: #81A1C1">def</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">get_column</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">column_name</span><span style="color: #ECEFF4">):</span></span>
<span class="line"><span style="color: #D8DEE9FF">        column_values </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">[]</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">for</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">id</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">in</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">tree</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">get_children</span><span style="color: #ECEFF4">():</span></span>
<span class="line"><span style="color: #D8DEE9FF">            column_values</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">append</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">tree</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">item</span><span style="color: #ECEFF4">(</span><span style="color: #88C0D0">id</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">values</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">)[</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">tree</span><span style="color: #ECEFF4">[</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">columns</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">].</span><span style="color: #88C0D0">index</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9FF">column_name</span><span style="color: #ECEFF4">)])</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">return</span><span style="color: #D8DEE9FF"> column_values</span></span>
<span class="line"><span style="color: #D8DEE9FF">    </span></span>
<span class="line"><span style="color: #D8DEE9FF">    </span><span style="color: #81A1C1">def</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">get_row</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">row_index</span><span style="color: #ECEFF4">):</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #88C0D0">print</span><span style="color: #ECEFF4">(</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">get_children return value: </span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">tree</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">get_children</span><span style="color: #ECEFF4">())</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">return</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">tree</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">item</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">tree</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">get_children</span><span style="color: #ECEFF4">()[</span><span style="color: #D8DEE9FF">row_index</span><span style="color: #ECEFF4">],</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">values</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D8DEE9FF">products </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">[</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #ECEFF4">(</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">1001</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Product A</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Category 1</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">$10.99</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">),</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #ECEFF4">(</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">1002</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Product B</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Category 2</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">$15.49</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">),</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #ECEFF4">(</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">1003</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Product C</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Category 1</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">$8.95</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">),</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #ECEFF4">(</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">1004</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Product D</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Category 3</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">$12.99</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">),</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #ECEFF4">(</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">1005</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Product E</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Category 2</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">$9.99</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">),</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #ECEFF4">(</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">1006</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Product F</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Category 1</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">$7.50</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">),</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #ECEFF4">(</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">1007</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Product G</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Category 3</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">$11.25</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">),</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #ECEFF4">(</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">1008</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Product H</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Category 2</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">$14.99</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">),</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #ECEFF4">(</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">1009</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Product I</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Category 1</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">$6.99</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">),</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #ECEFF4">(</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">1010</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Product J</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Category 3</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">$10.00</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">    </span><span style="color: #ECEFF4">]</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D8DEE9FF">app </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">Table</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9FF">products</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">app</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">mainloop</span><span style="color: #ECEFF4">()</span></span></code></pre></div>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<hr>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<p>This marks the end of the <strong>How to make ttk.Treeview Editable Tutorial</strong>. Any suggestions or contributions for CodersLegacy are more than welcome. Questions regarding the tutorial content can be asked in the comments section below.</p>
<p>The post <a href="https://coderslegacy.com/how-to-make-ttk-treeview-editable-python/">How to make ttk.Treeview Editable (Python)</a> appeared first on <a href="https://coderslegacy.com">CodersLegacy</a>.</p>]]></description>
                <pubDate>Sat, 06 Apr 2024 20:31:59 +0200</pubDate>
                <guid isPermaLink="false">https://api.follow.it/track-rss-story-click/v3/Pni2oPawGk1Ic5O7_12rOS1Ly282xAAw</guid>
            </item>
                    <item>
                <title><![CDATA[Tkinter Table Widget using Treeview (Python)]]></title>
                <link>https://api.follow.it/track-rss-story-click/v3/Pni2oPawGk2QL7h3QPjyEXKSkciKEY1s</link>
                <description><![CDATA[<img src="https://api.follow.it/track-rss-story-loaded/v1/95VIykSIKS6FkGV_dXN16eT5HJgy6HUf" border=0 width="1" height="1" alt="Tkinter Table Widget using Treeview (Python)" title="Tkinter Table Widget using Treeview (Python)"> <p>In this tutorial we will explore how to create a Table using the Treeview Widget in Tkinter. The Treeview widget is a versatile widget used to display hierarchical data in a tabular format. It allows for the creation of columns with headings and supports features such as sorting, selection, and editing of data entries. This makes it the perfect candidate for constructing a Table. </p>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<hr>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<h2 class="wp-block-heading">Setting up the Table Widget</h2>



<p>We will start by writing out the boilerplate code for our application. The following code features:</p>



<ul>
<li>A class called &#8220;Table&#8221; which stores the data passed to it, as <code>self.data</code>.</li>



<li>A list of random product data.</li>



<li>Tkinter imports + application setup.</li>
</ul>



<div class="wp-block-kevinbatdorf-code-block-pro" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:flex;align-items:center;padding:10px 0px 10px 16px;margin-bottom:-2px;width:100%;text-align:left;background-color:#39404f;color:#c8d0e0">Python</span><span role="button" tabindex="0" data-code="import tkinter as tk
from tkinter import ttk

class Table(tk.Tk):
    def __init__(self, data, **kwargs):
        super().__init__(**kwargs)
        self.data = data

products = [(&quot;1001&quot;, &quot;Product A&quot;, &quot;Category 1&quot;, &quot;$10.99&quot;),
            (&quot;1002&quot;, &quot;Product B&quot;, &quot;Category 2&quot;, &quot;$15.49&quot;),
            (&quot;1003&quot;, &quot;Product C&quot;, &quot;Category 1&quot;, &quot;$8.95&quot;),
            (&quot;1004&quot;, &quot;Product D&quot;, &quot;Category 3&quot;, &quot;$12.99&quot;),
            (&quot;1005&quot;, &quot;Product E&quot;, &quot;Category 2&quot;, &quot;$9.99&quot;),
            (&quot;1006&quot;, &quot;Product F&quot;, &quot;Category 1&quot;, &quot;$7.50&quot;),
            (&quot;1007&quot;, &quot;Product G&quot;, &quot;Category 3&quot;, &quot;$11.25&quot;),
            (&quot;1008&quot;, &quot;Product H&quot;, &quot;Category 2&quot;, &quot;$14.99&quot;),
            (&quot;1009&quot;, &quot;Product I&quot;, &quot;Category 1&quot;, &quot;$6.99&quot;),
            (&quot;1010&quot;, &quot;Product J&quot;, &quot;Category 3&quot;, &quot;$10.00&quot;)]

app = ProductTable(products)
app.mainloop()" style="color:#d8dee9ff;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path></svg></span><pre class="shiki nord" style="background-color: #2e3440ff" tabindex="0"><code><span class="line"><span style="color: #81A1C1">import</span><span style="color: #D8DEE9FF"> tkinter </span><span style="color: #81A1C1">as</span><span style="color: #D8DEE9FF"> tk</span></span>
<span class="line"><span style="color: #81A1C1">from</span><span style="color: #D8DEE9FF"> tkinter </span><span style="color: #81A1C1">import</span><span style="color: #D8DEE9FF"> ttk</span></span>
<span class="line"></span>
<span class="line"><span style="color: #81A1C1">class</span><span style="color: #D8DEE9FF"> </span><span style="color: #8FBCBB">Table</span><span style="color: #ECEFF4">(</span><span style="color: #8FBCBB; font-weight: bold">tk</span><span style="color: #ECEFF4">.</span><span style="color: #8FBCBB; font-weight: bold">Tk</span><span style="color: #ECEFF4">):</span></span>
<span class="line"><span style="color: #D8DEE9FF">    </span><span style="color: #81A1C1">def</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">__init__</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">data</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">**</span><span style="color: #D8DEE9">kwargs</span><span style="color: #ECEFF4">):</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #88C0D0">super</span><span style="color: #ECEFF4">().</span><span style="color: #88C0D0">__init__</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">**</span><span style="color: #D8DEE9FF">kwargs</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">data </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> data</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D8DEE9FF">products </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">[(</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">1001</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Product A</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Category 1</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">$10.99</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">),</span></span>
<span class="line"><span style="color: #D8DEE9FF">            </span><span style="color: #ECEFF4">(</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">1002</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Product B</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Category 2</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">$15.49</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">),</span></span>
<span class="line"><span style="color: #D8DEE9FF">            </span><span style="color: #ECEFF4">(</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">1003</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Product C</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Category 1</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">$8.95</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">),</span></span>
<span class="line"><span style="color: #D8DEE9FF">            </span><span style="color: #ECEFF4">(</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">1004</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Product D</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Category 3</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">$12.99</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">),</span></span>
<span class="line"><span style="color: #D8DEE9FF">            </span><span style="color: #ECEFF4">(</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">1005</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Product E</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Category 2</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">$9.99</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">),</span></span>
<span class="line"><span style="color: #D8DEE9FF">            </span><span style="color: #ECEFF4">(</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">1006</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Product F</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Category 1</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">$7.50</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">),</span></span>
<span class="line"><span style="color: #D8DEE9FF">            </span><span style="color: #ECEFF4">(</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">1007</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Product G</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Category 3</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">$11.25</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">),</span></span>
<span class="line"><span style="color: #D8DEE9FF">            </span><span style="color: #ECEFF4">(</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">1008</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Product H</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Category 2</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">$14.99</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">),</span></span>
<span class="line"><span style="color: #D8DEE9FF">            </span><span style="color: #ECEFF4">(</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">1009</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Product I</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Category 1</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">$6.99</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">),</span></span>
<span class="line"><span style="color: #D8DEE9FF">            </span><span style="color: #ECEFF4">(</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">1010</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Product J</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Category 3</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">$10.00</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">)]</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D8DEE9FF">app </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">ProductTable</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9FF">products</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">app</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">mainloop</span><span style="color: #ECEFF4">()</span></span></code></pre></div>



<p>Now we will focus on writing the initialization logic for <a href="https://coderslegacy.com/python/treeview-tkinter-ttk/">Treeview widget</a> in the <code>__init__</code> method. First, we will create a Treeview object, using the Treeview class. We will also pass the list of column names into this widget. </p>



<div class="wp-block-kevinbatdorf-code-block-pro" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:flex;align-items:center;padding:10px 0px 10px 16px;margin-bottom:-2px;width:100%;text-align:left;background-color:#39404f;color:#c8d0e0">Python</span><span role="button" tabindex="0" data-code="        self.tree = ttk.Treeview(self, columns=[&quot;ID&quot;, &quot;Name&quot;, &quot;Category&quot;, &quot;Price&quot;], show=&quot;headings&quot;)" style="color:#d8dee9ff;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path></svg></span><pre class="shiki nord" style="background-color: #2e3440ff" tabindex="0"><code><span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">tree </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> ttk</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">Treeview</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">columns</span><span style="color: #81A1C1">=</span><span style="color: #ECEFF4">[</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">ID</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Name</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Category</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Price</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">],</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">show</span><span style="color: #81A1C1">=</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">headings</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">)</span></span></code></pre></div>



<p>Next, we define the Table headings using the <code>heading</code> method. </p>



<p>&#8220;Headings&#8221; is not the same as &#8220;Columns&#8221; in the Treeview widget. You can think of column names as internal values used for identifying columns, whereas the heading name is the visual representation of the column name, that appears as text at the top of the table when the Treeview widget is created. Each heading must correspond to a column name (which is the first parameter) The <code>text</code> parameter in the <code>heading</code> method controls what text is displayed in the Treeview widget. </p>



<div class="wp-block-kevinbatdorf-code-block-pro" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:flex;align-items:center;padding:10px 0px 10px 16px;margin-bottom:-2px;width:100%;text-align:left;background-color:#39404f;color:#c8d0e0">Python</span><span role="button" tabindex="0" data-code="        self.tree.heading(&quot;ID&quot;, text=&quot;ID&quot;)
        self.tree.heading(&quot;Name&quot;, text=&quot;Name&quot;)
        self.tree.heading(&quot;Category&quot;, text=&quot;Category&quot;)
        self.tree.heading(&quot;Price&quot;, text=&quot;Price&quot;)" style="color:#d8dee9ff;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path></svg></span><pre class="shiki nord" style="background-color: #2e3440ff" tabindex="0"><code><span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">tree</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">heading</span><span style="color: #ECEFF4">(</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">ID</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">text</span><span style="color: #81A1C1">=</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">ID</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">tree</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">heading</span><span style="color: #ECEFF4">(</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Name</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">text</span><span style="color: #81A1C1">=</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Name</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">tree</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">heading</span><span style="color: #ECEFF4">(</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Category</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">text</span><span style="color: #81A1C1">=</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Category</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">tree</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">heading</span><span style="color: #ECEFF4">(</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Price</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">text</span><span style="color: #81A1C1">=</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Price</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">)</span></span></code></pre></div>



<p>Now to insert the product data into the Treeview widget (<code>insert</code> method). </p>



<div class="wp-block-kevinbatdorf-code-block-pro" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:flex;align-items:center;padding:10px 0px 10px 16px;margin-bottom:-2px;width:100%;text-align:left;background-color:#39404f;color:#c8d0e0">Python</span><span role="button" tabindex="0" data-code="        for row in self.data:
            self.tree.insert(&quot;&quot;, tk.END, values=row)" style="color:#d8dee9ff;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path></svg></span><pre class="shiki nord" style="background-color: #2e3440ff" tabindex="0"><code><span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">for</span><span style="color: #D8DEE9FF"> row </span><span style="color: #81A1C1">in</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">data</span><span style="color: #ECEFF4">:</span></span>
<span class="line"><span style="color: #D8DEE9FF">            </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">tree</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">insert</span><span style="color: #ECEFF4">(</span><span style="color: #ECEFF4">&quot;&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> tk</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">END</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">values</span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF">row</span><span style="color: #ECEFF4">)</span></span></code></pre></div>



<p>Don&#8217;t forget to pack the widget in.</p>



<div class="wp-block-kevinbatdorf-code-block-pro" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:flex;align-items:center;padding:10px 0px 10px 16px;margin-bottom:-2px;width:100%;text-align:left;background-color:#39404f;color:#c8d0e0">Python</span><span role="button" tabindex="0" data-code="        self.tree.pack(fill=&quot;both&quot;, expand=True)" style="color:#d8dee9ff;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path></svg></span><pre class="shiki nord" style="background-color: #2e3440ff" tabindex="0"><code><span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">tree</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">pack</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9">fill</span><span style="color: #81A1C1">=</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">both</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">expand</span><span style="color: #81A1C1">=True</span><span style="color: #ECEFF4">)</span></span></code></pre></div>



<p>This gives us the following table.</p>



<figure class="wp-block-image size-full"><img fetchpriority="high" decoding="async" width="995" height="313" src="https://coderslegacy.com/wp-content/uploads/2024/04/image-4.png" alt="Tkinter Table Widget using Treeview in Python" class="wp-image-15437" srcset="https://coderslegacy.com/wp-content/uploads/2024/04/image-4.png 995w, https://coderslegacy.com/wp-content/uploads/2024/04/image-4-300x94.png 300w, https://coderslegacy.com/wp-content/uploads/2024/04/image-4-768x242.png 768w" sizes="(max-width: 995px) 100vw, 995px" /></figure>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<hr>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<h2 class="wp-block-heading">Adding Helper Functions</h2>



<p>We will now create two &#8220;Helper&#8221; functions which add on to the functionality of our table, and make it more convenient to use.</p>



<p><br> </p>



<p>The <code>get_column</code> method helps us retrieve all the values from a specific column in our Treeview widget. For instance, if we want to get all the product names from the &#8220;Name&#8221; column, we can use this method.</p>



<div class="wp-block-kevinbatdorf-code-block-pro" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:flex;align-items:center;padding:10px 0px 10px 16px;margin-bottom:-2px;width:100%;text-align:left;background-color:#39404f;color:#c8d0e0">Python</span><span role="button" tabindex="0" data-code="    def get_column(self, column_name):
        column_values = []
        for id in self.tree.get_children():
            column_values.append(self.tree.item(id, &quot;values&quot;)[self.tree[&quot;columns&quot;].index(column_name)])
        return column_values" style="color:#d8dee9ff;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path></svg></span><pre class="shiki nord" style="background-color: #2e3440ff" tabindex="0"><code><span class="line"><span style="color: #D8DEE9FF">    </span><span style="color: #81A1C1">def</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">get_column</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">column_name</span><span style="color: #ECEFF4">):</span></span>
<span class="line"><span style="color: #D8DEE9FF">        column_values </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">[]</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">for</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">id</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">in</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">tree</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">get_children</span><span style="color: #ECEFF4">():</span></span>
<span class="line"><span style="color: #D8DEE9FF">            column_values</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">append</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">tree</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">item</span><span style="color: #ECEFF4">(</span><span style="color: #88C0D0">id</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">values</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">)[</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">tree</span><span style="color: #ECEFF4">[</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">columns</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">].</span><span style="color: #88C0D0">index</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9FF">column_name</span><span style="color: #ECEFF4">)])</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">return</span><span style="color: #D8DEE9FF"> column_values</span></span></code></pre></div>



<ul>
<li>First, we create an empty list called <code>column_values</code>. This list will hold all the values from the specified column.</li>



<li>We then loop through each item (or row) in our Treeview, using the list of ids returned by the <code>get_children</code> method. </li>



<li>For each item, we use <code>self.tree.item(id, "values")</code> to get all the values associated with that item.</li>



<li>Now comes a bit of a tricky part. We need to find the index of our desired column in the list of columns defined for our Treeview. We do this using <code>self.tree["columns"].index(column_name)</code>. Once we have the index, we can use it to access the value from the corresponding column for the current item.</li>



<li>We append this value to our <code>column_values</code> list.</li>



<li>After looping through all items, we return <code>column_values</code>, which now contains all the values from the specified column.</li>
</ul>



<p><br></p>



<p>The <code>get_row</code> method is for retrieving all the values from a specific row in our Treeview widget. For example, if we want to get all the details of the third product listed in our table, we can use this method.</p>



<div class="wp-block-kevinbatdorf-code-block-pro" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:flex;align-items:center;padding:10px 0px 10px 16px;margin-bottom:-2px;width:100%;text-align:left;background-color:#39404f;color:#c8d0e0">Python</span><span role="button" tabindex="0" data-code="    def get_row(self, row_index):
        print(&quot;get_children return value: &quot;, self.tree.get_children())
        return self.tree.item(self.tree.get_children()[row_index], &quot;values&quot;)" style="color:#d8dee9ff;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path></svg></span><pre class="shiki nord" style="background-color: #2e3440ff" tabindex="0"><code><span class="line"><span style="color: #D8DEE9FF">    </span><span style="color: #81A1C1">def</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">get_row</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">row_index</span><span style="color: #ECEFF4">):</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #88C0D0">print</span><span style="color: #ECEFF4">(</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">get_children return value: </span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">tree</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">get_children</span><span style="color: #ECEFF4">())</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">return</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">tree</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">item</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">tree</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">get_children</span><span style="color: #ECEFF4">()[</span><span style="color: #D8DEE9FF">row_index</span><span style="color: #ECEFF4">],</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">values</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">)</span></span></code></pre></div>



<ul>
<li>We first use <code>self.tree.get_children()</code> to get all the IDs of the rows in our Treeview.</li>



<li>To access a specific row, we use <code>self.tree.get_children()[row_index]</code> and pass in the index of the row we want.</li>



<li>We then use <code>self.tree.item(..., "values")</code> to get all the values associated with that row. The <code>...</code> here represents the ID of the row we obtained earlier.</li>



<li>We return these values, which are now in the form of a tuple, representing all the details of the specified row.</li>
</ul>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<hr>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<p>This marks the end of the <strong>Tkinter Table Widget using Treeview Tutorial</strong>. Any suggestions or contributions for CodersLegacy are more than welcome. Questions regarding the tutorial content can be asked in the comments section below.</p>
<p>The post <a href="https://coderslegacy.com/tkinter-table-widget-using-treeview-python/">Tkinter Table Widget using Treeview (Python)</a> appeared first on <a href="https://coderslegacy.com">CodersLegacy</a>.</p>]]></description>
                <pubDate>Sat, 06 Apr 2024 13:15:06 +0200</pubDate>
                <guid isPermaLink="false">https://api.follow.it/track-rss-story-click/v3/Pni2oPawGk2QL7h3QPjyEXKSkciKEY1s</guid>
            </item>
                    <item>
                <title><![CDATA[Searchable Tkinter Combobox with visible Dropdown while editing]]></title>
                <link>https://api.follow.it/track-rss-story-click/v3/Pni2oPawGk0svloOdzEwz0GT5aWO9DEx</link>
                <description><![CDATA[<img src="https://api.follow.it/track-rss-story-loaded/v1/oKu5yPg9EoYBn_8A-2RMkOT5HJgy6HUf" border=0 width="1" height="1" alt="Searchable Tkinter Combobox with visible Dropdown while editing" title="Searchable Tkinter Combobox with visible Dropdown while editing"> <p>Tkinter is not the most modern GUI library out there, and can be a bit lacking in certain features that are now common across modern GUIs. For example, a popular feature which we see in modern dropdowns (<a href="https://coderslegacy.com/python/python-gui/python-tkinter-combobox/">combo boxes</a>) is that they are &#8220;searchable&#8221;. This means that if there are 30 options available in the combobox, you can filter through them by typing into the combobox (e.g. typing P will filter out all those options which do not start with P). In this tutorial, we will work on developing a custom searchable Tkinter combobox. </p>



<p>Another vital aspect we will address is ensuring that the dropdown remains visible while typing into the combobox.. Otherwise we won&#8217;t know which options are being filtered out as we type. This is an important feature to completing our vision of an ideal combobox. </p>



<p>Since Tkinter does not offer such a feature natively, and the combobox widget cannot be easily modified to encompass such changes, we will be making our own widget using the base Tkinter widgets. </p>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<hr>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<h2 class="wp-block-heading">Boilerplate Code</h2>



<p>We have alot of code to cover in this tutorial, so lets first get all the simple boilerplate code out of the way. The following code is responsible for setting up the UI behind our new combobox, and binding the appropriate events to methods that we will soon define. Our combobox consists of two widgets, the entry widget (where the current option is displayed) and the listbox widget (where all options are displayed). The entry widget can also be edited for us to make &#8220;searches&#8221; through the list of options.</p>



<div class="wp-block-kevinbatdorf-code-block-pro" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:flex;align-items:center;padding:10px 0px 10px 16px;margin-bottom:-2px;width:100%;text-align:left;background-color:#39404f;color:#c8d0e0">Python</span><span role="button" tabindex="0" data-code="import tkinter as tk
from PIL import Image, ImageTk

class SearchableComboBox():
    def __init__(self, options) -&gt; None:
        self.dropdown_id = None
        self.options = options

        # Create a Text widget for the entry field
        wrapper = tk.Frame(root)
        wrapper.pack()

        self.entry = tk.Entry(wrapper, width=24)
        self.entry.bind(&quot;&lt;KeyRelease&gt;&quot;, self.on_entry_key)
        self.entry.bind(&quot;&lt;FocusIn&gt;&quot;, self.show_dropdown) 
        self.entry.pack(side=tk.LEFT)

        # Dropdown icon/button
        self.icon = ImageTk.PhotoImage(Image.open(&quot;dropdown_arrow.png&quot;).resize((16,16)))
        tk.Button(wrapper, image=self.icon, command=self.show_dropdown).pack(side=tk.LEFT)

        # Create a Listbox widget for the dropdown menu
        self.listbox = tk.Listbox(root, height=5, width=30)
        self.listbox.bind(&quot;&lt;&lt;ListboxSelect&gt;&gt;&quot;, self.on_select)
        for option in self.options:
            self.listbox.insert(tk.END, option)

    def on_entry_key(self, event):
        pass

    def on_select(self, event):
        pass

    def show_dropdown(self, event=None):
        pass

    def hide_dropdown(self):
        pass

# Create the main window
root = tk.Tk()
root.title(&quot;Searchable Dropdown&quot;)

options = [&quot;Apple&quot;, &quot;Banana&quot;, &quot;Cherry&quot;, &quot;Date&quot;, &quot;Grapes&quot;, &quot;Kiwi&quot;, &quot;Mango&quot;, &quot;Orange&quot;, &quot;Peach&quot;, &quot;Pear&quot;]
SearchableComboBox(options)

# Run the Tkinter event loop
root.geometry('220x150')
root.mainloop()" style="color:#d8dee9ff;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path></svg></span><pre class="shiki nord" style="background-color: #2e3440ff" tabindex="0"><code><span class="line"><span style="color: #81A1C1">import</span><span style="color: #D8DEE9FF"> tkinter </span><span style="color: #81A1C1">as</span><span style="color: #D8DEE9FF"> tk</span></span>
<span class="line"><span style="color: #81A1C1">from</span><span style="color: #D8DEE9FF"> PIL </span><span style="color: #81A1C1">import</span><span style="color: #D8DEE9FF"> Image</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> ImageTk</span></span>
<span class="line"></span>
<span class="line"><span style="color: #81A1C1">class</span><span style="color: #D8DEE9FF"> </span><span style="color: #8FBCBB">SearchableComboBox</span><span style="color: #ECEFF4">():</span></span>
<span class="line"><span style="color: #D8DEE9FF">    </span><span style="color: #81A1C1">def</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">__init__</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">options</span><span style="color: #ECEFF4">)</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">-&gt;</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">None</span><span style="color: #ECEFF4">:</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">dropdown_id </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">None</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">options </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> options</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #616E88"># Create a Text widget for the entry field</span></span>
<span class="line"><span style="color: #D8DEE9FF">        wrapper </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> tk</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">Frame</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9FF">root</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">        wrapper</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">pack</span><span style="color: #ECEFF4">()</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">entry </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> tk</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">Entry</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9FF">wrapper</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">width</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">24</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">entry</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">bind</span><span style="color: #ECEFF4">(</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">&lt;KeyRelease&gt;</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">on_entry_key</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">entry</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">bind</span><span style="color: #ECEFF4">(</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">&lt;FocusIn&gt;</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">show_dropdown</span><span style="color: #ECEFF4">)</span><span style="color: #D8DEE9FF"> </span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">entry</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">pack</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9">side</span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF">tk</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">LEFT</span><span style="color: #ECEFF4">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #616E88"># Dropdown icon/button</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">icon </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> ImageTk</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">PhotoImage</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9FF">Image</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">open</span><span style="color: #ECEFF4">(</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">dropdown_arrow.png</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">).</span><span style="color: #88C0D0">resize</span><span style="color: #ECEFF4">((</span><span style="color: #B48EAD">16</span><span style="color: #ECEFF4">,</span><span style="color: #B48EAD">16</span><span style="color: #ECEFF4">)))</span></span>
<span class="line"><span style="color: #D8DEE9FF">        tk</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">Button</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9FF">wrapper</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">image</span><span style="color: #81A1C1">=self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">icon</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">command</span><span style="color: #81A1C1">=self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">show_dropdown</span><span style="color: #ECEFF4">).</span><span style="color: #88C0D0">pack</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9">side</span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF">tk</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">LEFT</span><span style="color: #ECEFF4">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #616E88"># Create a Listbox widget for the dropdown menu</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">listbox </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> tk</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">Listbox</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9FF">root</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">height</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">5</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">width</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">30</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">listbox</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">bind</span><span style="color: #ECEFF4">(</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">&lt;&lt;ListboxSelect&gt;&gt;</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">on_select</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">for</span><span style="color: #D8DEE9FF"> option </span><span style="color: #81A1C1">in</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">options</span><span style="color: #ECEFF4">:</span></span>
<span class="line"><span style="color: #D8DEE9FF">            </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">listbox</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">insert</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9FF">tk</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">END</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> option</span><span style="color: #ECEFF4">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D8DEE9FF">    </span><span style="color: #81A1C1">def</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">on_entry_key</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">event</span><span style="color: #ECEFF4">):</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">pass</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D8DEE9FF">    </span><span style="color: #81A1C1">def</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">on_select</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">event</span><span style="color: #ECEFF4">):</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">pass</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D8DEE9FF">    </span><span style="color: #81A1C1">def</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">show_dropdown</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">event</span><span style="color: #81A1C1">=None</span><span style="color: #ECEFF4">):</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">pass</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D8DEE9FF">    </span><span style="color: #81A1C1">def</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">hide_dropdown</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">):</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">pass</span></span>
<span class="line"></span>
<span class="line"><span style="color: #616E88"># Create the main window</span></span>
<span class="line"><span style="color: #D8DEE9FF">root </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> tk</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">Tk</span><span style="color: #ECEFF4">()</span></span>
<span class="line"><span style="color: #D8DEE9FF">root</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">title</span><span style="color: #ECEFF4">(</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Searchable Dropdown</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D8DEE9FF">options </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">[</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Apple</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Banana</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Cherry</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Date</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Grapes</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Kiwi</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Mango</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Orange</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Peach</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Pear</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">]</span></span>
<span class="line"><span style="color: #88C0D0">SearchableComboBox</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9FF">options</span><span style="color: #ECEFF4">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #616E88"># Run the Tkinter event loop</span></span>
<span class="line"><span style="color: #D8DEE9FF">root</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">geometry</span><span style="color: #ECEFF4">(</span><span style="color: #ECEFF4">&#39;</span><span style="color: #A3BE8C">220x150</span><span style="color: #ECEFF4">&#39;</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">root</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">mainloop</span><span style="color: #ECEFF4">()</span></span></code></pre></div>



<p>It is important to understand the purpose of the <a href="https://coderslegacy.com/python/tkinter-create-virtual-events/">event bindings</a> used in this code. </p>



<ol>
<li>The <code>&lt;KeyRelease></code> event is triggered whenever a <a href="https://coderslegacy.com/python/tkinter-key-binding/">keyboard key </a>is pressed and released. We will use this event to trigger a function which shows the dropdown temporarily, and also sorts the options based on similarity to the currently typed value in the entry widget. </li>



<li>The <code>&lt;FocusIn></code> event triggers when we click on the entry widget. This will trigger the dropdown menu temporarily so the user can see the options.</li>
</ol>



<p>There is also the <code>on_select</code> method which is triggered when an option in the listbox (a.k.a dropdown) is selected. All this does, is deletes the current text in the entry, and inserts the text which you just selected. </p>



<div class="wp-block-kevinbatdorf-code-block-pro" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:flex;align-items:center;padding:10px 0px 10px 16px;margin-bottom:-2px;width:100%;text-align:left;background-color:#39404f;color:#c8d0e0">Python</span><span role="button" tabindex="0" data-code="    def on_select(self, event):
        selected_index = self.listbox.curselection()
        if selected_index:
            selected_option = self.listbox.get(selected_index)
            self.entry.delete(0, tk.END)
            self.entry.insert(0, selected_option)" style="color:#d8dee9ff;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path></svg></span><pre class="shiki nord" style="background-color: #2e3440ff" tabindex="0"><code><span class="line"><span style="color: #D8DEE9FF">    </span><span style="color: #81A1C1">def</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">on_select</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">event</span><span style="color: #ECEFF4">):</span></span>
<span class="line"><span style="color: #D8DEE9FF">        selected_index </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">listbox</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">curselection</span><span style="color: #ECEFF4">()</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">if</span><span style="color: #D8DEE9FF"> selected_index</span><span style="color: #ECEFF4">:</span></span>
<span class="line"><span style="color: #D8DEE9FF">            selected_option </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">listbox</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">get</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9FF">selected_index</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">            </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">entry</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">delete</span><span style="color: #ECEFF4">(</span><span style="color: #B48EAD">0</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> tk</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">END</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">            </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">entry</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">insert</span><span style="color: #ECEFF4">(</span><span style="color: #B48EAD">0</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> selected_option</span><span style="color: #ECEFF4">)</span></span></code></pre></div>


<div class="wp-block-image">
<figure class="aligncenter size-full"><img fetchpriority="high" decoding="async" width="262" height="216" src="https://coderslegacy.com/wp-content/uploads/2024/04/image-1.png" alt="" class="wp-image-15418"/></figure></div>


<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<hr>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<h2 class="wp-block-heading">Adding the Filter Feature</h2>



<p>Time to add the filter feature into our code. For this, we define the on_entry_key method. This method is called whenever a key is pressed and released. We want this behavior so that as the user types into the entry widget, the dropdown values update, and the list of options is displayed. </p>



<div class="wp-block-kevinbatdorf-code-block-pro" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:flex;align-items:center;padding:10px 0px 10px 16px;margin-bottom:-2px;width:100%;text-align:left;background-color:#39404f;color:#c8d0e0">Python</span><span role="button" tabindex="0" data-code="    def on_entry_key(self, event):
        typed_value = event.widget.get().strip().lower()
        if not typed_value:
            # If the entry is empty, display all options
            self.listbox.delete(0, tk.END)
            for option in self.options:
                self.listbox.insert(tk.END, option)
        else:
            # Filter options based on the typed value
            self.listbox.delete(0, tk.END)
            filtered_options = [option for option in self.options if option.lower().startswith(typed_value)]
            for option in filtered_options:
                self.listbox.insert(tk.END, option)
        self.show_dropdown()" style="color:#d8dee9ff;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path></svg></span><pre class="shiki nord" style="background-color: #2e3440ff" tabindex="0"><code><span class="line"><span style="color: #D8DEE9FF">    </span><span style="color: #81A1C1">def</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">on_entry_key</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">event</span><span style="color: #ECEFF4">):</span></span>
<span class="line"><span style="color: #D8DEE9FF">        typed_value </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> event</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">widget</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">get</span><span style="color: #ECEFF4">().</span><span style="color: #88C0D0">strip</span><span style="color: #ECEFF4">().</span><span style="color: #88C0D0">lower</span><span style="color: #ECEFF4">()</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">if</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">not</span><span style="color: #D8DEE9FF"> typed_value</span><span style="color: #ECEFF4">:</span></span>
<span class="line"><span style="color: #D8DEE9FF">            </span><span style="color: #616E88"># If the entry is empty, display all options</span></span>
<span class="line"><span style="color: #D8DEE9FF">            </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">listbox</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">delete</span><span style="color: #ECEFF4">(</span><span style="color: #B48EAD">0</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> tk</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">END</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">            </span><span style="color: #81A1C1">for</span><span style="color: #D8DEE9FF"> option </span><span style="color: #81A1C1">in</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">options</span><span style="color: #ECEFF4">:</span></span>
<span class="line"><span style="color: #D8DEE9FF">                </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">listbox</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">insert</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9FF">tk</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">END</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> option</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">else</span><span style="color: #ECEFF4">:</span></span>
<span class="line"><span style="color: #D8DEE9FF">            </span><span style="color: #616E88"># Filter options based on the typed value</span></span>
<span class="line"><span style="color: #D8DEE9FF">            </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">listbox</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">delete</span><span style="color: #ECEFF4">(</span><span style="color: #B48EAD">0</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> tk</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">END</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">            filtered_options </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">[</span><span style="color: #D8DEE9FF">option </span><span style="color: #81A1C1">for</span><span style="color: #D8DEE9FF"> option </span><span style="color: #81A1C1">in</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">options </span><span style="color: #81A1C1">if</span><span style="color: #D8DEE9FF"> option</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">lower</span><span style="color: #ECEFF4">().</span><span style="color: #88C0D0">startswith</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9FF">typed_value</span><span style="color: #ECEFF4">)]</span></span>
<span class="line"><span style="color: #D8DEE9FF">            </span><span style="color: #81A1C1">for</span><span style="color: #D8DEE9FF"> option </span><span style="color: #81A1C1">in</span><span style="color: #D8DEE9FF"> filtered_options</span><span style="color: #ECEFF4">:</span></span>
<span class="line"><span style="color: #D8DEE9FF">                </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">listbox</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">insert</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9FF">tk</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">END</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> option</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">show_dropdown</span><span style="color: #ECEFF4">()</span></span></code></pre></div>



<p>Feel free to customize the filtering logic as you want. If you remove the <code>startswith</code> method, then it will become substring based filtering instead. E.g. if you typed in &#8220;pe&#8221;, then all options with the substring &#8220;pe&#8221; will be filtered. </p>



<p>Also note that the <code>show_dropdown</code> method is called at the end. </p>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<hr>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<h2 class="wp-block-heading">Making the dropdown visible</h2>



<p>Now for the hardest part, which is the feature that the native Tkinter combobox does not support. The ability to show the dropdown, while keeping focus on the entry widget and allowing us to type simultaneously. </p>



<div class="wp-block-kevinbatdorf-code-block-pro" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:flex;align-items:center;padding:10px 0px 10px 16px;margin-bottom:-2px;width:100%;text-align:left;background-color:#39404f;color:#c8d0e0">Python</span><span role="button" tabindex="0" data-code="    def show_dropdown(self, event=None):
        self.listbox.place(in_=self.entry, x=0, rely=1, relwidth=1.0, anchor=&quot;nw&quot;)
        self.listbox.lift()

        # Show dropdown for 2 seconds
        if self.dropdown_id: # Cancel any old events
            self.listbox.after_cancel(self.dropdown_id)
        self.dropdown_id = self.listbox.after(2000, self.hide_dropdown)

    def hide_dropdown(self):
        self.listbox.place_forget()" style="color:#d8dee9ff;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path></svg></span><pre class="shiki nord" style="background-color: #2e3440ff" tabindex="0"><code><span class="line"><span style="color: #D8DEE9FF">    </span><span style="color: #81A1C1">def</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">show_dropdown</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">event</span><span style="color: #81A1C1">=None</span><span style="color: #ECEFF4">):</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">listbox</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">place</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9">in_</span><span style="color: #81A1C1">=self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">entry</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">x</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">0</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">rely</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">1</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">relwidth</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">1.0</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">anchor</span><span style="color: #81A1C1">=</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">nw</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">listbox</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">lift</span><span style="color: #ECEFF4">()</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #616E88"># Show dropdown for 2 seconds</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">if</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">dropdown_id</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #616E88"># Cancel any old events</span></span>
<span class="line"><span style="color: #D8DEE9FF">            </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">listbox</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">after_cancel</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">dropdown_id</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">dropdown_id </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">listbox</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">after</span><span style="color: #ECEFF4">(</span><span style="color: #B48EAD">2000</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">hide_dropdown</span><span style="color: #ECEFF4">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D8DEE9FF">    </span><span style="color: #81A1C1">def</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">hide_dropdown</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">):</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">listbox</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">place_forget</span><span style="color: #ECEFF4">()</span></span></code></pre></div>



<p>We have used the <a href="https://coderslegacy.com/python/tkinter-after/" target="_blank" rel="noreferrer noopener">Tkinter &#8220;after&#8221; feature</a> here to make this magic possible. But we do not want to show the dropdown permanently (otherwise it would never go away), so we make it timer based instead. The timer has been set at 2 seconds, so feel free to adjust this based on your preferences. If two keys are pressed with 1 seconds intervals, then the duration will refresh, and the dropdown will continue to be shown for two seconds after the last key was released. </p>



<p>This particular line of code is also very important. </p>



<div class="wp-block-kevinbatdorf-code-block-pro" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:flex;align-items:center;padding:10px 0px 10px 16px;margin-bottom:-2px;width:100%;text-align:left;background-color:#39404f;color:#c8d0e0">Python</span><span role="button" tabindex="0" data-code="self.listbox.place(in_=self.entry, x=0, rely=1, relwidth=1.0, anchor=&quot;nw&quot;)" style="color:#d8dee9ff;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path></svg></span><pre class="shiki nord" style="background-color: #2e3440ff" tabindex="0"><code><span class="line"><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">listbox</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">place</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9">in_</span><span style="color: #81A1C1">=self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">entry</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">x</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">0</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">rely</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">1</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">relwidth</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">1.0</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">anchor</span><span style="color: #81A1C1">=</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">nw</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">)</span></span></code></pre></div>



<p>It places the listbox at the location of the entry widget, using the place layout manager. It is essential to use place, not pack or grid, since the listbox should be able to become visible without effecting the layout. Pack layout manager for instance, would have effected the surrounding widgets, and maybe even the window itself (if there wasn&#8217;t enough space below for it show). </p>



<p>With this, our Searchable Tkinter Combobox is now complete.</p>


<div class="wp-block-image">
<figure class="aligncenter size-full"><img decoding="async" width="267" height="216" src="https://coderslegacy.com/wp-content/uploads/2024/04/image.png" alt="Searchable Tkinter Combobox with visible Dropdown while editing" class="wp-image-15417"/></figure></div>


<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<hr>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<p>This marks the end of the <strong><em>Searchable Tkinter Combobox</em></strong> Tutorial. Any comments or suggestions for CodersLegacy are more than welcome. Questions regarding the tutorial content can be asked in the comments section below. </p>
<p>The post <a href="https://coderslegacy.com/searchable-combobox-in-tkinter/">Searchable Tkinter Combobox with visible Dropdown while editing</a> appeared first on <a href="https://coderslegacy.com">CodersLegacy</a>.</p>]]></description>
                <pubDate>Thu, 04 Apr 2024 05:16:25 +0200</pubDate>
                <guid isPermaLink="false">https://api.follow.it/track-rss-story-click/v3/Pni2oPawGk0svloOdzEwz0GT5aWO9DEx</guid>
            </item>
                    <item>
                <title><![CDATA[Interactive Scatter Plot Highlighting and Deletion with Matplotlib]]></title>
                <link>https://api.follow.it/track-rss-story-click/v3/Pni2oPawGk2fR6SXp3fGDwC0qH-r7xlT</link>
                <description><![CDATA[<img src="https://api.follow.it/track-rss-story-loaded/v1/_V38puccWJupogqy7CNcMuT5HJgy6HUf" border=0 width="1" height="1" alt="Interactive Scatter Plot Highlighting and Deletion with Matplotlib" title="Interactive Scatter Plot Highlighting and Deletion with Matplotlib"> <p>In this article we will show case a useful piece of code that was developed during a certain side-project of mine. The Project I was working on required an Interactive Scatter Plot that the user could interact it with in many ways. This includes features like being able to mass-select and highlight individual scatter points on the group, and performing actions on the highlighted points (e.g. delete, copy, move). </p>



<p>This article mainly serves to share the core parts of this code in the form of a class, which our readers may copy and use in their own programs. Important points of interest in the code will also be explained.</p>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<hr>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<h2 class="wp-block-heading">The Highlighter Class</h2>



<p>We will start by creating the Highlighter class in a separate file. The creation of each method will be discussed one by one.</p>



<div class="wp-block-kevinbatdorf-code-block-pro" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:flex;align-items:center;padding:10px 0px 10px 16px;margin-bottom:-2px;width:100%;text-align:left;background-color:#39404f;color:#c8d0e0">Python</span><span role="button" tabindex="0" data-code="import pandas as pd
import numpy as np
from matplotlib.widgets import RectangleSelector
import keyboard

class Highlighter(object):
    def __init__(self, canvas, ax, x, y):
        self.canvas = canvas
        self.ax = ax
        self.x, self.y = x, y
        self.mask = np.zeros(x.shape, dtype=bool)

        self._highlight = self.ax.scatter([], [], s=50, color='yellow', zorder=10)
        self.selector = RectangleSelector(self.ax, self.select, useblit=True, state_modifier_keys={&quot;center&quot;: &quot;alt&quot;})" style="color:#d8dee9ff;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path></svg></span><pre class="shiki nord" style="background-color: #2e3440ff" tabindex="0"><code><span class="line"><span style="color: #81A1C1">import</span><span style="color: #D8DEE9FF"> pandas </span><span style="color: #81A1C1">as</span><span style="color: #D8DEE9FF"> pd</span></span>
<span class="line"><span style="color: #81A1C1">import</span><span style="color: #D8DEE9FF"> numpy </span><span style="color: #81A1C1">as</span><span style="color: #D8DEE9FF"> np</span></span>
<span class="line"><span style="color: #81A1C1">from</span><span style="color: #D8DEE9FF"> matplotlib</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">widgets </span><span style="color: #81A1C1">import</span><span style="color: #D8DEE9FF"> RectangleSelector</span></span>
<span class="line"><span style="color: #81A1C1">import</span><span style="color: #D8DEE9FF"> keyboard</span></span>
<span class="line"></span>
<span class="line"><span style="color: #81A1C1">class</span><span style="color: #D8DEE9FF"> </span><span style="color: #8FBCBB">Highlighter</span><span style="color: #ECEFF4">(</span><span style="color: #88C0D0">object</span><span style="color: #ECEFF4">):</span></span>
<span class="line"><span style="color: #D8DEE9FF">    </span><span style="color: #81A1C1">def</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">__init__</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">canvas</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">ax</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">x</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">y</span><span style="color: #ECEFF4">):</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">canvas </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> canvas</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">ax </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> ax</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">x</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">y </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> x</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> y</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">mask </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> np</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">zeros</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9FF">x</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">shape</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">dtype</span><span style="color: #81A1C1">=</span><span style="color: #88C0D0">bool</span><span style="color: #ECEFF4">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">_highlight </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">ax</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">scatter</span><span style="color: #ECEFF4">([],</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">[],</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">s</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">50</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">color</span><span style="color: #81A1C1">=</span><span style="color: #ECEFF4">&#39;</span><span style="color: #A3BE8C">yellow</span><span style="color: #ECEFF4">&#39;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">zorder</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">10</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">selector </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">RectangleSelector</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">ax</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">select</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">useblit</span><span style="color: #81A1C1">=True</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">state_modifier_keys</span><span style="color: #81A1C1">=</span><span style="color: #ECEFF4">{</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">center</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">alt</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">})</span></span></code></pre></div>



<p>The core part of the Highlighter class is the Rectangle Selector, which is a matplotlib feature, used to create a drag tool. This is only useful in creating the UI for the drag tool however, the actual selection, highlighting, and the rest of the features will come from us. </p>


<div class="wp-block-image">
<figure class="aligncenter size-medium"><img fetchpriority="high" decoding="async" width="300" height="238" src="https://coderslegacy.com/wp-content/uploads/2024/03/image-300x238.png" alt="Interactive Scatter Plot Highlighting and Deletion with Matplotlib" class="wp-image-15402" style="object-fit:cover" srcset="https://coderslegacy.com/wp-content/uploads/2024/03/image-300x238.png 300w, https://coderslegacy.com/wp-content/uploads/2024/03/image.png 549w" sizes="(max-width: 300px) 100vw, 300px" /></figure></div>


<p>The other important part of this function is the <code>self.mask</code> attribute, which will be a list of 0s and 1s values of the same length as the number of points in our scatter plot. This will track whether our points are currently selected or not. A value of 1 at the index-2 of this list, means that the third scatter point in our plot is currently highlighted. Multiple points may be selected at the same time.</p>



<div class="wp-block-kevinbatdorf-code-block-pro" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:flex;align-items:center;padding:10px 0px 10px 16px;margin-bottom:-2px;width:100%;text-align:left;background-color:#39404f;color:#c8d0e0">Python</span><span role="button" tabindex="0" data-code="    def update(self, x, y):
        self.x, self.y = x, y
        self.mask = np.zeros(x.shape, dtype=bool)" style="color:#d8dee9ff;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path></svg></span><pre class="shiki nord" style="background-color: #2e3440ff" tabindex="0"><code><span class="line"><span style="color: #D8DEE9FF">    </span><span style="color: #81A1C1">def</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">update</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">x</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">y</span><span style="color: #ECEFF4">):</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">x</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">y </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> x</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> y</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">mask </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> np</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">zeros</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9FF">x</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">shape</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">dtype</span><span style="color: #81A1C1">=</span><span style="color: #88C0D0">bool</span><span style="color: #ECEFF4">)</span></span></code></pre></div>



<p>Next is the <code>update</code> function, which is called whenever we want to update our scatter plot with new values (or remove some values). We update the x and y values in the highlighter class, and resize the mask to the new number of points in our scatter plot. Note, this does not effect the actual scatter plot, whose code will be elsewhere in the main application. </p>



<div class="wp-block-kevinbatdorf-code-block-pro" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:flex;align-items:center;padding:10px 0px 10px 16px;margin-bottom:-2px;width:100%;text-align:left;background-color:#39404f;color:#c8d0e0">Python</span><span role="button" tabindex="0" data-code="   def select(self, event1, event2):
        prevOffsets = []
        prevMask = None

        if keyboard.is_pressed('ctrl'):
            prevOffsets = self._highlight.get_offsets()
            prevMask = self.mask

        self.clear_highlights()
        self.mask |= self.inside(event1, event2)
        xy = np.column_stack([self.x[self.mask], self.y[self.mask]])

        if len(prevOffsets) &gt; 0:
            xy = np.concatenate((xy, prevOffsets))
            self.mask |= prevMask

        if len(xy):
            self._highlight.set_offsets(xy)
            self.canvas.draw_idle()" style="color:#d8dee9ff;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path></svg></span><pre class="shiki nord" style="background-color: #2e3440ff" tabindex="0"><code><span class="line"><span style="color: #D8DEE9FF">   </span><span style="color: #81A1C1">def</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">select</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">event1</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">event2</span><span style="color: #ECEFF4">):</span></span>
<span class="line"><span style="color: #D8DEE9FF">        prevOffsets </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">[]</span></span>
<span class="line"><span style="color: #D8DEE9FF">        prevMask </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">None</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">if</span><span style="color: #D8DEE9FF"> keyboard</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">is_pressed</span><span style="color: #ECEFF4">(</span><span style="color: #ECEFF4">&#39;</span><span style="color: #A3BE8C">ctrl</span><span style="color: #ECEFF4">&#39;</span><span style="color: #ECEFF4">):</span></span>
<span class="line"><span style="color: #D8DEE9FF">            prevOffsets </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">_highlight</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">get_offsets</span><span style="color: #ECEFF4">()</span></span>
<span class="line"><span style="color: #D8DEE9FF">            prevMask </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">mask</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">clear_highlights</span><span style="color: #ECEFF4">()</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">mask </span><span style="color: #81A1C1">|=</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">inside</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9FF">event1</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> event2</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">        xy </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> np</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">column_stack</span><span style="color: #ECEFF4">([</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">x</span><span style="color: #ECEFF4">[</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">mask</span><span style="color: #ECEFF4">],</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">y</span><span style="color: #ECEFF4">[</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">mask</span><span style="color: #ECEFF4">]])</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">if</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">len</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9FF">prevOffsets</span><span style="color: #ECEFF4">)</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">&gt;</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">0</span><span style="color: #ECEFF4">:</span></span>
<span class="line"><span style="color: #D8DEE9FF">            xy </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> np</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">concatenate</span><span style="color: #ECEFF4">((</span><span style="color: #D8DEE9FF">xy</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> prevOffsets</span><span style="color: #ECEFF4">))</span></span>
<span class="line"><span style="color: #D8DEE9FF">            </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">mask </span><span style="color: #81A1C1">|=</span><span style="color: #D8DEE9FF"> prevMask</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">if</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">len</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9FF">xy</span><span style="color: #ECEFF4">):</span></span>
<span class="line"><span style="color: #D8DEE9FF">            </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">_highlight</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">set_offsets</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9FF">xy</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">            </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">canvas</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">draw_idle</span><span style="color: #ECEFF4">()</span></span></code></pre></div>



<p>The most important function is the <code>select</code> method, which is called by the rectangle selector every time we use the drag tool created by the rectangle selector. The reason this will be called is because we passed the <code>select</code> function of the highlighter class into the rectangle selector&#8217;s constructor as the second parameter.</p>



<p>This function does the following:</p>



<ol>
<li>Tracks the previous highlighted values, so that if the CTRL key is pressed, multi-stage drag selection can take place. </li>



<li>Calls the <code>inside</code> method, which returns a list of boolean values representing which points are inside the selected area, and which are not. The mask <code>attribute</code> is assigned these values. The inside method calculates this list using the two events, the first event being the start location of the drag (where the mouse was held down) and the end location (where the mouse was released).</li>
</ol>



<div class="wp-block-kevinbatdorf-code-block-pro" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:flex;align-items:center;padding:10px 0px 10px 16px;margin-bottom:-2px;width:100%;text-align:left;background-color:#39404f;color:#c8d0e0">Python</span><span role="button" tabindex="0" data-code="    def inside(self, event1, event2):
        &quot;&quot;&quot;Returns a boolean mask of the points inside the rectangle defined by
        event1 and event2.&quot;&quot;&quot;
        x0, x1 = sorted([event1.xdata, event2.xdata])
        y0, y1 = sorted([event1.ydata, event2.ydata])
        mask = ((self.x &gt; x0) &amp; (self.x &lt; x1) &amp;
                (self.y &gt; y0) &amp; (self.y &lt; y1))
        return mask" style="color:#d8dee9ff;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path></svg></span><pre class="shiki nord" style="background-color: #2e3440ff" tabindex="0"><code><span class="line"><span style="color: #D8DEE9FF">    </span><span style="color: #81A1C1">def</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">inside</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">event1</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">event2</span><span style="color: #ECEFF4">):</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #ECEFF4">&quot;&quot;&quot;</span><span style="color: #A3BE8C">Returns a boolean mask of the points inside the rectangle defined by</span></span>
<span class="line"><span style="color: #A3BE8C">        event1 and event2.</span><span style="color: #ECEFF4">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color: #D8DEE9FF">        x0</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> x1 </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">sorted</span><span style="color: #ECEFF4">([</span><span style="color: #D8DEE9FF">event1</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">xdata</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> event2</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">xdata</span><span style="color: #ECEFF4">])</span></span>
<span class="line"><span style="color: #D8DEE9FF">        y0</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> y1 </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">sorted</span><span style="color: #ECEFF4">([</span><span style="color: #D8DEE9FF">event1</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">ydata</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> event2</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">ydata</span><span style="color: #ECEFF4">])</span></span>
<span class="line"><span style="color: #D8DEE9FF">        mask </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">((</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">x </span><span style="color: #81A1C1">&gt;</span><span style="color: #D8DEE9FF"> x0</span><span style="color: #ECEFF4">)</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">&amp;</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">x </span><span style="color: #81A1C1">&lt;</span><span style="color: #D8DEE9FF"> x1</span><span style="color: #ECEFF4">)</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">&amp;</span></span>
<span class="line"><span style="color: #D8DEE9FF">                </span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">y </span><span style="color: #81A1C1">&gt;</span><span style="color: #D8DEE9FF"> y0</span><span style="color: #ECEFF4">)</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">&amp;</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">y </span><span style="color: #81A1C1">&lt;</span><span style="color: #D8DEE9FF"> y1</span><span style="color: #ECEFF4">))</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">return</span><span style="color: #D8DEE9FF"> mask</span></span></code></pre></div>



<ol start="3">
<li>Filter the x and y values using the mask, and store them in the <code>xy</code> variable which will become the coordinates of the points which need to be highlighted. At the end, the <code>set_offsets</code> method is called, which will handle the actual highlighting.</li>
</ol>



<div class="wp-block-kevinbatdorf-code-block-pro" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:flex;align-items:center;padding:10px 0px 10px 16px;margin-bottom:-2px;width:100%;text-align:left;background-color:#39404f;color:#c8d0e0">Python</span><span role="button" tabindex="0" data-code="    def set_offsets(self, xy):
        self._highlight.remove()
        self._highlight = self.ax.scatter([], [], s=50, color='yellow', zorder=10)

        if len(xy):
            self._highlight.set_offsets(xy)
        self.canvas.draw_idle()" style="color:#d8dee9ff;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path></svg></span><pre class="shiki nord" style="background-color: #2e3440ff" tabindex="0"><code><span class="line"><span style="color: #D8DEE9FF">    </span><span style="color: #81A1C1">def</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">set_offsets</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">xy</span><span style="color: #ECEFF4">):</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">_highlight</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">remove</span><span style="color: #ECEFF4">()</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">_highlight </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">ax</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">scatter</span><span style="color: #ECEFF4">([],</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">[],</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">s</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">50</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">color</span><span style="color: #81A1C1">=</span><span style="color: #ECEFF4">&#39;</span><span style="color: #A3BE8C">yellow</span><span style="color: #ECEFF4">&#39;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">zorder</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">10</span><span style="color: #ECEFF4">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">if</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">len</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9FF">xy</span><span style="color: #ECEFF4">):</span></span>
<span class="line"><span style="color: #D8DEE9FF">            </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">_highlight</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">set_offsets</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9FF">xy</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">canvas</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">draw_idle</span><span style="color: #ECEFF4">()</span></span></code></pre></div>



<p>This is accomplished by drawing yellow scatter points over the locations of the points we want to select. Alternatively, you could modify the code to instead update the selected scatter points individually and change their color to yellow.</p>



<div class="wp-block-kevinbatdorf-code-block-pro" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:flex;align-items:center;padding:10px 0px 10px 16px;margin-bottom:-2px;width:100%;text-align:left;background-color:#39404f;color:#c8d0e0">Python</span><span role="button" tabindex="0" data-code="    def clear_highlights(self):
        self._highlight.remove()
        self._highlight = self.ax.scatter([], [], s=50, color='yellow', zorder=10)
        self.mask = np.zeros(self.x.shape, dtype=bool)
        self.canvas.draw_idle()" style="color:#d8dee9ff;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path></svg></span><pre class="shiki nord" style="background-color: #2e3440ff" tabindex="0"><code><span class="line"><span style="color: #D8DEE9FF">    </span><span style="color: #81A1C1">def</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">clear_highlights</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">):</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">_highlight</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">remove</span><span style="color: #ECEFF4">()</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">_highlight </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">ax</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">scatter</span><span style="color: #ECEFF4">([],</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">[],</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">s</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">50</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">color</span><span style="color: #81A1C1">=</span><span style="color: #ECEFF4">&#39;</span><span style="color: #A3BE8C">yellow</span><span style="color: #ECEFF4">&#39;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">zorder</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">10</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">mask </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> np</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">zeros</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">x</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">shape</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">dtype</span><span style="color: #81A1C1">=</span><span style="color: #88C0D0">bool</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">canvas</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">draw_idle</span><span style="color: #ECEFF4">()</span></span></code></pre></div>



<p>There is also a <code>clear_highlights</code> method that has been used within this class to clear the existing highlights. </p>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<hr>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<h2 class="wp-block-heading">Highlighter Class &#8211; Complete Code</h2>



<p>Here is the complete combined code for the Highlighter class.</p>



<div class="wp-block-kevinbatdorf-code-block-pro" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:flex;align-items:center;padding:10px 0px 10px 16px;margin-bottom:-2px;width:100%;text-align:left;background-color:#39404f;color:#c8d0e0">Python</span><span role="button" tabindex="0" data-code="import pandas as pd
import numpy as np
from matplotlib.widgets import RectangleSelector
import keyboard

class Highlighter(object):
    def __init__(self, canvas, ax, x, y, ):
        self.canvas = canvas
        self.ax = ax
        self.x, self.y = x, y
        self.mask = np.zeros(x.shape, dtype=bool)

        self._highlight = self.ax.scatter([], [], s=50, color='yellow', zorder=10)
        self.selector = RectangleSelector(self.ax, self.select, useblit=True, state_modifier_keys={&quot;center&quot;: &quot;alt&quot;})

    def update(self, x, y):
        self.x, self.y = x, y
        self.mask = np.zeros(x.shape, dtype=bool)

    def select(self, event1, event2):
        prevOffsets = []
        prevMask = None

        if keyboard.is_pressed('ctrl'):
            prevOffsets = self._highlight.get_offsets()
            prevMask = self.mask

        self.clear_highlights()
        self.mask |= self.inside(event1, event2)
        xy = np.column_stack([self.x[self.mask], self.y[self.mask]])

        if len(prevOffsets) &gt; 0:
            xy = np.concatenate((xy, prevOffsets))
            self.mask |= prevMask

        if len(xy):
            self._highlight.set_offsets(xy)
            self.canvas.draw_idle()
    
    def clear_highlights(self):
        self._highlight.remove()
        self._highlight = self.ax.scatter([], [], s=50, color='yellow', zorder=10)
        self.mask = np.zeros(self.x.shape, dtype=bool)
        self.canvas.draw_idle()

    def set_offsets(self, xy):
        self._highlight.remove()
        self._highlight = self.ax.scatter([], [], s=50, color='yellow', zorder=10)

        if len(xy):
            self._highlight.set_offsets(xy)
        self.canvas.draw_idle()

    def check_inside(self, point1, point2):
        &quot;&quot;&quot;Returns a boolean mask of the points inside the rectangle defined by
        event1 and event2.&quot;&quot;&quot;
        x0, x1 = sorted([point1[0], point2[0]])
        y0, y1 = sorted([point1[1], point2[1]])
        mask = ((self.x &gt; x0) &amp; (self.x &lt; x1) &amp;
                (self.y &gt; y0) &amp; (self.y &lt; y1))
        return mask

    def inside(self, event1, event2):
        &quot;&quot;&quot;Returns a boolean mask of the points inside the rectangle defined by
        event1 and event2.&quot;&quot;&quot;
        x0, x1 = sorted([event1.xdata, event2.xdata])
        y0, y1 = sorted([event1.ydata, event2.ydata])
        mask = ((self.x &gt; x0) &amp; (self.x &lt; x1) &amp;
                (self.y &gt; y0) &amp; (self.y &lt; y1))
        return mask" style="color:#d8dee9ff;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path></svg></span><pre class="shiki nord" style="background-color: #2e3440ff" tabindex="0"><code><span class="line"><span style="color: #81A1C1">import</span><span style="color: #D8DEE9FF"> pandas </span><span style="color: #81A1C1">as</span><span style="color: #D8DEE9FF"> pd</span></span>
<span class="line"><span style="color: #81A1C1">import</span><span style="color: #D8DEE9FF"> numpy </span><span style="color: #81A1C1">as</span><span style="color: #D8DEE9FF"> np</span></span>
<span class="line"><span style="color: #81A1C1">from</span><span style="color: #D8DEE9FF"> matplotlib</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">widgets </span><span style="color: #81A1C1">import</span><span style="color: #D8DEE9FF"> RectangleSelector</span></span>
<span class="line"><span style="color: #81A1C1">import</span><span style="color: #D8DEE9FF"> keyboard</span></span>
<span class="line"></span>
<span class="line"><span style="color: #81A1C1">class</span><span style="color: #D8DEE9FF"> </span><span style="color: #8FBCBB">Highlighter</span><span style="color: #ECEFF4">(</span><span style="color: #88C0D0">object</span><span style="color: #ECEFF4">):</span></span>
<span class="line"><span style="color: #D8DEE9FF">    </span><span style="color: #81A1C1">def</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">__init__</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">canvas</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">ax</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">x</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">y</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">):</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">canvas </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> canvas</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">ax </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> ax</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">x</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">y </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> x</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> y</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">mask </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> np</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">zeros</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9FF">x</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">shape</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">dtype</span><span style="color: #81A1C1">=</span><span style="color: #88C0D0">bool</span><span style="color: #ECEFF4">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">_highlight </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">ax</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">scatter</span><span style="color: #ECEFF4">([],</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">[],</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">s</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">50</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">color</span><span style="color: #81A1C1">=</span><span style="color: #ECEFF4">&#39;</span><span style="color: #A3BE8C">yellow</span><span style="color: #ECEFF4">&#39;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">zorder</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">10</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">selector </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">RectangleSelector</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">ax</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">select</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">useblit</span><span style="color: #81A1C1">=True</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">state_modifier_keys</span><span style="color: #81A1C1">=</span><span style="color: #ECEFF4">{</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">center</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">alt</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">})</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D8DEE9FF">    </span><span style="color: #81A1C1">def</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">update</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">x</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">y</span><span style="color: #ECEFF4">):</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">x</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">y </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> x</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> y</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">mask </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> np</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">zeros</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9FF">x</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">shape</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">dtype</span><span style="color: #81A1C1">=</span><span style="color: #88C0D0">bool</span><span style="color: #ECEFF4">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D8DEE9FF">    </span><span style="color: #81A1C1">def</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">select</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">event1</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">event2</span><span style="color: #ECEFF4">):</span></span>
<span class="line"><span style="color: #D8DEE9FF">        prevOffsets </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">[]</span></span>
<span class="line"><span style="color: #D8DEE9FF">        prevMask </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">None</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">if</span><span style="color: #D8DEE9FF"> keyboard</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">is_pressed</span><span style="color: #ECEFF4">(</span><span style="color: #ECEFF4">&#39;</span><span style="color: #A3BE8C">ctrl</span><span style="color: #ECEFF4">&#39;</span><span style="color: #ECEFF4">):</span></span>
<span class="line"><span style="color: #D8DEE9FF">            prevOffsets </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">_highlight</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">get_offsets</span><span style="color: #ECEFF4">()</span></span>
<span class="line"><span style="color: #D8DEE9FF">            prevMask </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">mask</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">clear_highlights</span><span style="color: #ECEFF4">()</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">mask </span><span style="color: #81A1C1">|=</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">inside</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9FF">event1</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> event2</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">        xy </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> np</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">column_stack</span><span style="color: #ECEFF4">([</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">x</span><span style="color: #ECEFF4">[</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">mask</span><span style="color: #ECEFF4">],</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">y</span><span style="color: #ECEFF4">[</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">mask</span><span style="color: #ECEFF4">]])</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">if</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">len</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9FF">prevOffsets</span><span style="color: #ECEFF4">)</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">&gt;</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">0</span><span style="color: #ECEFF4">:</span></span>
<span class="line"><span style="color: #D8DEE9FF">            xy </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> np</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">concatenate</span><span style="color: #ECEFF4">((</span><span style="color: #D8DEE9FF">xy</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> prevOffsets</span><span style="color: #ECEFF4">))</span></span>
<span class="line"><span style="color: #D8DEE9FF">            </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">mask </span><span style="color: #81A1C1">|=</span><span style="color: #D8DEE9FF"> prevMask</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">if</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">len</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9FF">xy</span><span style="color: #ECEFF4">):</span></span>
<span class="line"><span style="color: #D8DEE9FF">            </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">_highlight</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">set_offsets</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9FF">xy</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">            </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">canvas</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">draw_idle</span><span style="color: #ECEFF4">()</span></span>
<span class="line"><span style="color: #D8DEE9FF">    </span></span>
<span class="line"><span style="color: #D8DEE9FF">    </span><span style="color: #81A1C1">def</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">clear_highlights</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">):</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">_highlight</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">remove</span><span style="color: #ECEFF4">()</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">_highlight </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">ax</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">scatter</span><span style="color: #ECEFF4">([],</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">[],</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">s</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">50</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">color</span><span style="color: #81A1C1">=</span><span style="color: #ECEFF4">&#39;</span><span style="color: #A3BE8C">yellow</span><span style="color: #ECEFF4">&#39;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">zorder</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">10</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">mask </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> np</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">zeros</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">x</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">shape</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">dtype</span><span style="color: #81A1C1">=</span><span style="color: #88C0D0">bool</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">canvas</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">draw_idle</span><span style="color: #ECEFF4">()</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D8DEE9FF">    </span><span style="color: #81A1C1">def</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">set_offsets</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">xy</span><span style="color: #ECEFF4">):</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">_highlight</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">remove</span><span style="color: #ECEFF4">()</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">_highlight </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">ax</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">scatter</span><span style="color: #ECEFF4">([],</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">[],</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">s</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">50</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">color</span><span style="color: #81A1C1">=</span><span style="color: #ECEFF4">&#39;</span><span style="color: #A3BE8C">yellow</span><span style="color: #ECEFF4">&#39;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">zorder</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">10</span><span style="color: #ECEFF4">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">if</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">len</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9FF">xy</span><span style="color: #ECEFF4">):</span></span>
<span class="line"><span style="color: #D8DEE9FF">            </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">_highlight</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">set_offsets</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9FF">xy</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">canvas</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">draw_idle</span><span style="color: #ECEFF4">()</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D8DEE9FF">    </span><span style="color: #81A1C1">def</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">check_inside</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">point1</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">point2</span><span style="color: #ECEFF4">):</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #ECEFF4">&quot;&quot;&quot;</span><span style="color: #A3BE8C">Returns a boolean mask of the points inside the rectangle defined by</span></span>
<span class="line"><span style="color: #A3BE8C">        event1 and event2.</span><span style="color: #ECEFF4">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color: #D8DEE9FF">        x0</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> x1 </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">sorted</span><span style="color: #ECEFF4">([</span><span style="color: #D8DEE9FF">point1</span><span style="color: #ECEFF4">[</span><span style="color: #B48EAD">0</span><span style="color: #ECEFF4">],</span><span style="color: #D8DEE9FF"> point2</span><span style="color: #ECEFF4">[</span><span style="color: #B48EAD">0</span><span style="color: #ECEFF4">]])</span></span>
<span class="line"><span style="color: #D8DEE9FF">        y0</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> y1 </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">sorted</span><span style="color: #ECEFF4">([</span><span style="color: #D8DEE9FF">point1</span><span style="color: #ECEFF4">[</span><span style="color: #B48EAD">1</span><span style="color: #ECEFF4">],</span><span style="color: #D8DEE9FF"> point2</span><span style="color: #ECEFF4">[</span><span style="color: #B48EAD">1</span><span style="color: #ECEFF4">]])</span></span>
<span class="line"><span style="color: #D8DEE9FF">        mask </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">((</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">x </span><span style="color: #81A1C1">&gt;</span><span style="color: #D8DEE9FF"> x0</span><span style="color: #ECEFF4">)</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">&amp;</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">x </span><span style="color: #81A1C1">&lt;</span><span style="color: #D8DEE9FF"> x1</span><span style="color: #ECEFF4">)</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">&amp;</span></span>
<span class="line"><span style="color: #D8DEE9FF">                </span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">y </span><span style="color: #81A1C1">&gt;</span><span style="color: #D8DEE9FF"> y0</span><span style="color: #ECEFF4">)</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">&amp;</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">y </span><span style="color: #81A1C1">&lt;</span><span style="color: #D8DEE9FF"> y1</span><span style="color: #ECEFF4">))</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">return</span><span style="color: #D8DEE9FF"> mask</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D8DEE9FF">    </span><span style="color: #81A1C1">def</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">inside</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">event1</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">event2</span><span style="color: #ECEFF4">):</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #ECEFF4">&quot;&quot;&quot;</span><span style="color: #A3BE8C">Returns a boolean mask of the points inside the rectangle defined by</span></span>
<span class="line"><span style="color: #A3BE8C">        event1 and event2.</span><span style="color: #ECEFF4">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color: #D8DEE9FF">        x0</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> x1 </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">sorted</span><span style="color: #ECEFF4">([</span><span style="color: #D8DEE9FF">event1</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">xdata</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> event2</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">xdata</span><span style="color: #ECEFF4">])</span></span>
<span class="line"><span style="color: #D8DEE9FF">        y0</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> y1 </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">sorted</span><span style="color: #ECEFF4">([</span><span style="color: #D8DEE9FF">event1</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">ydata</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> event2</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">ydata</span><span style="color: #ECEFF4">])</span></span>
<span class="line"><span style="color: #D8DEE9FF">        mask </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">((</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">x </span><span style="color: #81A1C1">&gt;</span><span style="color: #D8DEE9FF"> x0</span><span style="color: #ECEFF4">)</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">&amp;</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">x </span><span style="color: #81A1C1">&lt;</span><span style="color: #D8DEE9FF"> x1</span><span style="color: #ECEFF4">)</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">&amp;</span></span>
<span class="line"><span style="color: #D8DEE9FF">                </span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">y </span><span style="color: #81A1C1">&gt;</span><span style="color: #D8DEE9FF"> y0</span><span style="color: #ECEFF4">)</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">&amp;</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">y </span><span style="color: #81A1C1">&lt;</span><span style="color: #D8DEE9FF"> y1</span><span style="color: #ECEFF4">))</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">return</span><span style="color: #D8DEE9FF"> mask</span></span></code></pre></div>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<hr>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<h2 class="wp-block-heading">The GUI application</h2>



<p>Here is the code for our driver application. We developed an application with Tkinter GUI to wrap around our Matplotlib graph. You are not required to do this, and can modify the code accordingly (won&#8217;t take more than a few small changes). It is expected however, that any graph application that requires such an advanced feature, will also have a GUI library along with it (since matplotlib GUI is limited).</p>



<p>The only method of note here, is the delete method which handles the deletion of the selected points. You can use the delete method as a template for performing other actions, such as copy, paste, move, etc.</p>



<div class="wp-block-kevinbatdorf-code-block-pro" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:flex;align-items:center;padding:10px 0px 10px 16px;margin-bottom:-2px;width:100%;text-align:left;background-color:#39404f;color:#c8d0e0">Python</span><span role="button" tabindex="0" data-code="import tkinter as tk
from tkinter import ttk
from matplotlib.figure import Figure
from matplotlib.backends.backend_tkagg import FigureCanvasTkAgg
from Highlighter import Highlighter
import pandas as pd
import random 

class MatplotlibApp:
    def __init__(self, master):
        self.master = master
        self.master.title(&quot;Matplotlib App&quot;)
        self.data = pd.DataFrame(columns=[&quot;x&quot;, &quot;y&quot;])
        self.points = []
        self.create_widgets()

    def create_widgets(self):
        self.fig = Figure(figsize=(5, 4), dpi=100)
        self.ax = self.fig.add_subplot(111)
        self.ax.set_xlim(-1, 11)
        self.ax.set_ylim(-1, 11)    

        self.canvas = FigureCanvasTkAgg(self.fig, master=self.master)
        self.canvas.get_tk_widget().pack(side=tk.TOP, fill=tk.BOTH, expand=1)
        self.canvas.get_tk_widget().bind(&quot;&lt;Delete&gt;&quot;, self.delete)
        self.canvas.draw()

        tk.Button(self.master, text=&quot;Add Random Point&quot;, command=self.add).pack(padx=20, pady=20)
        self.highlighter = Highlighter(self.canvas, self.ax, self.data[&quot;x&quot;], self.data[&quot;y&quot;])

    def add(self):
        x, y = [random.randint(0, 10), random.randint(0, 10)]
        df = pd.DataFrame([[x, y]], columns=[&quot;x&quot;, &quot;y&quot;])

        self.data = pd.concat([self.data, df], ignore_index=True)
        self.points.append(self.ax.scatter(x, y, color=&quot;blue&quot;))
        self.highlighter.update(self.data[&quot;x&quot;], self.data[&quot;y&quot;])
        self.canvas.draw()

    def delete(self, event):
        self.selected_regions = self.highlighter.mask
        self.data = self.data[~self.selected_regions].reset_index(drop=True)

        for i, artist in enumerate(self.points):
            if self.selected_regions[i]:
                artist.remove()
        self.points = [artist for artist, m in zip(self.points, self.selected_regions) if m != 1]

        self.highlighter.update(self.data[&quot;x&quot;], self.data[&quot;y&quot;])
        self.highlighter.clear_highlights()
        self.canvas.draw()

def main():
    root = tk.Tk()
    app = MatplotlibApp(root)
    root.mainloop()

if __name__ == &quot;__main__&quot;:
    main()" style="color:#d8dee9ff;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path></svg></span><pre class="shiki nord" style="background-color: #2e3440ff" tabindex="0"><code><span class="line"><span style="color: #81A1C1">import</span><span style="color: #D8DEE9FF"> tkinter </span><span style="color: #81A1C1">as</span><span style="color: #D8DEE9FF"> tk</span></span>
<span class="line"><span style="color: #81A1C1">from</span><span style="color: #D8DEE9FF"> tkinter </span><span style="color: #81A1C1">import</span><span style="color: #D8DEE9FF"> ttk</span></span>
<span class="line"><span style="color: #81A1C1">from</span><span style="color: #D8DEE9FF"> matplotlib</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">figure </span><span style="color: #81A1C1">import</span><span style="color: #D8DEE9FF"> Figure</span></span>
<span class="line"><span style="color: #81A1C1">from</span><span style="color: #D8DEE9FF"> matplotlib</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">backends</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">backend_tkagg </span><span style="color: #81A1C1">import</span><span style="color: #D8DEE9FF"> FigureCanvasTkAgg</span></span>
<span class="line"><span style="color: #81A1C1">from</span><span style="color: #D8DEE9FF"> Highlighter </span><span style="color: #81A1C1">import</span><span style="color: #D8DEE9FF"> Highlighter</span></span>
<span class="line"><span style="color: #81A1C1">import</span><span style="color: #D8DEE9FF"> pandas </span><span style="color: #81A1C1">as</span><span style="color: #D8DEE9FF"> pd</span></span>
<span class="line"><span style="color: #81A1C1">import</span><span style="color: #D8DEE9FF"> random </span></span>
<span class="line"></span>
<span class="line"><span style="color: #81A1C1">class</span><span style="color: #D8DEE9FF"> </span><span style="color: #8FBCBB">MatplotlibApp</span><span style="color: #ECEFF4">:</span></span>
<span class="line"><span style="color: #D8DEE9FF">    </span><span style="color: #81A1C1">def</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">__init__</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">master</span><span style="color: #ECEFF4">):</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">master </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> master</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">master</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">title</span><span style="color: #ECEFF4">(</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Matplotlib App</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">data </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> pd</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">DataFrame</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9">columns</span><span style="color: #81A1C1">=</span><span style="color: #ECEFF4">[</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">x</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">y</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">])</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">points </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">[]</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">create_widgets</span><span style="color: #ECEFF4">()</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D8DEE9FF">    </span><span style="color: #81A1C1">def</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">create_widgets</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">):</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">fig </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">Figure</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9">figsize</span><span style="color: #81A1C1">=</span><span style="color: #ECEFF4">(</span><span style="color: #B48EAD">5</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">4</span><span style="color: #ECEFF4">),</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">dpi</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">100</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">ax </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">fig</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">add_subplot</span><span style="color: #ECEFF4">(</span><span style="color: #B48EAD">111</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">ax</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">set_xlim</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">-</span><span style="color: #B48EAD">1</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">11</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">ax</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">set_ylim</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">-</span><span style="color: #B48EAD">1</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">11</span><span style="color: #ECEFF4">)</span><span style="color: #D8DEE9FF">    </span></span>
<span class="line"></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">canvas </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">FigureCanvasTkAgg</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">fig</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">master</span><span style="color: #81A1C1">=self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">master</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">canvas</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">get_tk_widget</span><span style="color: #ECEFF4">().</span><span style="color: #88C0D0">pack</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9">side</span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF">tk</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">TOP</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">fill</span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF">tk</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">BOTH</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">expand</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">1</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">canvas</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">get_tk_widget</span><span style="color: #ECEFF4">().</span><span style="color: #88C0D0">bind</span><span style="color: #ECEFF4">(</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">&lt;Delete&gt;</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">delete</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">canvas</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">draw</span><span style="color: #ECEFF4">()</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D8DEE9FF">        tk</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">Button</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">master</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">text</span><span style="color: #81A1C1">=</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Add Random Point</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">command</span><span style="color: #81A1C1">=self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">add</span><span style="color: #ECEFF4">).</span><span style="color: #88C0D0">pack</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9">padx</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">20</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">pady</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">20</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">highlighter </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">Highlighter</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">canvas</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">ax</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">data</span><span style="color: #ECEFF4">[</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">x</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">],</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">data</span><span style="color: #ECEFF4">[</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">y</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">])</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D8DEE9FF">    </span><span style="color: #81A1C1">def</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">add</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">):</span></span>
<span class="line"><span style="color: #D8DEE9FF">        x</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> y </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">[</span><span style="color: #D8DEE9FF">random</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">randint</span><span style="color: #ECEFF4">(</span><span style="color: #B48EAD">0</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">10</span><span style="color: #ECEFF4">),</span><span style="color: #D8DEE9FF"> random</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">randint</span><span style="color: #ECEFF4">(</span><span style="color: #B48EAD">0</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">10</span><span style="color: #ECEFF4">)]</span></span>
<span class="line"><span style="color: #D8DEE9FF">        df </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> pd</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">DataFrame</span><span style="color: #ECEFF4">([[</span><span style="color: #D8DEE9FF">x</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> y</span><span style="color: #ECEFF4">]],</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">columns</span><span style="color: #81A1C1">=</span><span style="color: #ECEFF4">[</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">x</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">y</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">])</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">data </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> pd</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">concat</span><span style="color: #ECEFF4">([</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">data</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> df</span><span style="color: #ECEFF4">],</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">ignore_index</span><span style="color: #81A1C1">=True</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">points</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">append</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">ax</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">scatter</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9FF">x</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> y</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">color</span><span style="color: #81A1C1">=</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">blue</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">))</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">highlighter</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">update</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">data</span><span style="color: #ECEFF4">[</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">x</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">],</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">data</span><span style="color: #ECEFF4">[</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">y</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">])</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">canvas</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">draw</span><span style="color: #ECEFF4">()</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D8DEE9FF">    </span><span style="color: #81A1C1">def</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">delete</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">event</span><span style="color: #ECEFF4">):</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">selected_regions </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">highlighter</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">mask</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">data </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">data</span><span style="color: #ECEFF4">[</span><span style="color: #81A1C1">~self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">selected_regions</span><span style="color: #ECEFF4">].</span><span style="color: #88C0D0">reset_index</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9">drop</span><span style="color: #81A1C1">=True</span><span style="color: #ECEFF4">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">for</span><span style="color: #D8DEE9FF"> i</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> artist </span><span style="color: #81A1C1">in</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">enumerate</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">points</span><span style="color: #ECEFF4">):</span></span>
<span class="line"><span style="color: #D8DEE9FF">            </span><span style="color: #81A1C1">if</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">selected_regions</span><span style="color: #ECEFF4">[</span><span style="color: #D8DEE9FF">i</span><span style="color: #ECEFF4">]:</span></span>
<span class="line"><span style="color: #D8DEE9FF">                artist</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">remove</span><span style="color: #ECEFF4">()</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">points </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">[</span><span style="color: #D8DEE9FF">artist </span><span style="color: #81A1C1">for</span><span style="color: #D8DEE9FF"> artist</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> m </span><span style="color: #81A1C1">in</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">zip</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">points</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">selected_regions</span><span style="color: #ECEFF4">)</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">if</span><span style="color: #D8DEE9FF"> m </span><span style="color: #81A1C1">!=</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">1</span><span style="color: #ECEFF4">]</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">highlighter</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">update</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">data</span><span style="color: #ECEFF4">[</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">x</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">],</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">data</span><span style="color: #ECEFF4">[</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">y</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">])</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">highlighter</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">clear_highlights</span><span style="color: #ECEFF4">()</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">canvas</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">draw</span><span style="color: #ECEFF4">()</span></span>
<span class="line"></span>
<span class="line"><span style="color: #81A1C1">def</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">main</span><span style="color: #ECEFF4">():</span></span>
<span class="line"><span style="color: #D8DEE9FF">    root </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> tk</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">Tk</span><span style="color: #ECEFF4">()</span></span>
<span class="line"><span style="color: #D8DEE9FF">    app </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">MatplotlibApp</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9FF">root</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">    root</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">mainloop</span><span style="color: #ECEFF4">()</span></span>
<span class="line"></span>
<span class="line"><span style="color: #81A1C1">if</span><span style="color: #D8DEE9FF"> __name__ </span><span style="color: #81A1C1">==</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">__main__</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">:</span></span>
<span class="line"><span style="color: #D8DEE9FF">    </span><span style="color: #88C0D0">main</span><span style="color: #ECEFF4">()</span></span></code></pre></div>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<hr>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<p>This marks the end of the Interactive Scatter Plot with Matplotlib Rectangle Selector Tutorial. Any suggestions or contributions for CodersLegacy are more than welcome. Questions regarding the tutorial content may be asked in the comments section below.</p>
<p>The post <a href="https://coderslegacy.com/interactive-scatter-plot-highlighting-and-deletion-with-matplotlib/">Interactive Scatter Plot Highlighting and Deletion with Matplotlib</a> appeared first on <a href="https://coderslegacy.com">CodersLegacy</a>.</p>]]></description>
                <pubDate>Wed, 27 Mar 2024 22:44:29 +0200</pubDate>
                <guid isPermaLink="false">https://api.follow.it/track-rss-story-click/v3/Pni2oPawGk2fR6SXp3fGDwC0qH-r7xlT</guid>
            </item>
                    <item>
                <title><![CDATA[Exploring Data Tables in Tkinter with PandasTable]]></title>
                <link>https://api.follow.it/track-rss-story-click/v3/Pni2oPawGk3OJLUljys5GXKSkciKEY1s</link>
                <description><![CDATA[<img src="https://api.follow.it/track-rss-story-loaded/v1/6BwmpJ7qig-FkGV_dXN16eT5HJgy6HUf" border=0 width="1" height="1" alt="Exploring Data Tables in Tkinter with PandasTable" title="Exploring Data Tables in Tkinter with PandasTable"> <p>In this tutorial, we will delve into the powerful combination of Pandas and Tkinter through the PandasTable library. PandasTable provides a convenient way to display and interact with pandas DataFrames in a Tkinter GUI. </p>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<hr>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<h2 class="wp-block-heading">Prerequisites:</h2>



<ol>
<li>Basic knowledge of <a href="https://coderslegacy.com/python/python-gui/">Python and Tkinter</a>.</li>



<li>Some Familiarity with Pandas and DataFrames.</li>
</ol>



<p>You will also need to install the pandas and pandastable libraries. Run the following commands to do so:</p>



<div class="wp-block-kevinbatdorf-code-block-pro" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:block;padding:16px 0 0 16px;margin-bottom:-1px;width:100%;text-align:left;background-color:#2e3440ff"><svg xmlns="http://www.w3.org/2000/svg" width="54" height="14" viewBox="0 0 54 14"><g fill="none" fill-rule="evenodd" transform="translate(1 1)"><circle cx="6" cy="6" r="6" fill="#FF5F56" stroke="#E0443E" stroke-width=".5"></circle><circle cx="26" cy="6" r="6" fill="#FFBD2E" stroke="#DEA123" stroke-width=".5"></circle><circle cx="46" cy="6" r="6" fill="#27C93F" stroke="#1AAB29" stroke-width=".5"></circle></g></svg></span><span role="button" tabindex="0" data-code="pip install pandas
pip install pandastable" style="color:#d8dee9ff;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path></svg></span><pre class="shiki nord" style="background-color: #2e3440ff" tabindex="0"><code><span class="line"><span style="color: #88C0D0">pip</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">install</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">pandas</span></span>
<span class="line"><span style="color: #88C0D0">pip</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">install</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">pandastable</span></span></code></pre></div>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<hr>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<h2 class="wp-block-heading">Creating Interactive Data Tables with PandasTable in Tkinter</h2>



<p>Let&#8217;s start by importing the required libraries for our tutorial.</p>



<div class="wp-block-kevinbatdorf-code-block-pro" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:block;padding:16px 0 0 16px;margin-bottom:-1px;width:100%;text-align:left;background-color:#2e3440ff"><svg xmlns="http://www.w3.org/2000/svg" width="54" height="14" viewBox="0 0 54 14"><g fill="none" fill-rule="evenodd" transform="translate(1 1)"><circle cx="6" cy="6" r="6" fill="#FF5F56" stroke="#E0443E" stroke-width=".5"></circle><circle cx="26" cy="6" r="6" fill="#FFBD2E" stroke="#DEA123" stroke-width=".5"></circle><circle cx="46" cy="6" r="6" fill="#27C93F" stroke="#1AAB29" stroke-width=".5"></circle></g></svg></span><span role="button" tabindex="0" data-code="import tkinter as tk
from pandastable import Table, TableModel
import pandas as pd" style="color:#d8dee9ff;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path></svg></span><pre class="shiki nord" style="background-color: #2e3440ff" tabindex="0"><code><span class="line"><span style="color: #81A1C1">import</span><span style="color: #D8DEE9FF"> tkinter </span><span style="color: #81A1C1">as</span><span style="color: #D8DEE9FF"> tk</span></span>
<span class="line"><span style="color: #81A1C1">from</span><span style="color: #D8DEE9FF"> pandastable </span><span style="color: #81A1C1">import</span><span style="color: #D8DEE9FF"> Table</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> TableModel</span></span>
<span class="line"><span style="color: #81A1C1">import</span><span style="color: #D8DEE9FF"> pandas </span><span style="color: #81A1C1">as</span><span style="color: #D8DEE9FF"> pd</span></span></code></pre></div>



<p>Create a class for your application and initialize the main Tkinter window.</p>



<div class="wp-block-kevinbatdorf-code-block-pro" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:block;padding:16px 0 0 16px;margin-bottom:-1px;width:100%;text-align:left;background-color:#2e3440ff"><svg xmlns="http://www.w3.org/2000/svg" width="54" height="14" viewBox="0 0 54 14"><g fill="none" fill-rule="evenodd" transform="translate(1 1)"><circle cx="6" cy="6" r="6" fill="#FF5F56" stroke="#E0443E" stroke-width=".5"></circle><circle cx="26" cy="6" r="6" fill="#FFBD2E" stroke="#DEA123" stroke-width=".5"></circle><circle cx="46" cy="6" r="6" fill="#27C93F" stroke="#1AAB29" stroke-width=".5"></circle></g></svg></span><span role="button" tabindex="0" data-code="class PandasTableApp:
    def __init__(self, root):
        self.frame = tk.Frame(root)
        self.frame.pack(padx=10, pady=10)" style="color:#d8dee9ff;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path></svg></span><pre class="shiki nord" style="background-color: #2e3440ff" tabindex="0"><code><span class="line"><span style="color: #81A1C1">class</span><span style="color: #D8DEE9FF"> </span><span style="color: #8FBCBB">PandasTableApp</span><span style="color: #ECEFF4">:</span></span>
<span class="line"><span style="color: #D8DEE9FF">    </span><span style="color: #81A1C1">def</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">__init__</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">root</span><span style="color: #ECEFF4">):</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">frame </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> tk</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">Frame</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9FF">root</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">frame</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">pack</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9">padx</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">10</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">pady</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">10</span><span style="color: #ECEFF4">)</span></span></code></pre></div>



<p>Next, we need to define a DataFrame with some sample data, which we will feature in our PandasTable. </p>



<div class="wp-block-kevinbatdorf-code-block-pro" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:block;padding:16px 0 0 16px;margin-bottom:-1px;width:100%;text-align:left;background-color:#2e3440ff"><svg xmlns="http://www.w3.org/2000/svg" width="54" height="14" viewBox="0 0 54 14"><g fill="none" fill-rule="evenodd" transform="translate(1 1)"><circle cx="6" cy="6" r="6" fill="#FF5F56" stroke="#E0443E" stroke-width=".5"></circle><circle cx="26" cy="6" r="6" fill="#FFBD2E" stroke="#DEA123" stroke-width=".5"></circle><circle cx="46" cy="6" r="6" fill="#27C93F" stroke="#1AAB29" stroke-width=".5"></circle></g></svg></span><span role="button" tabindex="0" data-code="        # Create a sample DataFrame
        data = {'Name': ['John', 'Alice', 'Bob'],
                'Age': [28, 24, 22],
                'City': ['New York', 'San Francisco', 'Los Angeles']}
        df = pd.DataFrame(data)" style="color:#d8dee9ff;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path></svg></span><pre class="shiki nord" style="background-color: #2e3440ff" tabindex="0"><code><span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #616E88"># Create a sample DataFrame</span></span>
<span class="line"><span style="color: #D8DEE9FF">        data </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">{</span><span style="color: #ECEFF4">&#39;</span><span style="color: #A3BE8C">Name</span><span style="color: #ECEFF4">&#39;</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">[</span><span style="color: #ECEFF4">&#39;</span><span style="color: #A3BE8C">John</span><span style="color: #ECEFF4">&#39;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&#39;</span><span style="color: #A3BE8C">Alice</span><span style="color: #ECEFF4">&#39;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&#39;</span><span style="color: #A3BE8C">Bob</span><span style="color: #ECEFF4">&#39;</span><span style="color: #ECEFF4">],</span></span>
<span class="line"><span style="color: #D8DEE9FF">                </span><span style="color: #ECEFF4">&#39;</span><span style="color: #A3BE8C">Age</span><span style="color: #ECEFF4">&#39;</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">[</span><span style="color: #B48EAD">28</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">24</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">22</span><span style="color: #ECEFF4">],</span></span>
<span class="line"><span style="color: #D8DEE9FF">                </span><span style="color: #ECEFF4">&#39;</span><span style="color: #A3BE8C">City</span><span style="color: #ECEFF4">&#39;</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">[</span><span style="color: #ECEFF4">&#39;</span><span style="color: #A3BE8C">New York</span><span style="color: #ECEFF4">&#39;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&#39;</span><span style="color: #A3BE8C">San Francisco</span><span style="color: #ECEFF4">&#39;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&#39;</span><span style="color: #A3BE8C">Los Angeles</span><span style="color: #ECEFF4">&#39;</span><span style="color: #ECEFF4">]}</span></span>
<span class="line"><span style="color: #D8DEE9FF">        df </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> pd</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">DataFrame</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9FF">data</span><span style="color: #ECEFF4">)</span></span></code></pre></div>



<p>Now, create a PandasTable widget and display the DataFrame within the Tkinter window. Remember to call the show function, as it is responsible for visually rendering (or updating) the PandasTable. </p>



<div class="wp-block-kevinbatdorf-code-block-pro" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:block;padding:16px 0 0 16px;margin-bottom:-1px;width:100%;text-align:left;background-color:#2e3440ff"><svg xmlns="http://www.w3.org/2000/svg" width="54" height="14" viewBox="0 0 54 14"><g fill="none" fill-rule="evenodd" transform="translate(1 1)"><circle cx="6" cy="6" r="6" fill="#FF5F56" stroke="#E0443E" stroke-width=".5"></circle><circle cx="26" cy="6" r="6" fill="#FFBD2E" stroke="#DEA123" stroke-width=".5"></circle><circle cx="46" cy="6" r="6" fill="#27C93F" stroke="#1AAB29" stroke-width=".5"></circle></g></svg></span><span role="button" tabindex="0" data-code="        # Create a PandasTable
        self.table = Table(self.frame, dataframe=df, showtoolbar=True, showstatusbar=True)
        self.table.show()" style="color:#d8dee9ff;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path></svg></span><pre class="shiki nord" style="background-color: #2e3440ff" tabindex="0"><code><span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #616E88"># Create a PandasTable</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">table </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">Table</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">frame</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">dataframe</span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF">df</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">showtoolbar</span><span style="color: #81A1C1">=True</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">showstatusbar</span><span style="color: #81A1C1">=True</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">table</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">show</span><span style="color: #ECEFF4">()</span></span></code></pre></div>



<p><strong>Tip:</strong> Don&#8217;t ever put the root window as the PandasTable object&#8217;s parent (first parameter). You must use a container type object, such as a frame as the parent. </p>



<p>Complete the script with the Tkinter main loop.</p>



<div class="wp-block-kevinbatdorf-code-block-pro" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:block;padding:16px 0 0 16px;margin-bottom:-1px;width:100%;text-align:left;background-color:#2e3440ff"><svg xmlns="http://www.w3.org/2000/svg" width="54" height="14" viewBox="0 0 54 14"><g fill="none" fill-rule="evenodd" transform="translate(1 1)"><circle cx="6" cy="6" r="6" fill="#FF5F56" stroke="#E0443E" stroke-width=".5"></circle><circle cx="26" cy="6" r="6" fill="#FFBD2E" stroke="#DEA123" stroke-width=".5"></circle><circle cx="46" cy="6" r="6" fill="#27C93F" stroke="#1AAB29" stroke-width=".5"></circle></g></svg></span><span role="button" tabindex="0" data-code="if __name__ == &quot;__main__&quot;:
    root = tk.Tk()
    app = PandasTableApp(root)
    root.mainloop()" style="color:#d8dee9ff;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path></svg></span><pre class="shiki nord" style="background-color: #2e3440ff" tabindex="0"><code><span class="line"><span style="color: #81A1C1">if</span><span style="color: #D8DEE9FF"> __name__ </span><span style="color: #81A1C1">==</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">__main__</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">:</span></span>
<span class="line"><span style="color: #D8DEE9FF">    root </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> tk</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">Tk</span><span style="color: #ECEFF4">()</span></span>
<span class="line"><span style="color: #D8DEE9FF">    app </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">PandasTableApp</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9FF">root</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">    root</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">mainloop</span><span style="color: #ECEFF4">()</span></span></code></pre></div>



<p>This gives us the following output:</p>


<div class="wp-block-image">
<figure class="aligncenter size-full is-resized"><img fetchpriority="high" decoding="async" width="736" height="639" src="https://coderslegacy.com/wp-content/uploads/2023/12/image-4.png" alt="Exploring Data Tables in Tkinter with PandasTable" class="wp-image-15375" style="width:480px" srcset="https://coderslegacy.com/wp-content/uploads/2023/12/image-4.png 736w, https://coderslegacy.com/wp-content/uploads/2023/12/image-4-300x260.png 300w" sizes="(max-width: 736px) 100vw, 736px" /></figure></div>


<p>You can see the Toolbar on the right which comes with a whole bunch of cool features, such as saving the table and loading it. Various mutations you can apply, deleting rows, adding rows, zoom features, even some advanced plotting features, you name it!</p>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<hr>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<h2 class="wp-block-heading">Modifying the PandasTable directly</h2>



<p>Most the functions are fairly intuitive, so there is little need to explain how to use them. Instead, there is another important aspect we will focus on explaining.</p>



<p>As a programmer, you need to know how to modify this table internally (through code). In the previous example, we initialized the table with a dataframe, but what if we want to make modifications (e.g. load another dataframe, or add a new record).</p>



<p>To do so, you can access the dataframe using the <code>table.model.df</code> attributes. The following code defines a function which modifies the table by adding a new row:</p>



<div class="wp-block-kevinbatdorf-code-block-pro" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:block;padding:16px 0 0 16px;margin-bottom:-1px;width:100%;text-align:left;background-color:#2e3440ff"><svg xmlns="http://www.w3.org/2000/svg" width="54" height="14" viewBox="0 0 54 14"><g fill="none" fill-rule="evenodd" transform="translate(1 1)"><circle cx="6" cy="6" r="6" fill="#FF5F56" stroke="#E0443E" stroke-width=".5"></circle><circle cx="26" cy="6" r="6" fill="#FFBD2E" stroke="#DEA123" stroke-width=".5"></circle><circle cx="46" cy="6" r="6" fill="#27C93F" stroke="#1AAB29" stroke-width=".5"></circle></g></svg></span><span role="button" tabindex="0" data-code="import tkinter as tk
from pandastable import Table, TableModel
import pandas as pd

class PandasTableApp:
    def __init__(self, root):
        self.frame = tk.Frame(root)
        self.frame.pack(padx=10, pady=10)

        # Create a sample DataFrame
        data = {'Name': ['John', 'Alice', 'Bob'],
                'Age': [28, 24, 22],
                'City': ['New York', 'San Francisco', 'Los Angeles']}
        self.df = pd.DataFrame(data)

        # Create a PandasTable
        self.table = Table(self.frame, dataframe=self.df, showtoolbar=True, showstatusbar=True)
        self.table.show()

        self.modify_table()

    def modify_table(self):
        new_row = {'Name': 'Eve', 'Age': 25, 'City': 'Paris'}
        self.df = self.df._append(new_row, ignore_index=True)
        self.table.model.df = self.df
        self.table.redraw()

if __name__ == &quot;__main__&quot;:
    root = tk.Tk()
    app = PandasTableApp(root)
    root.mainloop()" style="color:#d8dee9ff;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path></svg></span><pre class="shiki nord" style="background-color: #2e3440ff" tabindex="0"><code><span class="line"><span style="color: #81A1C1">import</span><span style="color: #D8DEE9FF"> tkinter </span><span style="color: #81A1C1">as</span><span style="color: #D8DEE9FF"> tk</span></span>
<span class="line"><span style="color: #81A1C1">from</span><span style="color: #D8DEE9FF"> pandastable </span><span style="color: #81A1C1">import</span><span style="color: #D8DEE9FF"> Table</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> TableModel</span></span>
<span class="line"><span style="color: #81A1C1">import</span><span style="color: #D8DEE9FF"> pandas </span><span style="color: #81A1C1">as</span><span style="color: #D8DEE9FF"> pd</span></span>
<span class="line"></span>
<span class="line"><span style="color: #81A1C1">class</span><span style="color: #D8DEE9FF"> </span><span style="color: #8FBCBB">PandasTableApp</span><span style="color: #ECEFF4">:</span></span>
<span class="line"><span style="color: #D8DEE9FF">    </span><span style="color: #81A1C1">def</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">__init__</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">root</span><span style="color: #ECEFF4">):</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">frame </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> tk</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">Frame</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9FF">root</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">frame</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">pack</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9">padx</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">10</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">pady</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">10</span><span style="color: #ECEFF4">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #616E88"># Create a sample DataFrame</span></span>
<span class="line"><span style="color: #D8DEE9FF">        data </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">{</span><span style="color: #ECEFF4">&#39;</span><span style="color: #A3BE8C">Name</span><span style="color: #ECEFF4">&#39;</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">[</span><span style="color: #ECEFF4">&#39;</span><span style="color: #A3BE8C">John</span><span style="color: #ECEFF4">&#39;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&#39;</span><span style="color: #A3BE8C">Alice</span><span style="color: #ECEFF4">&#39;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&#39;</span><span style="color: #A3BE8C">Bob</span><span style="color: #ECEFF4">&#39;</span><span style="color: #ECEFF4">],</span></span>
<span class="line"><span style="color: #D8DEE9FF">                </span><span style="color: #ECEFF4">&#39;</span><span style="color: #A3BE8C">Age</span><span style="color: #ECEFF4">&#39;</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">[</span><span style="color: #B48EAD">28</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">24</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">22</span><span style="color: #ECEFF4">],</span></span>
<span class="line"><span style="color: #D8DEE9FF">                </span><span style="color: #ECEFF4">&#39;</span><span style="color: #A3BE8C">City</span><span style="color: #ECEFF4">&#39;</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">[</span><span style="color: #ECEFF4">&#39;</span><span style="color: #A3BE8C">New York</span><span style="color: #ECEFF4">&#39;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&#39;</span><span style="color: #A3BE8C">San Francisco</span><span style="color: #ECEFF4">&#39;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&#39;</span><span style="color: #A3BE8C">Los Angeles</span><span style="color: #ECEFF4">&#39;</span><span style="color: #ECEFF4">]}</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">df </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> pd</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">DataFrame</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9FF">data</span><span style="color: #ECEFF4">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #616E88"># Create a PandasTable</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">table </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">Table</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">frame</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">dataframe</span><span style="color: #81A1C1">=self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">df</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">showtoolbar</span><span style="color: #81A1C1">=True</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">showstatusbar</span><span style="color: #81A1C1">=True</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">table</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">show</span><span style="color: #ECEFF4">()</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">modify_table</span><span style="color: #ECEFF4">()</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D8DEE9FF">    </span><span style="color: #81A1C1">def</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">modify_table</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">):</span></span>
<span class="line"><span style="color: #D8DEE9FF">        new_row </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">{</span><span style="color: #ECEFF4">&#39;</span><span style="color: #A3BE8C">Name</span><span style="color: #ECEFF4">&#39;</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&#39;</span><span style="color: #A3BE8C">Eve</span><span style="color: #ECEFF4">&#39;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&#39;</span><span style="color: #A3BE8C">Age</span><span style="color: #ECEFF4">&#39;</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">25</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&#39;</span><span style="color: #A3BE8C">City</span><span style="color: #ECEFF4">&#39;</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&#39;</span><span style="color: #A3BE8C">Paris</span><span style="color: #ECEFF4">&#39;</span><span style="color: #ECEFF4">}</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">df </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">df</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">_append</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9FF">new_row</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">ignore_index</span><span style="color: #81A1C1">=True</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">table</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">model</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">df </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">df</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">table</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">redraw</span><span style="color: #ECEFF4">()</span></span>
<span class="line"></span>
<span class="line"><span style="color: #81A1C1">if</span><span style="color: #D8DEE9FF"> __name__ </span><span style="color: #81A1C1">==</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">__main__</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">:</span></span>
<span class="line"><span style="color: #D8DEE9FF">    root </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> tk</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">Tk</span><span style="color: #ECEFF4">()</span></span>
<span class="line"><span style="color: #D8DEE9FF">    app </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">PandasTableApp</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9FF">root</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">    root</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">mainloop</span><span style="color: #ECEFF4">()</span></span></code></pre></div>



<p>Note that we used the <code>redraw</code> function after making the changes. This function is required for the changes to visually update. </p>



<p>As you can see, our new row has been added:</p>


<div class="wp-block-image">
<figure class="aligncenter size-full is-resized"><img decoding="async" width="735" height="641" src="https://coderslegacy.com/wp-content/uploads/2023/12/image-5.png" alt="Exploring Data Tables in Tkinter with PandasTable" class="wp-image-15376" style="width:480px" srcset="https://coderslegacy.com/wp-content/uploads/2023/12/image-5.png 735w, https://coderslegacy.com/wp-content/uploads/2023/12/image-5-300x262.png 300w" sizes="(max-width: 735px) 100vw, 735px" /></figure></div>


<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<hr>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<p>This marks the end of the Tkinter with PandasTable tutorial. Any suggestions or contributions for CodersLegacy are more than welcome. Questions regarding the tutorial content can be asked in the comments section below.</p>
<p>The post <a href="https://coderslegacy.com/exploring-data-tables-in-tkinter-with-pandastable/">Exploring Data Tables in Tkinter with PandasTable</a> appeared first on <a href="https://coderslegacy.com">CodersLegacy</a>.</p>]]></description>
                <pubDate>Mon, 04 Mar 2024 22:18:08 +0200</pubDate>
                <guid isPermaLink="false">https://api.follow.it/track-rss-story-click/v3/Pni2oPawGk3OJLUljys5GXKSkciKEY1s</guid>
            </item>
                    <item>
                <title><![CDATA[Creating a Login Form with PyQt6]]></title>
                <link>https://api.follow.it/track-rss-story-click/v3/Pni2oPawGk3bKNCpo_hEFcfGo0LrnZNO</link>
                <description><![CDATA[<img src="https://api.follow.it/track-rss-story-loaded/v1/H0jHQS4f9aOsx5i2u1H00OT5HJgy6HUf" border=0 width="1" height="1" alt="Creating a Login Form with PyQt6" title="Creating a Login Form with PyQt6"> <p>In this tutorial, we&#8217;ll walk through the process of creating a simple login form using PyQt6, a set of Python bindings for Qt, a powerful GUI toolkit. We&#8217;ll create a window with a title, username and password fields, and buttons for registration and login. Additionally, we&#8217;ll implement a basic login functionality to check if the provided credentials are valid.</p>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<hr>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<h3 class="wp-block-heading">Prerequisites:</h3>



<p>Make sure you have PyQt6 installed. If not, you can install it using:</p>



<pre class="wp-block-code has-d-8-dee-9-ff-color has-text-color has-875-rem-font-size"><code>pip install PyQt6</code></pre>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<hr>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<h3 class="wp-block-heading">Step 1: Import required Libraries and widgets</h3>



<div class="wp-block-kevinbatdorf-code-block-pro" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:block;padding:16px 0 0 16px;margin-bottom:-1px;width:100%;text-align:left;background-color:#2e3440ff"><svg xmlns="http://www.w3.org/2000/svg" width="54" height="14" viewBox="0 0 54 14"><g fill="none" fill-rule="evenodd" transform="translate(1 1)"><circle cx="6" cy="6" r="6" fill="#FF5F56" stroke="#E0443E" stroke-width=".5"></circle><circle cx="26" cy="6" r="6" fill="#FFBD2E" stroke="#DEA123" stroke-width=".5"></circle><circle cx="46" cy="6" r="6" fill="#27C93F" stroke="#1AAB29" stroke-width=".5"></circle></g></svg></span><span role="button" tabindex="0" data-code="import sys
from PyQt6.QtCore import Qt
from PyQt6.QtWidgets import QWidget, QPushButton, QApplication, QGridLayout, QLabel, QLineEdit" style="color:#d8dee9ff;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path></svg></span><pre class="shiki nord" style="background-color: #2e3440ff" tabindex="0"><code><span class="line"><span style="color: #81A1C1">import</span><span style="color: #D8DEE9FF"> sys</span></span>
<span class="line"><span style="color: #81A1C1">from</span><span style="color: #D8DEE9FF"> PyQt6</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">QtCore </span><span style="color: #81A1C1">import</span><span style="color: #D8DEE9FF"> Qt</span></span>
<span class="line"><span style="color: #81A1C1">from</span><span style="color: #D8DEE9FF"> PyQt6</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">QtWidgets </span><span style="color: #81A1C1">import</span><span style="color: #D8DEE9FF"> QWidget</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> QPushButton</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> QApplication</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> QGridLayout</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> QLabel</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> QLineEdit</span></span></code></pre></div>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<hr>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<h3 class="wp-block-heading">Step 2: Set up the Basic UI</h3>



<p>Create a class named <code>Window</code> that inherits from <code>QWidget</code>. Set up the basic UI elements like labels, input fields, and buttons.</p>



<div class="wp-block-kevinbatdorf-code-block-pro" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:block;padding:16px 0 0 16px;margin-bottom:-1px;width:100%;text-align:left;background-color:#2e3440ff"><svg xmlns="http://www.w3.org/2000/svg" width="54" height="14" viewBox="0 0 54 14"><g fill="none" fill-rule="evenodd" transform="translate(1 1)"><circle cx="6" cy="6" r="6" fill="#FF5F56" stroke="#E0443E" stroke-width=".5"></circle><circle cx="26" cy="6" r="6" fill="#FFBD2E" stroke="#DEA123" stroke-width=".5"></circle><circle cx="46" cy="6" r="6" fill="#27C93F" stroke="#1AAB29" stroke-width=".5"></circle></g></svg></span><span role="button" tabindex="0" data-code="class Window(QWidget):
    def __init__(self):
        super().__init__()
        layout = QGridLayout()
        layout.setContentsMargins(20, 20, 20, 20)
        layout.setSpacing(10)
        self.setWindowTitle(&quot;CodersLegacy&quot;)
        self.setLayout(layout)

        # Title Label
        title = QLabel(&quot;Login Form with PyQt6&quot;)
        title.setProperty(&quot;class&quot;, &quot;heading&quot;)
        layout.addWidget(title, 0, 0, 1, 3, Qt.AlignmentFlag.AlignCenter)

        # Username Label and Input
        user = QLabel(&quot;Username:&quot;)
        user.setProperty(&quot;class&quot;, &quot;normal&quot;)
        layout.addWidget(user, 1, 0)
        self.input1 = QLineEdit()
        layout.addWidget(self.input1, 1, 1, 1, 2)

        # Password Label and Input
        pwd = QLabel(&quot;Password&quot;)
        pwd.setProperty(&quot;class&quot;, &quot;normal&quot;)
        layout.addWidget(pwd, 2, 0)
        self.input2 = QLineEdit()
        self.input2.setEchoMode(QLineEdit.EchoMode.Password)
        layout.addWidget(self.input2, 2, 1, 1, 2)

        # Register and Login Buttons
        button1 = QPushButton(&quot;Register&quot;)
        layout.addWidget(button1, 4, 1)

        button2 = QPushButton(&quot;Login&quot;)
        button2.clicked.connect(self.login)
        layout.addWidget(button2, 4, 2)" style="color:#d8dee9ff;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path></svg></span><pre class="shiki nord" style="background-color: #2e3440ff" tabindex="0"><code><span class="line"><span style="color: #81A1C1">class</span><span style="color: #D8DEE9FF"> </span><span style="color: #8FBCBB">Window</span><span style="color: #ECEFF4">(</span><span style="color: #8FBCBB; font-weight: bold">QWidget</span><span style="color: #ECEFF4">):</span></span>
<span class="line"><span style="color: #D8DEE9FF">    </span><span style="color: #81A1C1">def</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">__init__</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">):</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #88C0D0">super</span><span style="color: #ECEFF4">().</span><span style="color: #88C0D0">__init__</span><span style="color: #ECEFF4">()</span></span>
<span class="line"><span style="color: #D8DEE9FF">        layout </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">QGridLayout</span><span style="color: #ECEFF4">()</span></span>
<span class="line"><span style="color: #D8DEE9FF">        layout</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">setContentsMargins</span><span style="color: #ECEFF4">(</span><span style="color: #B48EAD">20</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">20</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">20</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">20</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">        layout</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">setSpacing</span><span style="color: #ECEFF4">(</span><span style="color: #B48EAD">10</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">setWindowTitle</span><span style="color: #ECEFF4">(</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">CodersLegacy</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">setLayout</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9FF">layout</span><span style="color: #ECEFF4">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #616E88"># Title Label</span></span>
<span class="line"><span style="color: #D8DEE9FF">        title </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">QLabel</span><span style="color: #ECEFF4">(</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Login Form with PyQt6</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">        title</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">setProperty</span><span style="color: #ECEFF4">(</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">class</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">heading</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">        layout</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">addWidget</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9FF">title</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">0</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">0</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">1</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">3</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> Qt</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">AlignmentFlag</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">AlignCenter</span><span style="color: #ECEFF4">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #616E88"># Username Label and Input</span></span>
<span class="line"><span style="color: #D8DEE9FF">        user </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">QLabel</span><span style="color: #ECEFF4">(</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Username:</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">        user</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">setProperty</span><span style="color: #ECEFF4">(</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">class</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">normal</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">        layout</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">addWidget</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9FF">user</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">1</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">0</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">input1 </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">QLineEdit</span><span style="color: #ECEFF4">()</span></span>
<span class="line"><span style="color: #D8DEE9FF">        layout</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">addWidget</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">input1</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">1</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">1</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">1</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">2</span><span style="color: #ECEFF4">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #616E88"># Password Label and Input</span></span>
<span class="line"><span style="color: #D8DEE9FF">        pwd </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">QLabel</span><span style="color: #ECEFF4">(</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Password</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">        pwd</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">setProperty</span><span style="color: #ECEFF4">(</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">class</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">normal</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">        layout</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">addWidget</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9FF">pwd</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">2</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">0</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">input2 </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">QLineEdit</span><span style="color: #ECEFF4">()</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">input2</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">setEchoMode</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9FF">QLineEdit</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">EchoMode</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">Password</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">        layout</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">addWidget</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">input2</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">2</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">1</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">1</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">2</span><span style="color: #ECEFF4">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #616E88"># Register and Login Buttons</span></span>
<span class="line"><span style="color: #D8DEE9FF">        button1 </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">QPushButton</span><span style="color: #ECEFF4">(</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Register</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">        layout</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">addWidget</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9FF">button1</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">4</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">1</span><span style="color: #ECEFF4">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D8DEE9FF">        button2 </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">QPushButton</span><span style="color: #ECEFF4">(</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Login</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">        button2</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">clicked</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">connect</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">login</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">        layout</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">addWidget</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9FF">button2</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">4</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">2</span><span style="color: #ECEFF4">)</span></span></code></pre></div>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<hr>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<h3 class="wp-block-heading">Step 3: Add functionality </h3>



<p>Add the following method to the window class to enable login validation. Currently the validation check is hardcoded, but ideally you can connect this to a database like SQLite3.</p>



<div class="wp-block-kevinbatdorf-code-block-pro" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:block;padding:16px 0 0 16px;margin-bottom:-1px;width:100%;text-align:left;background-color:#2e3440ff"><svg xmlns="http://www.w3.org/2000/svg" width="54" height="14" viewBox="0 0 54 14"><g fill="none" fill-rule="evenodd" transform="translate(1 1)"><circle cx="6" cy="6" r="6" fill="#FF5F56" stroke="#E0443E" stroke-width=".5"></circle><circle cx="26" cy="6" r="6" fill="#FFBD2E" stroke="#DEA123" stroke-width=".5"></circle><circle cx="46" cy="6" r="6" fill="#27C93F" stroke="#1AAB29" stroke-width=".5"></circle></g></svg></span><span role="button" tabindex="0" data-code="    def login(self):
        if self.input1.text() == &quot;CodersLegacy&quot; and self.input2.text() == &quot;12345678&quot;:
            print(&quot;Username and password are correct&quot;)
        else:
            print(&quot;Invalid&quot;)" style="color:#d8dee9ff;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path></svg></span><pre class="shiki nord" style="background-color: #2e3440ff" tabindex="0"><code><span class="line"><span style="color: #D8DEE9FF">    </span><span style="color: #81A1C1">def</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">login</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">):</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">if</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">input1</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">text</span><span style="color: #ECEFF4">()</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">==</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">CodersLegacy</span><span style="color: #ECEFF4">&quot;</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">and</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">input2</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">text</span><span style="color: #ECEFF4">()</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">==</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">12345678</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">:</span></span>
<span class="line"><span style="color: #D8DEE9FF">            </span><span style="color: #88C0D0">print</span><span style="color: #ECEFF4">(</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Username and password are correct</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">else</span><span style="color: #ECEFF4">:</span></span>
<span class="line"><span style="color: #D8DEE9FF">            </span><span style="color: #88C0D0">print</span><span style="color: #ECEFF4">(</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Invalid</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">)</span></span></code></pre></div>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<hr>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<h3 class="wp-block-heading">Step 4: Styling with CSS (Optional)</h3>



<p>You can enhance the visual appearance of the login form by adding custom styles using CSS. Create a file named <code>style.qss</code> with the following content:</p>



<div class="wp-block-kevinbatdorf-code-block-pro" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:block;padding:16px 0 0 16px;margin-bottom:-1px;width:100%;text-align:left;background-color:#2e3440ff"><svg xmlns="http://www.w3.org/2000/svg" width="54" height="14" viewBox="0 0 54 14"><g fill="none" fill-rule="evenodd" transform="translate(1 1)"><circle cx="6" cy="6" r="6" fill="#FF5F56" stroke="#E0443E" stroke-width=".5"></circle><circle cx="26" cy="6" r="6" fill="#FFBD2E" stroke="#DEA123" stroke-width=".5"></circle><circle cx="46" cy="6" r="6" fill="#27C93F" stroke="#1AAB29" stroke-width=".5"></circle></g></svg></span><span role="button" tabindex="0" data-code="/* style.qss */


QWidget {
    background-color: #333333;
    color: #ffffff;
    border: none;
}

QPushButton {
    background-color: #4d4d4d;
    border: 1px solid #4d4d4d;
    border-radius: 4px;
    color: #ffffff;
    padding: 5px;
}

QPushButton:hover {
    background-color: #5a5a5a;
    border: 1px solid #5a5a5a;
}

QCheckBox {
    color: #ffffff;
}

QLineEdit {
    background-color: #4d4d4d;
    border: 1px solid #4d4d4d;
    color: #ffffff;
    padding: 5px;
}" style="color:#d8dee9ff;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path></svg></span><pre class="shiki nord" style="background-color: #2e3440ff" tabindex="0"><code><span class="line"><span style="color: #81A1C1">/*</span><span style="color: #D8DEE9FF"> style</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">qss </span><span style="color: #81A1C1">*/</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color: #D8DEE9FF">QWidget </span><span style="color: #ECEFF4">{</span></span>
<span class="line"><span style="color: #D8DEE9FF">    background</span><span style="color: #81A1C1">-</span><span style="color: #D8DEE9FF">color</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #616E88">#333333;</span></span>
<span class="line"><span style="color: #D8DEE9FF">    color</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #616E88">#ffffff;</span></span>
<span class="line"><span style="color: #D8DEE9FF">    border</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> none;</span></span>
<span class="line"><span style="color: #ECEFF4">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D8DEE9FF">QPushButton </span><span style="color: #ECEFF4">{</span></span>
<span class="line"><span style="color: #D8DEE9FF">    background</span><span style="color: #81A1C1">-</span><span style="color: #D8DEE9FF">color</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #616E88">#4d4d4d;</span></span>
<span class="line"><span style="color: #D8DEE9FF">    border</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">1px</span><span style="color: #D8DEE9FF"> solid </span><span style="color: #616E88">#4d4d4d;</span></span>
<span class="line"><span style="color: #D8DEE9FF">    border</span><span style="color: #81A1C1">-</span><span style="color: #D8DEE9FF">radius</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">4px</span><span style="color: #D8DEE9FF">;</span></span>
<span class="line"><span style="color: #D8DEE9FF">    color</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #616E88">#ffffff;</span></span>
<span class="line"><span style="color: #D8DEE9FF">    padding</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">5px</span><span style="color: #D8DEE9FF">;</span></span>
<span class="line"><span style="color: #ECEFF4">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D8DEE9FF">QPushButton</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF">hover </span><span style="color: #ECEFF4">{</span></span>
<span class="line"><span style="color: #D8DEE9FF">    background</span><span style="color: #81A1C1">-</span><span style="color: #D8DEE9FF">color</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #616E88">#5a5a5a;</span></span>
<span class="line"><span style="color: #D8DEE9FF">    border</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">1px</span><span style="color: #D8DEE9FF"> solid </span><span style="color: #616E88">#5a5a5a;</span></span>
<span class="line"><span style="color: #ECEFF4">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D8DEE9FF">QCheckBox </span><span style="color: #ECEFF4">{</span></span>
<span class="line"><span style="color: #D8DEE9FF">    color</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #616E88">#ffffff;</span></span>
<span class="line"><span style="color: #ECEFF4">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D8DEE9FF">QLineEdit </span><span style="color: #ECEFF4">{</span></span>
<span class="line"><span style="color: #D8DEE9FF">    background</span><span style="color: #81A1C1">-</span><span style="color: #D8DEE9FF">color</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #616E88">#4d4d4d;</span></span>
<span class="line"><span style="color: #D8DEE9FF">    border</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">1px</span><span style="color: #D8DEE9FF"> solid </span><span style="color: #616E88">#4d4d4d;</span></span>
<span class="line"><span style="color: #D8DEE9FF">    color</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #616E88">#ffffff;</span></span>
<span class="line"><span style="color: #D8DEE9FF">    padding</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">5px</span><span style="color: #D8DEE9FF">;</span></span>
<span class="line"><span style="color: #ECEFF4">}</span></span></code></pre></div>



<p>In the <code>Window</code> class, load the style sheet by adding the following lines in the constructor (init method):</p>



<div class="wp-block-kevinbatdorf-code-block-pro" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:block;padding:16px 0 0 16px;margin-bottom:-1px;width:100%;text-align:left;background-color:#2e3440ff"><svg xmlns="http://www.w3.org/2000/svg" width="54" height="14" viewBox="0 0 54 14"><g fill="none" fill-rule="evenodd" transform="translate(1 1)"><circle cx="6" cy="6" r="6" fill="#FF5F56" stroke="#E0443E" stroke-width=".5"></circle><circle cx="26" cy="6" r="6" fill="#FFBD2E" stroke="#DEA123" stroke-width=".5"></circle><circle cx="46" cy="6" r="6" fill="#27C93F" stroke="#1AAB29" stroke-width=".5"></circle></g></svg></span><span role="button" tabindex="0" data-code="self.setStyleSheet(open(&quot;style.qss&quot;, &quot;r&quot;).read())" style="color:#d8dee9ff;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path></svg></span><pre class="shiki nord" style="background-color: #2e3440ff" tabindex="0"><code><span class="line"><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">setStyleSheet</span><span style="color: #ECEFF4">(</span><span style="color: #88C0D0">open</span><span style="color: #ECEFF4">(</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">style.qss</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">r</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">).</span><span style="color: #88C0D0">read</span><span style="color: #ECEFF4">())</span></span></code></pre></div>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<hr>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<h3 class="wp-block-heading">Step 5: Run the Application</h3>



<p>Create an instance of the <code>QApplication</code> class, instantiate the <code>Window</code> class, show the window, and start the application loop.</p>



<div class="wp-block-kevinbatdorf-code-block-pro" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:block;padding:16px 0 0 16px;margin-bottom:-1px;width:100%;text-align:left;background-color:#2e3440ff"><svg xmlns="http://www.w3.org/2000/svg" width="54" height="14" viewBox="0 0 54 14"><g fill="none" fill-rule="evenodd" transform="translate(1 1)"><circle cx="6" cy="6" r="6" fill="#FF5F56" stroke="#E0443E" stroke-width=".5"></circle><circle cx="26" cy="6" r="6" fill="#FFBD2E" stroke="#DEA123" stroke-width=".5"></circle><circle cx="46" cy="6" r="6" fill="#27C93F" stroke="#1AAB29" stroke-width=".5"></circle></g></svg></span><span role="button" tabindex="0" data-code="app = QApplication(sys.argv)
window = Window()
window.show()
sys.exit(app.exec())" style="color:#d8dee9ff;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path></svg></span><pre class="shiki nord" style="background-color: #2e3440ff" tabindex="0"><code><span class="line"><span style="color: #D8DEE9FF">app </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">QApplication</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9FF">sys</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">argv</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">window </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">Window</span><span style="color: #ECEFF4">()</span></span>
<span class="line"><span style="color: #D8DEE9FF">window</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">show</span><span style="color: #ECEFF4">()</span></span>
<span class="line"><span style="color: #D8DEE9FF">sys</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">exit</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9FF">app</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">exec</span><span style="color: #ECEFF4">())</span></span></code></pre></div>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<hr>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<h2 class="wp-block-heading">Video Link</h2>



<p>For those looking for an in-depth and more hands of experience on how the following code was developed (plus some other interesting tidbits) check out the video version of this tutorial. </p>



<figure class="wp-block-embed is-type-video is-provider-youtube wp-block-embed-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio"><div class="wp-block-embed__wrapper">
<iframe title="PyQt6 Project #1 - Creating a Login Form" width="1050" height="591" src="https://www.youtube.com/embed/u-bjfq38ZzI?feature=oembed" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>
</div></figure>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<hr>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<p>This marks the end of the &#8220;Create a Login Form with PyQt6&#8221; Tutorial. Any suggestions or contributions for CodersLegacy are more than welcome. Questions regarding the tutorial content can be asked in the comments section below.</p>
<p>The post <a href="https://coderslegacy.com/creating-a-login-form-with-pyqt6/">Creating a Login Form with PyQt6</a> appeared first on <a href="https://coderslegacy.com">CodersLegacy</a>.</p>]]></description>
                <pubDate>Fri, 19 Jan 2024 14:59:20 +0200</pubDate>
                <guid isPermaLink="false">https://api.follow.it/track-rss-story-click/v3/Pni2oPawGk3bKNCpo_hEFcfGo0LrnZNO</guid>
            </item>
                    <item>
                <title><![CDATA[JavaScript SQLite3 Tutorial for Beginners (Node.js)]]></title>
                <link>https://api.follow.it/track-rss-story-click/v3/Pni2oPawGk0xq_KCLhCg_0oy9CZgXDJO</link>
                <description><![CDATA[<img src="https://api.follow.it/track-rss-story-loaded/v1/t8_Y3LhXtgKPDnk9o8ldOeT5HJgy6HUf" border=0 width="1" height="1" alt="JavaScript SQLite3 Tutorial for Beginners (Node.js)" title="JavaScript SQLite3 Tutorial for Beginners (Node.js)"> <p>In this tutorial we will explore how to set up, install and use the SQLite3 Database in JavaScript. </p>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<hr>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<h2 class="wp-block-heading">What is SQLite?</h2>



<p>SQLite is a lightweight, serverless, and embedded relational database management system (RDBMS) that is widely used, especially in applications with moderate data storage needs. </p>



<p>SQLite offers several benefits that make it a popular choice for many use cases:</p>



<ol>
<li><strong>Lightweight and Embedded:</strong>
<ul>
<li>SQLite is a self-contained, serverless, and zero-configuration database engine. It is lightweight and can be embedded directly into applications, requiring minimal setup.</li>
</ul>
</li>



<li><strong>Zero Configuration:</strong>
<ul>
<li>No separate server process or setup is needed. Applications can connect to an SQLite database by simply opening a file, making it easy to deploy and manage.</li>
</ul>
</li>



<li><strong>Cross-Platform Compatibility:</strong>
<ul>
<li>SQLite is cross-platform and can run on various operating systems without modification. This makes it suitable for applications that need to work seamlessly across different platforms.</li>
</ul>
</li>



<li><strong>Low Resource Consumption:</strong>
<ul>
<li>SQLite has low memory and disk space requirements. This is beneficial for resource-constrained environments, such as mobile devices or embedded systems.</li>
</ul>
</li>



<li><strong>Ease of Use:</strong>
<ul>
<li>SQLite is known for its simplicity and ease of use. It uses a straightforward SQL syntax, making it accessible to developers who may not have extensive database administration experience.</li>
</ul>
</li>
</ol>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<hr>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<h2 class="wp-block-heading">Pre-requisites </h2>



<p>There are two pre-requisites to using SQLite in JavaScript:</p>



<ul>
<li>You need to have Node.js installed on your system. You can check whether you have node by using the <code>node -v</code> command in the terminal. If you don&#8217;t have node, visit the official website, download the installer, and execute it. </li>



<li>The SQLite library which can be installed using Node.js. This library installs both the SQLite software, and the node library required to interface with SQLite. </li>
</ul>



<p>To install the SQLite software, run the following command in the terminal:</p>



<div class="wp-block-kevinbatdorf-code-block-pro" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:block;padding:16px 0 0 16px;margin-bottom:-1px;width:100%;text-align:left;background-color:#2e3440ff"><svg xmlns="http://www.w3.org/2000/svg" width="54" height="14" viewBox="0 0 54 14"><g fill="none" fill-rule="evenodd" transform="translate(1 1)"><circle cx="6" cy="6" r="6" fill="#FF5F56" stroke="#E0443E" stroke-width=".5"></circle><circle cx="26" cy="6" r="6" fill="#FFBD2E" stroke="#DEA123" stroke-width=".5"></circle><circle cx="46" cy="6" r="6" fill="#27C93F" stroke="#1AAB29" stroke-width=".5"></circle></g></svg></span><span role="button" tabindex="0" data-code="npm install sqlite3" style="color:#d8dee9ff;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path></svg></span><pre class="shiki nord" style="background-color: #2e3440ff" tabindex="0"><code><span class="line"><span style="color: #88C0D0">npm</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">install</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">sqlite3</span></span></code></pre></div>



<p>This will add the sqlite3 library to your node modules, and make it available for use within your project. </p>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<hr>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<h2 class="wp-block-heading">Setting up a Database in SQLite3</h2>



<p>The first thing to do is setup an SQLite connection. </p>



<div class="wp-block-kevinbatdorf-code-block-pro" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:block;padding:16px 0 0 16px;margin-bottom:-1px;width:100%;text-align:left;background-color:#2e3440ff"><svg xmlns="http://www.w3.org/2000/svg" width="54" height="14" viewBox="0 0 54 14"><g fill="none" fill-rule="evenodd" transform="translate(1 1)"><circle cx="6" cy="6" r="6" fill="#FF5F56" stroke="#E0443E" stroke-width=".5"></circle><circle cx="26" cy="6" r="6" fill="#FFBD2E" stroke="#DEA123" stroke-width=".5"></circle><circle cx="46" cy="6" r="6" fill="#27C93F" stroke="#1AAB29" stroke-width=".5"></circle></g></svg></span><span role="button" tabindex="0" data-code="const sqlite3 = require('sqlite3').verbose();" style="color:#d8dee9ff;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path></svg></span><pre class="shiki nord" style="background-color: #2e3440ff" tabindex="0"><code><span class="line"><span style="color: #81A1C1">const</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">sqlite3</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">require</span><span style="color: #D8DEE9FF">(</span><span style="color: #ECEFF4">&#39;</span><span style="color: #A3BE8C">sqlite3</span><span style="color: #ECEFF4">&#39;</span><span style="color: #D8DEE9FF">)</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">verbose</span><span style="color: #D8DEE9FF">()</span><span style="color: #81A1C1">;</span></span></code></pre></div>



<p>The <code>verbose()</code> method here is optional. Using this method will create more detailed logs and stack traces (good for debugging).</p>



<div class="wp-block-kevinbatdorf-code-block-pro" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:block;padding:16px 0 0 16px;margin-bottom:-1px;width:100%;text-align:left;background-color:#2e3440ff"><svg xmlns="http://www.w3.org/2000/svg" width="54" height="14" viewBox="0 0 54 14"><g fill="none" fill-rule="evenodd" transform="translate(1 1)"><circle cx="6" cy="6" r="6" fill="#FF5F56" stroke="#E0443E" stroke-width=".5"></circle><circle cx="26" cy="6" r="6" fill="#FFBD2E" stroke="#DEA123" stroke-width=".5"></circle><circle cx="46" cy="6" r="6" fill="#27C93F" stroke="#1AAB29" stroke-width=".5"></circle></g></svg></span><span role="button" tabindex="0" data-code="let db = new sqlite3.Database('./tutorial.db', (err) =&gt; {
  if (err) {
    return console.error(err.message);
  }
  console.log('Connected successfully.');
});" style="color:#d8dee9ff;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path></svg></span><pre class="shiki nord" style="background-color: #2e3440ff" tabindex="0"><code><span class="line"><span style="color: #81A1C1">let</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">db</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">new</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">sqlite3</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">Database</span><span style="color: #D8DEE9FF">(</span><span style="color: #ECEFF4">&#39;</span><span style="color: #A3BE8C">./tutorial.db</span><span style="color: #ECEFF4">&#39;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9">err</span><span style="color: #ECEFF4">)</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">=&gt;</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">{</span></span>
<span class="line"><span style="color: #D8DEE9FF">  </span><span style="color: #81A1C1">if</span><span style="color: #D8DEE9FF"> (</span><span style="color: #D8DEE9">err</span><span style="color: #D8DEE9FF">) </span><span style="color: #ECEFF4">{</span></span>
<span class="line"><span style="color: #D8DEE9FF">    </span><span style="color: #81A1C1">return</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">console</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">error</span><span style="color: #D8DEE9FF">(</span><span style="color: #D8DEE9">err</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9">message</span><span style="color: #D8DEE9FF">)</span><span style="color: #81A1C1">;</span></span>
<span class="line"><span style="color: #D8DEE9FF">  </span><span style="color: #ECEFF4">}</span></span>
<span class="line"><span style="color: #D8DEE9FF">  </span><span style="color: #D8DEE9">console</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">log</span><span style="color: #D8DEE9FF">(</span><span style="color: #ECEFF4">&#39;</span><span style="color: #A3BE8C">Connected successfully.</span><span style="color: #ECEFF4">&#39;</span><span style="color: #D8DEE9FF">)</span><span style="color: #81A1C1">;</span></span>
<span class="line"><span style="color: #ECEFF4">}</span><span style="color: #D8DEE9FF">)</span><span style="color: #81A1C1">;</span></span></code></pre></div>



<p>There is an optional parameter you can pass after the file path, which defines the mode in which the database is opened. There are three modes available to pick from:</p>



<ol>
<li><code>sqlite3.OPEN_READONLY</code>: open the database for read-only.</li>



<li><code>sqlite3.OPEN_READWRITE</code>&nbsp;: open the database for reading and writting.</li>



<li><code>sqlite3.OPEN_CREATE</code>: open the database, if the database does not exist, create a new database.</li>
</ol>



<p>By default, SQLite uses the <code>OPEN_READWRITE | OPEN_CREATE</code> mode (modes can be concatenated using the pipe operator). This default mode means that if the database does not exist, a new database will be created (at the specified file path) and be ready for reading and writing.</p>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<hr>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<h2 class="wp-block-heading">Creating a Table</h2>



<p>Here we create a table called &#8220;users&#8221; which will store some basic information about people, such as their name, email, and age. Each of these pieces of information is represented as a column in the table, and given a suitable datatype. </p>



<div class="wp-block-kevinbatdorf-code-block-pro" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:block;padding:16px 0 0 16px;margin-bottom:-1px;width:100%;text-align:left;background-color:#2e3440ff"><svg xmlns="http://www.w3.org/2000/svg" width="54" height="14" viewBox="0 0 54 14"><g fill="none" fill-rule="evenodd" transform="translate(1 1)"><circle cx="6" cy="6" r="6" fill="#FF5F56" stroke="#E0443E" stroke-width=".5"></circle><circle cx="26" cy="6" r="6" fill="#FFBD2E" stroke="#DEA123" stroke-width=".5"></circle><circle cx="46" cy="6" r="6" fill="#27C93F" stroke="#1AAB29" stroke-width=".5"></circle></g></svg></span><span role="button" tabindex="0" data-code="db.run(`CREATE TABLE IF NOT EXISTS users(
        name text,
        email text, 
        age integer
)`)" style="color:#d8dee9ff;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path></svg></span><pre class="shiki nord" style="background-color: #2e3440ff" tabindex="0"><code><span class="line"><span style="color: #D8DEE9">db</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">run</span><span style="color: #D8DEE9FF">(</span><span style="color: #ECEFF4">`</span><span style="color: #A3BE8C">CREATE TABLE IF NOT EXISTS users(</span></span>
<span class="line"><span style="color: #A3BE8C">        name text,</span></span>
<span class="line"><span style="color: #A3BE8C">        email text, </span></span>
<span class="line"><span style="color: #A3BE8C">        age integer</span></span>
<span class="line"><span style="color: #A3BE8C">)</span><span style="color: #ECEFF4">`</span><span style="color: #D8DEE9FF">)</span></span></code></pre></div>



<p>You can use the back-tick characters to denote a multiline string in JavaScript. You do not have to use a multiline string, but it does look better for the sake of readability, especially when creating large tables. </p>



<p>It is important to note that the <code>db.run()</code> function is asynchronous, and will return immediately, before the query has finished executing. So if a query about table creation is followed by a query selecting data from the table, there is likely to be an error, as the table has not been created when the second query runs. </p>



<p>There are two good ways of handling this. One, we use async functions. Or two, we can use the callbacks provided to us by the <code>run</code> function. </p>



<p><strong>Using async functions:</strong></p>



<div class="wp-block-kevinbatdorf-code-block-pro" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:block;padding:16px 0 0 16px;margin-bottom:-1px;width:100%;text-align:left;background-color:#2e3440ff"><svg xmlns="http://www.w3.org/2000/svg" width="54" height="14" viewBox="0 0 54 14"><g fill="none" fill-rule="evenodd" transform="translate(1 1)"><circle cx="6" cy="6" r="6" fill="#FF5F56" stroke="#E0443E" stroke-width=".5"></circle><circle cx="26" cy="6" r="6" fill="#FFBD2E" stroke="#DEA123" stroke-width=".5"></circle><circle cx="46" cy="6" r="6" fill="#27C93F" stroke="#1AAB29" stroke-width=".5"></circle></g></svg></span><span role="button" tabindex="0" data-code="async function create_table() {
    await db.run(`CREATE TABLE IF NOT EXISTS users(
        name text,
        email text, 
        age integer
    )`)
}

create_table() // Will not proceed to the next line till the function is complete

// Code to execute " style="color:#d8dee9ff;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path></svg></span><pre class="shiki nord" style="background-color: #2e3440ff" tabindex="0"><code><span class="line"><span style="color: #81A1C1">async</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">function</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">create_table</span><span style="color: #ECEFF4">()</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">{</span></span>
<span class="line"><span style="color: #D8DEE9FF">    </span><span style="color: #81A1C1">await</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">db</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">run</span><span style="color: #D8DEE9FF">(</span><span style="color: #ECEFF4">`</span><span style="color: #A3BE8C">CREATE TABLE IF NOT EXISTS users(</span></span>
<span class="line"><span style="color: #A3BE8C">        name text,</span></span>
<span class="line"><span style="color: #A3BE8C">        email text, </span></span>
<span class="line"><span style="color: #A3BE8C">        age integer</span></span>
<span class="line"><span style="color: #A3BE8C">    )</span><span style="color: #ECEFF4">`</span><span style="color: #D8DEE9FF">)</span></span>
<span class="line"><span style="color: #ECEFF4">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #88C0D0">create_table</span><span style="color: #D8DEE9FF">() </span><span style="color: #616E88">// Will not proceed to the next line till the function is complete</span></span>
<span class="line"></span>
<span class="line"><span style="color: #616E88">// Code to execute </span></span></code></pre></div>



<p><strong>Using callbacks:</strong></p>



<div class="wp-block-kevinbatdorf-code-block-pro" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:block;padding:16px 0 0 16px;margin-bottom:-1px;width:100%;text-align:left;background-color:#2e3440ff"><svg xmlns="http://www.w3.org/2000/svg" width="54" height="14" viewBox="0 0 54 14"><g fill="none" fill-rule="evenodd" transform="translate(1 1)"><circle cx="6" cy="6" r="6" fill="#FF5F56" stroke="#E0443E" stroke-width=".5"></circle><circle cx="26" cy="6" r="6" fill="#FFBD2E" stroke="#DEA123" stroke-width=".5"></circle><circle cx="46" cy="6" r="6" fill="#27C93F" stroke="#1AAB29" stroke-width=".5"></circle></g></svg></span><span role="button" tabindex="0" data-code="db.run(`CREATE TABLE IF NOT EXISTS users(
        name text,
        email text, 
        age integer
)`, () =&gt; {
    // Code to execute 
})" style="color:#d8dee9ff;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path></svg></span><pre class="shiki nord" style="background-color: #2e3440ff" tabindex="0"><code><span class="line"><span style="color: #D8DEE9">db</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">run</span><span style="color: #D8DEE9FF">(</span><span style="color: #ECEFF4">`</span><span style="color: #A3BE8C">CREATE TABLE IF NOT EXISTS users(</span></span>
<span class="line"><span style="color: #A3BE8C">        name text,</span></span>
<span class="line"><span style="color: #A3BE8C">        email text, </span></span>
<span class="line"><span style="color: #A3BE8C">        age integer</span></span>
<span class="line"><span style="color: #A3BE8C">)</span><span style="color: #ECEFF4">`</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">()</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">=&gt;</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">{</span></span>
<span class="line"><span style="color: #ECEFF4">    </span><span style="color: #616E88">// Code to execute </span></span>
<span class="line"><span style="color: #ECEFF4">}</span><span style="color: #D8DEE9FF">)</span></span></code></pre></div>



<p>There is also a third option, which is a great choice for certain cases, called <code>sequelize</code> (will be covered later in this tutorial). </p>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<hr>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<h2 class="wp-block-heading">Inserting Data into a Table</h2>



<p>Next, its time to add some data into our table. This can be done using the &#8220;<code>INSERT INTO</code>&#8221; statement. To simplify things, first we will write our query out as a string:</p>



<div class="wp-block-kevinbatdorf-code-block-pro" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:block;padding:16px 0 0 16px;margin-bottom:-1px;width:100%;text-align:left;background-color:#2e3440ff"><svg xmlns="http://www.w3.org/2000/svg" width="54" height="14" viewBox="0 0 54 14"><g fill="none" fill-rule="evenodd" transform="translate(1 1)"><circle cx="6" cy="6" r="6" fill="#FF5F56" stroke="#E0443E" stroke-width=".5"></circle><circle cx="26" cy="6" r="6" fill="#FFBD2E" stroke="#DEA123" stroke-width=".5"></circle><circle cx="46" cy="6" r="6" fill="#27C93F" stroke="#1AAB29" stroke-width=".5"></circle></g></svg></span><span role="button" tabindex="0" data-code="insert_query = &quot;INSERT INTO users(name, email, age) VALUES(?, ?, ?)&quot;" style="color:#d8dee9ff;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path></svg></span><pre class="shiki nord" style="background-color: #2e3440ff" tabindex="0"><code><span class="line"><span style="color: #D8DEE9">insert_query</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">INSERT INTO users(name, email, age) VALUES(?, ?, ?)</span><span style="color: #ECEFF4">&quot;</span></span></code></pre></div>



<p>The format of this query is as follows:</p>



<div class="wp-block-kevinbatdorf-code-block-pro" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:block;padding:16px 0 0 16px;margin-bottom:-1px;width:100%;text-align:left;background-color:#2e3440ff"><svg xmlns="http://www.w3.org/2000/svg" width="54" height="14" viewBox="0 0 54 14"><g fill="none" fill-rule="evenodd" transform="translate(1 1)"><circle cx="6" cy="6" r="6" fill="#FF5F56" stroke="#E0443E" stroke-width=".5"></circle><circle cx="26" cy="6" r="6" fill="#FFBD2E" stroke="#DEA123" stroke-width=".5"></circle><circle cx="46" cy="6" r="6" fill="#27C93F" stroke="#1AAB29" stroke-width=".5"></circle></g></svg></span><span role="button" tabindex="0" data-code="query = &quot;INSERT INTO &lt;table-name&gt;(&lt;col1-name&gt;, &lt;col2-name&gt;, &lt;col3-name&gt;, ...) VALUES(?, ?, ?, ...)&quot;" style="color:#d8dee9ff;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path></svg></span><pre class="shiki nord" style="background-color: #2e3440ff" tabindex="0"><code><span class="line"><span style="color: #D8DEE9">query</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">INSERT INTO &lt;table-name&gt;(&lt;col1-name&gt;, &lt;col2-name&gt;, &lt;col3-name&gt;, ...) VALUES(?, ?, ?, ...)</span><span style="color: #ECEFF4">&quot;</span></span></code></pre></div>



<p>The question marks here are placeholder values, whose purpose is to create a parameterized query, preventing SQL injections. The number of placeholders should be equal to the number of columns mentioned after the name of the table. </p>



<p>We will then defines the values we wish to enter as an array:</p>



<div class="wp-block-kevinbatdorf-code-block-pro" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:block;padding:16px 0 0 16px;margin-bottom:-1px;width:100%;text-align:left;background-color:#2e3440ff"><svg xmlns="http://www.w3.org/2000/svg" width="54" height="14" viewBox="0 0 54 14"><g fill="none" fill-rule="evenodd" transform="translate(1 1)"><circle cx="6" cy="6" r="6" fill="#FF5F56" stroke="#E0443E" stroke-width=".5"></circle><circle cx="26" cy="6" r="6" fill="#FFBD2E" stroke="#DEA123" stroke-width=".5"></circle><circle cx="46" cy="6" r="6" fill="#27C93F" stroke="#1AAB29" stroke-width=".5"></circle></g></svg></span><span role="button" tabindex="0" data-code="values = [&quot;John&quot;, &quot;john@gmail.com&quot;, 18]" style="color:#d8dee9ff;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path></svg></span><pre class="shiki nord" style="background-color: #2e3440ff" tabindex="0"><code><span class="line"><span style="color: #D8DEE9">values</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> [</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">John</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">john@gmail.com</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">18</span><span style="color: #D8DEE9FF">]</span></span></code></pre></div>



<p>Now we will pass both our query, and this list of values to the <code>db.run</code> function. </p>



<div class="wp-block-kevinbatdorf-code-block-pro" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:block;padding:16px 0 0 16px;margin-bottom:-1px;width:100%;text-align:left;background-color:#2e3440ff"><svg xmlns="http://www.w3.org/2000/svg" width="54" height="14" viewBox="0 0 54 14"><g fill="none" fill-rule="evenodd" transform="translate(1 1)"><circle cx="6" cy="6" r="6" fill="#FF5F56" stroke="#E0443E" stroke-width=".5"></circle><circle cx="26" cy="6" r="6" fill="#FFBD2E" stroke="#DEA123" stroke-width=".5"></circle><circle cx="46" cy="6" r="6" fill="#27C93F" stroke="#1AAB29" stroke-width=".5"></circle></g></svg></span><span role="button" tabindex="0" data-code="  insert_query = &quot;INSERT INTO users(name, email, age) VALUES(?, ?, ?)&quot;
  values = [&quot;John&quot;, &quot;john@gmail.com&quot;, 18]
  db.run(insert_query, values)" style="color:#d8dee9ff;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path></svg></span><pre class="shiki nord" style="background-color: #2e3440ff" tabindex="0"><code><span class="line"><span style="color: #D8DEE9FF">  </span><span style="color: #D8DEE9">insert_query</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">INSERT INTO users(name, email, age) VALUES(?, ?, ?)</span><span style="color: #ECEFF4">&quot;</span></span>
<span class="line"><span style="color: #D8DEE9FF">  </span><span style="color: #D8DEE9">values</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> [</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">John</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">john@gmail.com</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">18</span><span style="color: #D8DEE9FF">]</span></span>
<span class="line"><span style="color: #D8DEE9FF">  </span><span style="color: #D8DEE9">db</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">run</span><span style="color: #D8DEE9FF">(</span><span style="color: #D8DEE9">insert_query</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">values</span><span style="color: #D8DEE9FF">)</span></span></code></pre></div>



<p>The values from the list will then automatically replace the placeholders in the query, in the order that they were defined (first value in the list replaces the first placeholder, and so on).</p>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<hr>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<h2 class="wp-block-heading">Retrieving Data from Tables</h2>



<p>To retrieve records from the database, use the <code>db.all</code> function. This function takes three parameters, first the sql query, followed by a list of parameters (if any), and then a callback. </p>



<p>A simple SQL query would be to select all the details from the users table. This query can be constructed by using the SELECT keyword, followed by the columns we wish to fetch (or we can use * to retrieve all), followed by the FROM keyword and the name of the table we want to fetch the data from.</p>



<div class="wp-block-kevinbatdorf-code-block-pro" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:block;padding:16px 0 0 16px;margin-bottom:-1px;width:100%;text-align:left;background-color:#2e3440ff"><svg xmlns="http://www.w3.org/2000/svg" width="54" height="14" viewBox="0 0 54 14"><g fill="none" fill-rule="evenodd" transform="translate(1 1)"><circle cx="6" cy="6" r="6" fill="#FF5F56" stroke="#E0443E" stroke-width=".5"></circle><circle cx="26" cy="6" r="6" fill="#FFBD2E" stroke="#DEA123" stroke-width=".5"></circle><circle cx="46" cy="6" r="6" fill="#27C93F" stroke="#1AAB29" stroke-width=".5"></circle></g></svg></span><span role="button" tabindex="0" data-code="query = &quot;SELECT &lt;cols&gt; FROM &lt;table-name&gt;&quot;" style="color:#d8dee9ff;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path></svg></span><pre class="shiki nord" style="background-color: #2e3440ff" tabindex="0"><code><span class="line"><span style="color: #D8DEE9">query</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">SELECT &lt;cols&gt; FROM &lt;table-name&gt;</span><span style="color: #ECEFF4">&quot;</span></span></code></pre></div>



<p>Here is our query for the users table:</p>



<div class="wp-block-kevinbatdorf-code-block-pro" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:block;padding:16px 0 0 16px;margin-bottom:-1px;width:100%;text-align:left;background-color:#2e3440ff"><svg xmlns="http://www.w3.org/2000/svg" width="54" height="14" viewBox="0 0 54 14"><g fill="none" fill-rule="evenodd" transform="translate(1 1)"><circle cx="6" cy="6" r="6" fill="#FF5F56" stroke="#E0443E" stroke-width=".5"></circle><circle cx="26" cy="6" r="6" fill="#FFBD2E" stroke="#DEA123" stroke-width=".5"></circle><circle cx="46" cy="6" r="6" fill="#27C93F" stroke="#1AAB29" stroke-width=".5"></circle></g></svg></span><span role="button" tabindex="0" data-code="  db.all(&quot;SELECT * FROM users&quot;, [], (err, rows) =&gt; {
      console.log(rows)
  })" style="color:#d8dee9ff;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path></svg></span><pre class="shiki nord" style="background-color: #2e3440ff" tabindex="0"><code><span class="line"><span style="color: #D8DEE9FF">  </span><span style="color: #D8DEE9">db</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">all</span><span style="color: #D8DEE9FF">(</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">SELECT * FROM users</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> []</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9">err</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">rows</span><span style="color: #ECEFF4">)</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">=&gt;</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">{</span></span>
<span class="line"><span style="color: #D8DEE9FF">      </span><span style="color: #D8DEE9">console</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">log</span><span style="color: #D8DEE9FF">(</span><span style="color: #D8DEE9">rows</span><span style="color: #D8DEE9FF">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">  </span><span style="color: #ECEFF4">}</span><span style="color: #D8DEE9FF">)</span></span></code></pre></div>



<p>We don&#8217;t have any parameters in this query (placeholders), hence the second parameter is an empty array. The third parameter is our callback, which executes after the data has been fetched. </p>



<p>Our data:</p>



<div class="wp-block-kevinbatdorf-code-block-pro" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:block;padding:16px 0 0 16px;margin-bottom:-1px;width:100%;text-align:left;background-color:#2e3440ff"><svg xmlns="http://www.w3.org/2000/svg" width="54" height="14" viewBox="0 0 54 14"><g fill="none" fill-rule="evenodd" transform="translate(1 1)"><circle cx="6" cy="6" r="6" fill="#FF5F56" stroke="#E0443E" stroke-width=".5"></circle><circle cx="26" cy="6" r="6" fill="#FFBD2E" stroke="#DEA123" stroke-width=".5"></circle><circle cx="46" cy="6" r="6" fill="#27C93F" stroke="#1AAB29" stroke-width=".5"></circle></g></svg></span><span role="button" tabindex="0" data-code="[
  { name: 'John', email: 'john@gmail.com', age: 18 },
]" style="color:#d8dee9ff;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path></svg></span><pre class="shiki nord" style="background-color: #2e3440ff" tabindex="0"><code><span class="line"><span style="color: #D8DEE9FF">[</span></span>
<span class="line"><span style="color: #D8DEE9FF">  </span><span style="color: #ECEFF4">{</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">name</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&#39;</span><span style="color: #A3BE8C">John</span><span style="color: #ECEFF4">&#39;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">email</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&#39;</span><span style="color: #A3BE8C">john@gmail.com</span><span style="color: #ECEFF4">&#39;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">age</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">18</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">},</span></span>
<span class="line"><span style="color: #D8DEE9FF">]</span></span></code></pre></div>



<p><br></p>



<p>To include parameters in your queries (e.g. you want to retrieve a specific user), you can do the following:</p>



<div class="wp-block-kevinbatdorf-code-block-pro" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:block;padding:16px 0 0 16px;margin-bottom:-1px;width:100%;text-align:left;background-color:#2e3440ff"><svg xmlns="http://www.w3.org/2000/svg" width="54" height="14" viewBox="0 0 54 14"><g fill="none" fill-rule="evenodd" transform="translate(1 1)"><circle cx="6" cy="6" r="6" fill="#FF5F56" stroke="#E0443E" stroke-width=".5"></circle><circle cx="26" cy="6" r="6" fill="#FFBD2E" stroke="#DEA123" stroke-width=".5"></circle><circle cx="46" cy="6" r="6" fill="#27C93F" stroke="#1AAB29" stroke-width=".5"></circle></g></svg></span><span role="button" tabindex="0" data-code="  db.all(&quot;SELECT * FROM users WHERE name=? AND age=?&quot;, [&quot;John&quot;, 18], (err, rows) =&gt; {
      console.log(rows)
  })" style="color:#d8dee9ff;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path></svg></span><pre class="shiki nord" style="background-color: #2e3440ff" tabindex="0"><code><span class="line"><span style="color: #D8DEE9FF">  </span><span style="color: #D8DEE9">db</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">all</span><span style="color: #D8DEE9FF">(</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">SELECT * FROM users WHERE name=? AND age=?</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> [</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">John</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">18</span><span style="color: #D8DEE9FF">]</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9">err</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">rows</span><span style="color: #ECEFF4">)</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">=&gt;</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">{</span></span>
<span class="line"><span style="color: #D8DEE9FF">      </span><span style="color: #D8DEE9">console</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">log</span><span style="color: #D8DEE9FF">(</span><span style="color: #D8DEE9">rows</span><span style="color: #D8DEE9FF">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">  </span><span style="color: #ECEFF4">}</span><span style="color: #D8DEE9FF">)</span></span></code></pre></div>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<hr>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<h2 class="wp-block-heading">Updating Data </h2>



<p>At this point, you should be familiar with the nuances of the sqlite3 library in Node.js. Anything after this simply requires a good command of SQL commands. </p>



<p>To update a record in the table (e.g. change name) we can use the <code>UPDATE</code> &#8211; <code>SET</code> &#8211; <code>WHERE</code> chain of statements. </p>



<div class="wp-block-kevinbatdorf-code-block-pro" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:block;padding:16px 0 0 16px;margin-bottom:-1px;width:100%;text-align:left;background-color:#2e3440ff"><svg xmlns="http://www.w3.org/2000/svg" width="54" height="14" viewBox="0 0 54 14"><g fill="none" fill-rule="evenodd" transform="translate(1 1)"><circle cx="6" cy="6" r="6" fill="#FF5F56" stroke="#E0443E" stroke-width=".5"></circle><circle cx="26" cy="6" r="6" fill="#FFBD2E" stroke="#DEA123" stroke-width=".5"></circle><circle cx="46" cy="6" r="6" fill="#27C93F" stroke="#1AAB29" stroke-width=".5"></circle></g></svg></span><span role="button" tabindex="0" data-code="  let sql = `UPDATE users
             SET name = ?
             WHERE name = ?`;
          
  db.run(sql, [&quot;Smith&quot;, &quot;John&quot;], (err, rows) =&gt; {
      db.all(&quot;SELECT * FROM users&quot;, [], (err, rows) =&gt; {
          console.log(rows)
      })
  })" style="color:#d8dee9ff;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path></svg></span><pre class="shiki nord" style="background-color: #2e3440ff" tabindex="0"><code><span class="line"><span style="color: #D8DEE9FF">  </span><span style="color: #81A1C1">let</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">sql</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">`</span><span style="color: #A3BE8C">UPDATE users</span></span>
<span class="line"><span style="color: #A3BE8C">             SET name = ?</span></span>
<span class="line"><span style="color: #A3BE8C">             WHERE name = ?</span><span style="color: #ECEFF4">`</span><span style="color: #81A1C1">;</span></span>
<span class="line"><span style="color: #D8DEE9FF">          </span></span>
<span class="line"><span style="color: #D8DEE9FF">  </span><span style="color: #D8DEE9">db</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">run</span><span style="color: #D8DEE9FF">(</span><span style="color: #D8DEE9">sql</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> [</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Smith</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">John</span><span style="color: #ECEFF4">&quot;</span><span style="color: #D8DEE9FF">]</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9">err</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">rows</span><span style="color: #ECEFF4">)</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">=&gt;</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">{</span></span>
<span class="line"><span style="color: #D8DEE9FF">      </span><span style="color: #D8DEE9">db</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">all</span><span style="color: #D8DEE9FF">(</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">SELECT * FROM users</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> []</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9">err</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">rows</span><span style="color: #ECEFF4">)</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">=&gt;</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">{</span></span>
<span class="line"><span style="color: #D8DEE9FF">          </span><span style="color: #D8DEE9">console</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">log</span><span style="color: #D8DEE9FF">(</span><span style="color: #D8DEE9">rows</span><span style="color: #D8DEE9FF">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">      </span><span style="color: #ECEFF4">}</span><span style="color: #D8DEE9FF">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">  </span><span style="color: #ECEFF4">}</span><span style="color: #D8DEE9FF">)</span></span></code></pre></div>



<p>We add a callback which prints out the contents of the user table after the update query has been executed, which shows us the following:</p>



<div class="wp-block-kevinbatdorf-code-block-pro" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:block;padding:16px 0 0 16px;margin-bottom:-1px;width:100%;text-align:left;background-color:#2e3440ff"><svg xmlns="http://www.w3.org/2000/svg" width="54" height="14" viewBox="0 0 54 14"><g fill="none" fill-rule="evenodd" transform="translate(1 1)"><circle cx="6" cy="6" r="6" fill="#FF5F56" stroke="#E0443E" stroke-width=".5"></circle><circle cx="26" cy="6" r="6" fill="#FFBD2E" stroke="#DEA123" stroke-width=".5"></circle><circle cx="46" cy="6" r="6" fill="#27C93F" stroke="#1AAB29" stroke-width=".5"></circle></g></svg></span><span role="button" tabindex="0" data-code="[
  { name: 'Smith', email: 'john@gmail.com', age: 18 },
]" style="color:#d8dee9ff;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path></svg></span><pre class="shiki nord" style="background-color: #2e3440ff" tabindex="0"><code><span class="line"><span style="color: #D8DEE9FF">[</span></span>
<span class="line"><span style="color: #D8DEE9FF">  </span><span style="color: #ECEFF4">{</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">name</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&#39;</span><span style="color: #A3BE8C">Smith</span><span style="color: #ECEFF4">&#39;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">email</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&#39;</span><span style="color: #A3BE8C">john@gmail.com</span><span style="color: #ECEFF4">&#39;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">age</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">18</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">},</span></span>
<span class="line"><span style="color: #D8DEE9FF">]</span></span></code></pre></div>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<hr>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<h2 class="wp-block-heading">Deleting Data</h2>



<p>We will now come full circle, and delete the record we entered to begin with. </p>



<p>This is what the record currently looks like (after updating the name):</p>



<div class="wp-block-kevinbatdorf-code-block-pro" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:block;padding:16px 0 0 16px;margin-bottom:-1px;width:100%;text-align:left;background-color:#2e3440ff"><svg xmlns="http://www.w3.org/2000/svg" width="54" height="14" viewBox="0 0 54 14"><g fill="none" fill-rule="evenodd" transform="translate(1 1)"><circle cx="6" cy="6" r="6" fill="#FF5F56" stroke="#E0443E" stroke-width=".5"></circle><circle cx="26" cy="6" r="6" fill="#FFBD2E" stroke="#DEA123" stroke-width=".5"></circle><circle cx="46" cy="6" r="6" fill="#27C93F" stroke="#1AAB29" stroke-width=".5"></circle></g></svg></span><span role="button" tabindex="0" data-code="[
  { name: 'Smith', email: 'john@gmail.com', age: 18 },
]" style="color:#d8dee9ff;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path></svg></span><pre class="shiki nord" style="background-color: #2e3440ff" tabindex="0"><code><span class="line"><span style="color: #D8DEE9FF">[</span></span>
<span class="line"><span style="color: #D8DEE9FF">  </span><span style="color: #ECEFF4">{</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">name</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&#39;</span><span style="color: #A3BE8C">Smith</span><span style="color: #ECEFF4">&#39;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">email</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&#39;</span><span style="color: #A3BE8C">john@gmail.com</span><span style="color: #ECEFF4">&#39;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">age</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">18</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">},</span></span>
<span class="line"><span style="color: #D8DEE9FF">]</span></span></code></pre></div>



<p>We will now delete this user. Ideally, we should have created an &#8220;id&#8221; field which uniquely identifies each user. But we will have to make do. We can assume that the emails are unique (since there can&#8217;t be duplicates) and delete on the basis of the email.</p>



<div class="wp-block-kevinbatdorf-code-block-pro" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:block;padding:16px 0 0 16px;margin-bottom:-1px;width:100%;text-align:left;background-color:#2e3440ff"><svg xmlns="http://www.w3.org/2000/svg" width="54" height="14" viewBox="0 0 54 14"><g fill="none" fill-rule="evenodd" transform="translate(1 1)"><circle cx="6" cy="6" r="6" fill="#FF5F56" stroke="#E0443E" stroke-width=".5"></circle><circle cx="26" cy="6" r="6" fill="#FFBD2E" stroke="#DEA123" stroke-width=".5"></circle><circle cx="46" cy="6" r="6" fill="#27C93F" stroke="#1AAB29" stroke-width=".5"></circle></g></svg></span><span role="button" tabindex="0" data-code="    let sql = `DELETE FROM users WHERE email=?`
    db.run(sql, [&quot;john@gmail.com&quot;], (err) =&gt; {
        if (err) {
            return console.log(err)
        }
        db.all(&quot;SELECT * FROM users&quot;, [], (err, rows) =&gt; {
            console.log(rows)
        })
    })" style="color:#d8dee9ff;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path></svg></span><pre class="shiki nord" style="background-color: #2e3440ff" tabindex="0"><code><span class="line"><span style="color: #D8DEE9FF">    </span><span style="color: #81A1C1">let</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">sql</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">`</span><span style="color: #A3BE8C">DELETE FROM users WHERE email=?</span><span style="color: #ECEFF4">`</span></span>
<span class="line"><span style="color: #D8DEE9FF">    </span><span style="color: #D8DEE9">db</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">run</span><span style="color: #D8DEE9FF">(</span><span style="color: #D8DEE9">sql</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> [</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">john@gmail.com</span><span style="color: #ECEFF4">&quot;</span><span style="color: #D8DEE9FF">]</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9">err</span><span style="color: #ECEFF4">)</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">=&gt;</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">{</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">if</span><span style="color: #D8DEE9FF"> (</span><span style="color: #D8DEE9">err</span><span style="color: #D8DEE9FF">) </span><span style="color: #ECEFF4">{</span></span>
<span class="line"><span style="color: #D8DEE9FF">            </span><span style="color: #81A1C1">return</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">console</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">log</span><span style="color: #D8DEE9FF">(</span><span style="color: #D8DEE9">err</span><span style="color: #D8DEE9FF">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #ECEFF4">}</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #D8DEE9">db</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">all</span><span style="color: #D8DEE9FF">(</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">SELECT * FROM users</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> []</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9">err</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">rows</span><span style="color: #ECEFF4">)</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">=&gt;</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">{</span></span>
<span class="line"><span style="color: #D8DEE9FF">            </span><span style="color: #D8DEE9">console</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">log</span><span style="color: #D8DEE9FF">(</span><span style="color: #D8DEE9">rows</span><span style="color: #D8DEE9FF">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #ECEFF4">}</span><span style="color: #D8DEE9FF">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">    </span><span style="color: #ECEFF4">}</span><span style="color: #D8DEE9FF">)</span></span></code></pre></div>



<p>As you can from the output:</p>



<div class="wp-block-kevinbatdorf-code-block-pro" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:block;padding:16px 0 0 16px;margin-bottom:-1px;width:100%;text-align:left;background-color:#2e3440ff"><svg xmlns="http://www.w3.org/2000/svg" width="54" height="14" viewBox="0 0 54 14"><g fill="none" fill-rule="evenodd" transform="translate(1 1)"><circle cx="6" cy="6" r="6" fill="#FF5F56" stroke="#E0443E" stroke-width=".5"></circle><circle cx="26" cy="6" r="6" fill="#FFBD2E" stroke="#DEA123" stroke-width=".5"></circle><circle cx="46" cy="6" r="6" fill="#27C93F" stroke="#1AAB29" stroke-width=".5"></circle></g></svg></span><span role="button" tabindex="0" data-code="[]" style="color:#d8dee9ff;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path></svg></span><pre class="shiki nord" style="background-color: #2e3440ff" tabindex="0"><code><span class="line"><span style="color: #D8DEE9FF">[]</span></span></code></pre></div>



<p>There are no more records in the table.</p>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<hr>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<p>This marks the end of the Javascript SQLite3 Tutorial for Beginners Tutorial. Any suggestions or contributions for CodersLegacy are more than welcome. Questions regarding the tutorial content can be asked in the comments section below.</p>
<p>The post <a href="https://coderslegacy.com/javascript-sqlite3-tutorial-for-beginners-node-js/">JavaScript SQLite3 Tutorial for Beginners (Node.js)</a> appeared first on <a href="https://coderslegacy.com">CodersLegacy</a>.</p>]]></description>
                <pubDate>Thu, 11 Jan 2024 00:55:43 +0200</pubDate>
                <guid isPermaLink="false">https://api.follow.it/track-rss-story-click/v3/Pni2oPawGk0xq_KCLhCg_0oy9CZgXDJO</guid>
            </item>
                    <item>
                <title><![CDATA[Switching between Multiple Screens in Tkinter (dynamically)]]></title>
                <link>https://api.follow.it/track-rss-story-click/v3/Pni2oPawGk0T5_Dnr-3FoFyOSYGFl6uu</link>
                <description><![CDATA[<img src="https://api.follow.it/track-rss-story-loaded/v1/-Q8YN87hcnGsx5i2u1H00OT5HJgy6HUf" border=0 width="1" height="1" alt="Switching between Multiple Screens in Tkinter (dynamically)" title="Switching between Multiple Screens in Tkinter (dynamically)"> <p>The following article demonstrates a useful trick in Tkinter to create multiple &#8220;screens&#8221; (e.g. a login screen, register screen, main page screen) within a single window! Instead of creating a new window for each screen, we will use a single tkinter window, which swaps dynamically between multiple &#8220;screens&#8221; (represented by frames).</p>



<p>This is more efficient and faster than creating a new window every time. </p>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<hr>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<h2 class="wp-block-heading">Complete Code:</h2>



<p>The core idea is simple, we have multiple classes, each of which represents a window. These classes inherit from the Frame class, essentially making them frames as well. To &#8220;swap&#8221; between screens, we destroy the existing frame (including all of its children objects) and then create the new frame to take its place. </p>



<p>A YouTube video explaining this code step-by-step is included at the bottom of this article. </p>



<div class="wp-block-kevinbatdorf-code-block-pro" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:block;padding:16px 0 0 16px;margin-bottom:-1px;width:100%;text-align:left;background-color:#2e3440ff"><svg xmlns="http://www.w3.org/2000/svg" width="54" height="14" viewBox="0 0 54 14"><g fill="none" fill-rule="evenodd" transform="translate(1 1)"><circle cx="6" cy="6" r="6" fill="#FF5F56" stroke="#E0443E" stroke-width=".5"></circle><circle cx="26" cy="6" r="6" fill="#FFBD2E" stroke="#DEA123" stroke-width=".5"></circle><circle cx="46" cy="6" r="6" fill="#27C93F" stroke="#1AAB29" stroke-width=".5"></circle></g></svg></span><span role="button" tabindex="0" data-code="import tkinter as tk

def center_window(width, height):
    x = (root.winfo_screenwidth() // 2) - (width // 2)
    y = (root.winfo_screenheight() // 2) - (height // 2)
    root.geometry(f'{width}x{height}+{x}+{y}')


class WelcomeWindow(tk.Frame):
    def __init__(self, master):
        super().__init__()
        self.master = master
        self.master.title(&quot;Welcome&quot;)
        center_window(200, 150)
        
        login_button = tk.Button(self, text=&quot;Login&quot;, width=10, command = self.on_login)
        login_button.pack(padx=20, pady=(20, 10))
        
        register_button = tk.Button(self, text=&quot;Register&quot;, width=10, command = self.on_register)
        register_button.pack(pady=10)
        self.pack()

    def on_login(self):
        for widget in self.winfo_children():
            widget.destroy()
        self.destroy()
        LoginWindow(self.master)

    def on_register(self):
        for widget in self.winfo_children():
            widget.destroy()
        self.destroy()
        RegisterWindow(self.master)



class LoginWindow(tk.Frame):
    def __init__(self, master):
        super().__init__()
        self.master = master
        self.master.title(&quot;Login&quot;)
        self.master.resizable(False, False)
        center_window(250, 150)
        
        tk.Label(self, text=&quot;Username:&quot;).grid(row=0, column=0)
        self.username_entry = tk.Entry(self)
        self.username_entry.grid(row=0, column=1, padx=10, pady=10)
        
        tk.Label(self, text=&quot;Password:&quot;).grid(row=1, column=0)
        self.password_entry = tk.Entry(self, show=&quot;*&quot;)
        self.password_entry.grid(row=1, column=1, padx=10, pady=10)
        
        submit_button = tk.Button(self, text=&quot;Submit&quot;, width=8,command = self.on_successful_login)
        submit_button.grid(row=2, column=1, sticky=&quot;e&quot;, padx=10, pady=(10, 0))

        submit_button = tk.Button(self, text=&quot;Back&quot;, width=8, command = self.on_back)
        submit_button.grid(row=2, column=0, sticky=&quot;w&quot;, padx=10, pady=(10, 0))
        self.pack()
 
    def on_back(self):
        for widget in self.winfo_children():
            widget.destroy()
        self.destroy()
        WelcomeWindow(self.master)

    def on_successful_login(self):
        for widget in self.winfo_children():
            widget.destroy()
        self.destroy()
        MainWindow(self.master)       


        
class RegisterWindow(tk.Frame):
    def __init__(self, master):
        super().__init__()
        self.master = master
        self.master.title(&quot;Register&quot;)
        self.master.resizable(False, False)
        center_window(300, 250)
        
        tk.Label(self, text=&quot;First Name:&quot;).grid(row=0, column=0, sticky=&quot;w&quot;)
        self.first_name_entry = tk.Entry(self, width=26)
        self.first_name_entry.grid(row=0, column=1, padx=10, pady=10, sticky=&quot;e&quot;)
        
        tk.Label(self, text=&quot;Last Name:&quot;).grid(row=1, column=0, sticky=&quot;w&quot;)
        self.last_name_entry = tk.Entry(self, width=26)
        self.last_name_entry.grid(row=1, column=1, padx=10, pady=10, sticky=&quot;e&quot;)
        
        tk.Label(self, text=&quot;Password:&quot;).grid(row=2, column=0, sticky=&quot;w&quot;)
        self.password_entry = tk.Entry(self, show=&quot;*&quot;, width=26)
        self.password_entry.grid(row=2, column=1, padx=10, pady=10, sticky=&quot;e&quot;)
        
        tk.Label(self, text=&quot;Email:&quot;).grid(row=3, column=0, sticky=&quot;w&quot;)
        self.email_entry = tk.Entry(self, width=26)
        self.email_entry.grid(row=3, column=1, padx=10, pady=10, sticky=&quot;e&quot;)
        
        submit_button = tk.Button(self, text=&quot;Submit&quot;, width=8)
        submit_button.grid(row=7, column=1, padx=10, pady=10, sticky=&quot;e&quot;)

        submit_button = tk.Button(self, text=&quot;Back&quot;, width=8, command = self.on_back)
        submit_button.grid(row=7, column=0, sticky=&quot;w&quot;, padx=10, pady=(10, 10))
        self.pack()

    def on_back(self):
        for widget in self.winfo_children():
            widget.destroy()
        self.destroy()
        WelcomeWindow(self.master)


class MainWindow(tk.Frame):
    def __init__(self, master):
        super().__init__()
        self.master = master
        center_window(500, 500)
        self.pack()     

root = tk.Tk()
root.eval('tk::PlaceWindow . center')
WelcomeWindow(root)
root.mainloop()" style="color:#d8dee9ff;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path></svg></span><pre class="shiki nord" style="background-color: #2e3440ff" tabindex="0"><code><span class="line"><span style="color: #81A1C1">import</span><span style="color: #D8DEE9FF"> tkinter </span><span style="color: #81A1C1">as</span><span style="color: #D8DEE9FF"> tk</span></span>
<span class="line"></span>
<span class="line"><span style="color: #81A1C1">def</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">center_window</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9">width</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">height</span><span style="color: #ECEFF4">):</span></span>
<span class="line"><span style="color: #D8DEE9FF">    x </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9FF">root</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">winfo_screenwidth</span><span style="color: #ECEFF4">()</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">//</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">2</span><span style="color: #ECEFF4">)</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">-</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9FF">width </span><span style="color: #81A1C1">//</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">2</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">    y </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9FF">root</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">winfo_screenheight</span><span style="color: #ECEFF4">()</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">//</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">2</span><span style="color: #ECEFF4">)</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">-</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9FF">height </span><span style="color: #81A1C1">//</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">2</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">    root</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">geometry</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">f</span><span style="color: #A3BE8C">&#39;</span><span style="color: #EBCB8B">{</span><span style="color: #D8DEE9FF">width</span><span style="color: #EBCB8B">}</span><span style="color: #A3BE8C">x</span><span style="color: #EBCB8B">{</span><span style="color: #D8DEE9FF">height</span><span style="color: #EBCB8B">}</span><span style="color: #A3BE8C">+</span><span style="color: #EBCB8B">{</span><span style="color: #D8DEE9FF">x</span><span style="color: #EBCB8B">}</span><span style="color: #A3BE8C">+</span><span style="color: #EBCB8B">{</span><span style="color: #D8DEE9FF">y</span><span style="color: #EBCB8B">}</span><span style="color: #A3BE8C">&#39;</span><span style="color: #ECEFF4">)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color: #81A1C1">class</span><span style="color: #D8DEE9FF"> </span><span style="color: #8FBCBB">WelcomeWindow</span><span style="color: #ECEFF4">(</span><span style="color: #8FBCBB; font-weight: bold">tk</span><span style="color: #ECEFF4">.</span><span style="color: #8FBCBB; font-weight: bold">Frame</span><span style="color: #ECEFF4">):</span></span>
<span class="line"><span style="color: #D8DEE9FF">    </span><span style="color: #81A1C1">def</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">__init__</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">master</span><span style="color: #ECEFF4">):</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #88C0D0">super</span><span style="color: #ECEFF4">().</span><span style="color: #88C0D0">__init__</span><span style="color: #ECEFF4">()</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">master </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> master</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">master</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">title</span><span style="color: #ECEFF4">(</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Welcome</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #88C0D0">center_window</span><span style="color: #ECEFF4">(</span><span style="color: #B48EAD">200</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">150</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span></span>
<span class="line"><span style="color: #D8DEE9FF">        login_button </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> tk</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">Button</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">text</span><span style="color: #81A1C1">=</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Login</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">width</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">10</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">command</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">on_login</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">        login_button</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">pack</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9">padx</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">20</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">pady</span><span style="color: #81A1C1">=</span><span style="color: #ECEFF4">(</span><span style="color: #B48EAD">20</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">10</span><span style="color: #ECEFF4">))</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span></span>
<span class="line"><span style="color: #D8DEE9FF">        register_button </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> tk</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">Button</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">text</span><span style="color: #81A1C1">=</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Register</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">width</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">10</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">command</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">on_register</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">        register_button</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">pack</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9">pady</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">10</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">pack</span><span style="color: #ECEFF4">()</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D8DEE9FF">    </span><span style="color: #81A1C1">def</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">on_login</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">):</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">for</span><span style="color: #D8DEE9FF"> widget </span><span style="color: #81A1C1">in</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">winfo_children</span><span style="color: #ECEFF4">():</span></span>
<span class="line"><span style="color: #D8DEE9FF">            widget</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">destroy</span><span style="color: #ECEFF4">()</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">destroy</span><span style="color: #ECEFF4">()</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #88C0D0">LoginWindow</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">master</span><span style="color: #ECEFF4">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D8DEE9FF">    </span><span style="color: #81A1C1">def</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">on_register</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">):</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">for</span><span style="color: #D8DEE9FF"> widget </span><span style="color: #81A1C1">in</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">winfo_children</span><span style="color: #ECEFF4">():</span></span>
<span class="line"><span style="color: #D8DEE9FF">            widget</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">destroy</span><span style="color: #ECEFF4">()</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">destroy</span><span style="color: #ECEFF4">()</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #88C0D0">RegisterWindow</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">master</span><span style="color: #ECEFF4">)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color: #81A1C1">class</span><span style="color: #D8DEE9FF"> </span><span style="color: #8FBCBB">LoginWindow</span><span style="color: #ECEFF4">(</span><span style="color: #8FBCBB; font-weight: bold">tk</span><span style="color: #ECEFF4">.</span><span style="color: #8FBCBB; font-weight: bold">Frame</span><span style="color: #ECEFF4">):</span></span>
<span class="line"><span style="color: #D8DEE9FF">    </span><span style="color: #81A1C1">def</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">__init__</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">master</span><span style="color: #ECEFF4">):</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #88C0D0">super</span><span style="color: #ECEFF4">().</span><span style="color: #88C0D0">__init__</span><span style="color: #ECEFF4">()</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">master </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> master</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">master</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">title</span><span style="color: #ECEFF4">(</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Login</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">master</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">resizable</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">False</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">False</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #88C0D0">center_window</span><span style="color: #ECEFF4">(</span><span style="color: #B48EAD">250</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">150</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span></span>
<span class="line"><span style="color: #D8DEE9FF">        tk</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">Label</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">text</span><span style="color: #81A1C1">=</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Username:</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">).</span><span style="color: #88C0D0">grid</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9">row</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">0</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">column</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">0</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">username_entry </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> tk</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">Entry</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">username_entry</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">grid</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9">row</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">0</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">column</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">1</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">padx</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">10</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">pady</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">10</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span></span>
<span class="line"><span style="color: #D8DEE9FF">        tk</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">Label</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">text</span><span style="color: #81A1C1">=</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Password:</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">).</span><span style="color: #88C0D0">grid</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9">row</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">1</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">column</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">0</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">password_entry </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> tk</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">Entry</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">show</span><span style="color: #81A1C1">=</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">*</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">password_entry</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">grid</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9">row</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">1</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">column</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">1</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">padx</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">10</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">pady</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">10</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span></span>
<span class="line"><span style="color: #D8DEE9FF">        submit_button </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> tk</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">Button</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">text</span><span style="color: #81A1C1">=</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Submit</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">width</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">8</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9">command</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">on_successful_login</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">        submit_button</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">grid</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9">row</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">2</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">column</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">1</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">sticky</span><span style="color: #81A1C1">=</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">e</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">padx</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">10</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">pady</span><span style="color: #81A1C1">=</span><span style="color: #ECEFF4">(</span><span style="color: #B48EAD">10</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">0</span><span style="color: #ECEFF4">))</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D8DEE9FF">        submit_button </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> tk</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">Button</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">text</span><span style="color: #81A1C1">=</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Back</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">width</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">8</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">command</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">on_back</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">        submit_button</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">grid</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9">row</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">2</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">column</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">0</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">sticky</span><span style="color: #81A1C1">=</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">w</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">padx</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">10</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">pady</span><span style="color: #81A1C1">=</span><span style="color: #ECEFF4">(</span><span style="color: #B48EAD">10</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">0</span><span style="color: #ECEFF4">))</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">pack</span><span style="color: #ECEFF4">()</span></span>
<span class="line"><span style="color: #D8DEE9FF"> </span></span>
<span class="line"><span style="color: #D8DEE9FF">    </span><span style="color: #81A1C1">def</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">on_back</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">):</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">for</span><span style="color: #D8DEE9FF"> widget </span><span style="color: #81A1C1">in</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">winfo_children</span><span style="color: #ECEFF4">():</span></span>
<span class="line"><span style="color: #D8DEE9FF">            widget</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">destroy</span><span style="color: #ECEFF4">()</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">destroy</span><span style="color: #ECEFF4">()</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #88C0D0">WelcomeWindow</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">master</span><span style="color: #ECEFF4">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D8DEE9FF">    </span><span style="color: #81A1C1">def</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">on_successful_login</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">):</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">for</span><span style="color: #D8DEE9FF"> widget </span><span style="color: #81A1C1">in</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">winfo_children</span><span style="color: #ECEFF4">():</span></span>
<span class="line"><span style="color: #D8DEE9FF">            widget</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">destroy</span><span style="color: #ECEFF4">()</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">destroy</span><span style="color: #ECEFF4">()</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #88C0D0">MainWindow</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">master</span><span style="color: #ECEFF4">)</span><span style="color: #D8DEE9FF">       </span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color: #D8DEE9FF">        </span></span>
<span class="line"><span style="color: #81A1C1">class</span><span style="color: #D8DEE9FF"> </span><span style="color: #8FBCBB">RegisterWindow</span><span style="color: #ECEFF4">(</span><span style="color: #8FBCBB; font-weight: bold">tk</span><span style="color: #ECEFF4">.</span><span style="color: #8FBCBB; font-weight: bold">Frame</span><span style="color: #ECEFF4">):</span></span>
<span class="line"><span style="color: #D8DEE9FF">    </span><span style="color: #81A1C1">def</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">__init__</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">master</span><span style="color: #ECEFF4">):</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #88C0D0">super</span><span style="color: #ECEFF4">().</span><span style="color: #88C0D0">__init__</span><span style="color: #ECEFF4">()</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">master </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> master</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">master</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">title</span><span style="color: #ECEFF4">(</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Register</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">master</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">resizable</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">False</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">False</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #88C0D0">center_window</span><span style="color: #ECEFF4">(</span><span style="color: #B48EAD">300</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">250</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span></span>
<span class="line"><span style="color: #D8DEE9FF">        tk</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">Label</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">text</span><span style="color: #81A1C1">=</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">First Name:</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">).</span><span style="color: #88C0D0">grid</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9">row</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">0</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">column</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">0</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">sticky</span><span style="color: #81A1C1">=</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">w</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">first_name_entry </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> tk</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">Entry</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">width</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">26</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">first_name_entry</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">grid</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9">row</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">0</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">column</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">1</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">padx</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">10</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">pady</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">10</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">sticky</span><span style="color: #81A1C1">=</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">e</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span></span>
<span class="line"><span style="color: #D8DEE9FF">        tk</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">Label</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">text</span><span style="color: #81A1C1">=</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Last Name:</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">).</span><span style="color: #88C0D0">grid</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9">row</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">1</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">column</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">0</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">sticky</span><span style="color: #81A1C1">=</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">w</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">last_name_entry </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> tk</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">Entry</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">width</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">26</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">last_name_entry</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">grid</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9">row</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">1</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">column</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">1</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">padx</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">10</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">pady</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">10</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">sticky</span><span style="color: #81A1C1">=</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">e</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span></span>
<span class="line"><span style="color: #D8DEE9FF">        tk</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">Label</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">text</span><span style="color: #81A1C1">=</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Password:</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">).</span><span style="color: #88C0D0">grid</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9">row</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">2</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">column</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">0</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">sticky</span><span style="color: #81A1C1">=</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">w</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">password_entry </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> tk</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">Entry</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">show</span><span style="color: #81A1C1">=</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">*</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">width</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">26</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">password_entry</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">grid</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9">row</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">2</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">column</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">1</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">padx</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">10</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">pady</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">10</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">sticky</span><span style="color: #81A1C1">=</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">e</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span></span>
<span class="line"><span style="color: #D8DEE9FF">        tk</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">Label</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">text</span><span style="color: #81A1C1">=</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Email:</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">).</span><span style="color: #88C0D0">grid</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9">row</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">3</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">column</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">0</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">sticky</span><span style="color: #81A1C1">=</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">w</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">email_entry </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> tk</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">Entry</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">width</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">26</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">email_entry</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">grid</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9">row</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">3</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">column</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">1</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">padx</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">10</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">pady</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">10</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">sticky</span><span style="color: #81A1C1">=</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">e</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span></span>
<span class="line"><span style="color: #D8DEE9FF">        submit_button </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> tk</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">Button</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">text</span><span style="color: #81A1C1">=</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Submit</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">width</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">8</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">        submit_button</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">grid</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9">row</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">7</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">column</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">1</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">padx</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">10</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">pady</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">10</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">sticky</span><span style="color: #81A1C1">=</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">e</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D8DEE9FF">        submit_button </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> tk</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">Button</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">text</span><span style="color: #81A1C1">=</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Back</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">width</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">8</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">command</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">on_back</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">        submit_button</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">grid</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9">row</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">7</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">column</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">0</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">sticky</span><span style="color: #81A1C1">=</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">w</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">padx</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">10</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">pady</span><span style="color: #81A1C1">=</span><span style="color: #ECEFF4">(</span><span style="color: #B48EAD">10</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">10</span><span style="color: #ECEFF4">))</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">pack</span><span style="color: #ECEFF4">()</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D8DEE9FF">    </span><span style="color: #81A1C1">def</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">on_back</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">):</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">for</span><span style="color: #D8DEE9FF"> widget </span><span style="color: #81A1C1">in</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">winfo_children</span><span style="color: #ECEFF4">():</span></span>
<span class="line"><span style="color: #D8DEE9FF">            widget</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">destroy</span><span style="color: #ECEFF4">()</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">destroy</span><span style="color: #ECEFF4">()</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #88C0D0">WelcomeWindow</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">master</span><span style="color: #ECEFF4">)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color: #81A1C1">class</span><span style="color: #D8DEE9FF"> </span><span style="color: #8FBCBB">MainWindow</span><span style="color: #ECEFF4">(</span><span style="color: #8FBCBB; font-weight: bold">tk</span><span style="color: #ECEFF4">.</span><span style="color: #8FBCBB; font-weight: bold">Frame</span><span style="color: #ECEFF4">):</span></span>
<span class="line"><span style="color: #D8DEE9FF">    </span><span style="color: #81A1C1">def</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">__init__</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">master</span><span style="color: #ECEFF4">):</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #88C0D0">super</span><span style="color: #ECEFF4">().</span><span style="color: #88C0D0">__init__</span><span style="color: #ECEFF4">()</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">master </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> master</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #88C0D0">center_window</span><span style="color: #ECEFF4">(</span><span style="color: #B48EAD">500</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">500</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">self</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">pack</span><span style="color: #ECEFF4">()</span><span style="color: #D8DEE9FF">     </span></span>
<span class="line"></span>
<span class="line"><span style="color: #D8DEE9FF">root </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> tk</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">Tk</span><span style="color: #ECEFF4">()</span></span>
<span class="line"><span style="color: #D8DEE9FF">root</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">eval</span><span style="color: #ECEFF4">(</span><span style="color: #ECEFF4">&#39;</span><span style="color: #A3BE8C">tk::PlaceWindow . center</span><span style="color: #ECEFF4">&#39;</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #88C0D0">WelcomeWindow</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9FF">root</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">root</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">mainloop</span><span style="color: #ECEFF4">()</span></span></code></pre></div>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<hr>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<figure class="wp-block-embed is-type-video is-provider-youtube wp-block-embed-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio"><div class="wp-block-embed__wrapper">
<iframe title="Tkinter Dynamic Screens" width="1050" height="591" src="https://www.youtube.com/embed/qgVg-sHBjz0?feature=oembed" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>
</div></figure>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<hr>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<p>This marks the end of the <em><strong>Switching between multiple Screens in Tkinter</strong></em> Tutorial. Any suggestions or contributions for CodersLegacy are more than welcome. Questions regarding the tutorial content can be asked in the comments section below.</p>
<p>The post <a href="https://coderslegacy.com/switching-between-multiple-screens-pages-in-tkinter/">Switching between Multiple Screens in Tkinter (dynamically)</a> appeared first on <a href="https://coderslegacy.com">CodersLegacy</a>.</p>]]></description>
                <pubDate>Sat, 06 Jan 2024 12:22:29 +0200</pubDate>
                <guid isPermaLink="false">https://api.follow.it/track-rss-story-click/v3/Pni2oPawGk0T5_Dnr-3FoFyOSYGFl6uu</guid>
            </item>
                    <item>
                <title><![CDATA[Pyinstaller EXE detected as Virus? (Solutions and Alternatives)]]></title>
                <link>https://api.follow.it/track-rss-story-click/v3/Pni2oPawGk3Nj6sSZ8vzSjRQaTQYXBS9</link>
                <description><![CDATA[<img src="https://api.follow.it/track-rss-story-loaded/v1/ygPHJOFZ2mjJFRj0NQKtXOT5HJgy6HUf" border=0 width="1" height="1" alt="Pyinstaller EXE detected as Virus? (Solutions and Alternatives)" title="Pyinstaller EXE detected as Virus? (Solutions and Alternatives)"> <p>PyInstaller, a popular tool for <a href="https://coderslegacy.com/python/libraries-in-python/python-pyinstaller/">converting Python scripts</a> into standalone executables, has become a go-to choice for developers seeking to distribute their applications. However, a rising concern among users revolves around their PyInstaller EXE files being detected and flagged as a Virus by Antivirus software.</p>



<p>In this article, we&#8217;ll delve into the reasons behind this phenomenon and explore various strategies to address and overcome the challenges posed by antivirus detections.</p>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<hr>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>


				<div class="wp-block-uagb-table-of-contents uagb-toc__align-left uagb-toc__columns-1  uagb-block-ff0204bf     "
					data-scroll= "1"
					data-offset= "30"
					style=""
				>
				<div class="uagb-toc__wrap">
						<div class="uagb-toc__title">
							Table Of Contents						</div>
																<div class="uagb-toc__list-wrap">
						<ol class="uagb-toc__list"><li class="uagb-toc__list"><a href="#why-is-your-pyinstaller-exe-detected-as-a-virus" class="uagb-toc-link__trigger">Why is your Pyinstaller EXE detected as a Virus?:</a><li class="uagb-toc__list"><a href="#testing-with-virustotal" class="uagb-toc-link__trigger">Testing with VirusTotal:</a><li class="uagb-toc__list"><a href="#solutions-pyinstaller-exe-detected-as-virus" class="uagb-toc-link__trigger">Solutions: Pyinstaller EXE detected as Virus</a><ul class="uagb-toc__list"><li class="uagb-toc__list"><a href="#1-avoid-onefile-mode" class="uagb-toc-link__trigger">1. Avoid onefile Mode:</a><li class="uagb-toc__list"><li class="uagb-toc__list"><a href="#2-build-the-pyinstaller-bootloader-yourself" class="uagb-toc-link__trigger">2. Build the PyInstaller Bootloader Yourself:</a><li class="uagb-toc__list"><li class="uagb-toc__list"><a href="#3-code-signing-certificate" class="uagb-toc-link__trigger">3. Code Signing Certificate:</a><li class="uagb-toc__list"><li class="uagb-toc__list"><a href="#4-use-nuitka-as-an-alternative" class="uagb-toc-link__trigger">4. Use Nuitka as an Alternative</a><li class="uagb-toc__list"><li class="uagb-toc__list"><a href="#5-utilize-inno-setup-or-similar-tools" class="uagb-toc-link__trigger">5. Utilize Inno Setup or Similar Tools:</a></li></ul></li><li class="uagb-toc__list"><a href="#6-submit-a-report-to-the-antivirus-organization" class="uagb-toc-link__trigger">6. Submit a report to the Antivirus Organization</a><li class="uagb-toc__list"><a href="#conclusion" class="uagb-toc-link__trigger">Conclusion</a></ul></ol>					</div>
									</div>
				</div>
			


<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<hr>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<h2 class="wp-block-heading">Why is your Pyinstaller EXE detected as a Virus?:</h2>



<p>Before delving into solutions, it&#8217;s crucial to understand why PyInstaller-generated EXE files might trigger antivirus alerts. It has little to do with your actual code, as even the most simplest of programs will end up being flagged. In reality, there are many other external factors at play. </p>



<ul>
<li>Due to the popularity and widespread usage of Python, it is not uncommon for hackers or cyber-criminals to distribute malware, trojans, and ransomware using Python + PyInstaller. This is the first issue, as anti-viruses will see similarities between the EXE&#8217;s generated by you, and by the malware produced by criminals. <br><br></li>



<li>Whenever you download an executable from somewhere, you might have seen a popup that asks you if you are sure you want to run the file. You may also see some publisher information in the popup, or a warning message if there is an unknown publisher. When you, as an individual publish an EXE (doesn&#8217;t matter what technique you used to make the EXE), you are effectively a stranger in the Anti-virus&#8217;s eyes. You have no identity, or authenticity. </li>
</ul>



<p><br></p>



<p>It is usually a combination of several of these different reasons that your pyinstaller program will get detected as a virus or malware. We will discuss how to mitigate some (if not all) of these problems in this article, which will hopefully be enough to pass undetected through any anti-virus. </p>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<hr>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<h2 class="wp-block-heading">Testing with VirusTotal:</h2>



<p>One effective way to ascertain whether your PyInstaller-generated EXE is being detected as a Virus by popular antivirus software is to use the <a href="https://www.virustotal.com/" target="_blank" rel="noreferrer noopener">virustotal website</a>. Virustotal allows you to upload your file and scans it with multiple antivirus engines, and lets you know which ones have flagged your EXE as a Virus/Malware, and what warning they have raised. </p>


<div class="wp-block-image">
<figure class="aligncenter size-full"><img fetchpriority="high" decoding="async" width="805" height="272" src="https://coderslegacy.com/wp-content/uploads/2023/12/image-3.png" alt="Pyinstaller EXE detected as Virus?" class="wp-image-15362" srcset="https://coderslegacy.com/wp-content/uploads/2023/12/image-3.png 805w, https://coderslegacy.com/wp-content/uploads/2023/12/image-3-300x101.png 300w, https://coderslegacy.com/wp-content/uploads/2023/12/image-3-768x259.png 768w" sizes="(max-width: 805px) 100vw, 805px" /></figure></div>


<p>This website also serves as a good point of reference. Before you begin applying any of the techniques in this article, go and check your EXE by uploading it into the site. Note down how many antiviruses are detecting your EXE as harmful. </p>



<p>Then as you apply each solution, one by one, keep rechecking to see whether there was any improvement.</p>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<hr>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<h2 class="wp-block-heading">Solutions: Pyinstaller EXE detected as Virus</h2>



<p>A list of solutions for how to avoid your application being flagged by an antivirus. If you have any suggestions, let us know in the comments section, and we will add them to this list. </p>



<p><br></p>



<h3 class="wp-block-heading">1. Avoid onefile Mode:</h3>



<p><strong>Explanation:</strong><br>Using PyInstaller&#8217;s onefile mode compiles the Python interpreter, your script, and all dependencies into a single compressed executable. This compression can trigger false positives in antivirus scans due to the executable&#8217;s compressed nature.</p>



<p><strong>Steps:</strong></p>



<ol>
<li>Open your terminal or command prompt.</li>



<li>Navigate to your project directory.</li>



<li>Instead of using <code>--onefile</code> in your PyInstaller command, opt for a bundled directory structure by excluding the <code>--onefile</code> option. You can also manually specify the directory mode by using the <code>--onedir</code> option.</li>
</ol>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<hr>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<h3 class="wp-block-heading">2. Build the PyInstaller Bootloader Yourself:</h3>



<p><strong>Explanation:</strong><br>Building the PyInstaller bootloader from source allows you to create a customized version, reducing the likelihood of triggering antivirus alerts. By default, PyInstaller comes with pre-compiled bootloader binaries for different Operating Systems. By compiling the bootloader on your own system, you make the process more consistent (and unique) potentially avoiding patterns that resemble malicious software.</p>



<p><strong>Steps:</strong></p>



<ol>
<li>Delete any existing PyInstaller related files from your project, such as the <code>build</code>, <code>dist</code>, and <code>__pycache__</code> folders. </li>



<li>Uninstall PyInstaller using the command:  <code>pip uninstall pyinstaller</code>.</li>



<li>Download and Install a C/C++ compiler (if you don&#8217;t already have one). For Windows Users, the easiest way of doing this (with very little manual work required) is to download the<a href="https://visualstudio.microsoft.com/vs/features/cplusplus/" target="_blank" rel="noreferrer noopener"> Visual Studio C/C++ compiler</a>. </li>



<li>Clone the PyInstaller repository from GitHub, or download it as a Zip file. Extract the contents of the folder, and place them in the directory where you want PyInstaller to be installed. </li>



<li>Navigate to the bootloader subdirectory in the PyInstaller folder. </li>



<li>To compile the bootloader, run the following command:  <code>python ./waf all</code>  (If this command doesn&#8217;t work, refer to this <a href="https://pyinstaller.org/en/v3.6/bootloader-building.html" target="_blank" rel="noreferrer noopener">documentation page for PyInstaller</a> which explains how to compile the bootloader in detail).</li>



<li>Now go (<code>cd</code>) into the folder you created (or chose) for installing PyInstaller, and run the following command:  <code>python.exe setup.py install</code></li>



<li>Now rebuild your EXE using your new PyInstaller library. </li>



<li>Upload the newly created EXE to the virustotal website to check if there was any improvement. </li>
</ol>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<hr>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<h3 class="wp-block-heading">3. Code Signing Certificate:</h3>



<p><strong>Explanation:</strong><br>Obtaining a code signing certificate is a proactive measure to establish the legitimacy of your application. Code signing involves digitally signing your executable with a certificate issued by a trusted certificate authority (CA). This enhances the trustworthiness of your application and reduces the likelihood of triggering antivirus detections.</p>



<p><strong>Steps:</strong></p>



<ol>
<li>Obtain a code signing certificate from a trusted certificate authority. Here is a <a href="https://learn.microsoft.com/en-us/windows-hardware/drivers/dashboard/code-signing-cert-manage" target="_blank" rel="noreferrer noopener">list of certificate providers</a> that Microsoft recommends. </li>



<li>Sign your PyInstaller-generated executable using a tool like <code>signtool</code> or integrated signing options in your development environment.</li>
</ol>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<hr>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<h3 class="wp-block-heading">4. Use Nuitka as an Alternative</h3>



<p><strong>Explanation:</strong><br>Nuitka, an alternative to PyInstaller, takes a different approach by converting Python scripts into optimized C code before compilation. This process results in executables that may have a lower chance of triggering antivirus alerts, making it a viable alternative for developers facing persistent issues with PyInstaller. Nuitka has much of the same features as PyInstaller, such as onefile mode. On top of all this, Nuitka is also faster and more secure than PyInstaller. Only downside is the extra time taken for compiling, as it involves multiple stages (convert to C, then compile). </p>



<p><strong>Steps:</strong></p>



<ol>
<li>Install Nuitka using the recommended method for your operating system. This can be done using the command <code>pip install nuitka</code>.</li>



<li>Compile your Python script using the Nuitka compiler using the command:<code> python -m nuitka --standalone yourfile.py</code></li>



<li>Distribute the generated executable to users.</li>
</ol>



<p>For a more detailed tutorial on Nuitka, and how to customize it, refer to <a href="https://coderslegacy.com/python/nuitka-tutorial/">this guide</a>. </p>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<hr>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<h3 class="wp-block-heading">5. Utilize Inno Setup or Similar Tools:</h3>



<p><strong>Explanation:</strong><br>Packaging your application with tools like Inno Setup provides a workaround to antivirus detection by creating a more traditional installer. This method avoids direct reliance on PyInstaller&#8217;s executable and may reduce the likelihood of false positives. If your application is getting flagged before it even gets to run, this solution will most likely help (as the Inno Setup created EXE is more trustworthy).</p>



<p><strong>Steps:</strong></p>



<ol>
<li>Download and install Inno Setup or a similar packaging tool.</li>



<li>Follow the script wizard which Inno Setup will prompt you with to create a configuration script for your application. This is fairly easy to follow along with. </li>



<li>Include your PyInstaller-generated executable and dependencies in the installer package (part of the script wizard process).</li>



<li>Compile the script to generate a distributable installer for your application.</li>
</ol>



<p>If you need a detailed guide with screenshots of all steps, here is a link to <a href="https://coderslegacy.com/deploy-your-python-code-with-inno-setup/">our Inno Setup Guide</a>. </p>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<hr>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<h2 class="wp-block-heading">6. Submit a report to the Antivirus Organization</h2>



<p><strong>Explanation:</strong><br>Many antivirus software come with a reporting feature, which allow you to report false positives. They will then review your application, and update their virus definitions based on the report. If there is a particular antivirus which is causing you trouble, this will be a good option. </p>



<p><strong>Steps:</strong></p>



<ol>
<li>Use the virustotal website to determine which antiviruses are flagging your application.</li>



<li>Use the report feature (if available) to have your application greenlit. </li>
</ol>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<hr>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<h2 class="wp-block-heading">Conclusion</h2>



<p>Whether through adjusting PyInstaller settings, exploring alternative compilation tools like Nuitka, utilizing packaging tools like Inno Setup, or purchasing code signing certificates, developers have a range of strategies to overcome antivirus detection hurdles and ensure their applications reach users seamlessly. All you need is a little effort (or lots of money!)</p>



<p><strong>This marks the end of the &#8220;Pyinstaller EXE detected as Virus?&#8221; Article. Any questions about the article content can be asked in the comments section below. </strong></p>
<p>The post <a href="https://coderslegacy.com/pyinstaller-exe-detected-as-virus-solutions/">Pyinstaller EXE detected as Virus? (Solutions and Alternatives)</a> appeared first on <a href="https://coderslegacy.com">CodersLegacy</a>.</p>]]></description>
                <pubDate>Sat, 23 Dec 2023 16:41:12 +0200</pubDate>
                <guid isPermaLink="false">https://api.follow.it/track-rss-story-click/v3/Pni2oPawGk3Nj6sSZ8vzSjRQaTQYXBS9</guid>
            </item>
                    <item>
                <title><![CDATA[Selenium: How to scroll to the Bottom of the Page (Python)]]></title>
                <link>https://api.follow.it/track-rss-story-click/v3/Pni2oPawGk1kRcKk4Y6vlASngkwrdsok</link>
                <description><![CDATA[<img src="https://api.follow.it/track-rss-story-loaded/v1/6F5LrVSwkA3JFRj0NQKtXOT5HJgy6HUf" border=0 width="1" height="1" alt="Selenium: How to scroll to the Bottom of the Page (Python)" title="Selenium: How to scroll to the Bottom of the Page (Python)"> <p>In this tutorial, we will explore how to use Selenium in Python to scroll to the bottom of a webpage gradually. Scrolling is often required when dealing with dynamically loading content or capturing data from a website that requires scrolling to access all information. </p>



<p>Common examples of such sites are YouTube (shorts) where videos are generated as you scroll down. Another example is e-commerce sites which display alot of products, and use lazy-loading on their images (to load the images only as you scroll down to them). </p>



<p>Many such sites exist, hence learning how to automate scrolling is necessary. </p>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<hr>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<h2 class="wp-block-heading">Prerequisites</h2>



<p>Before you begin, make sure you have Python and the necessary packages installed. You can install the required packages using the following:</p>



<pre class="wp-block-code"><code>pip install selenium webdriver_manager</code></pre>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<hr>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<h2 class="wp-block-heading">Setting up Selenium with ChromeDriver</h2>



<p>First, let&#8217;s set up Selenium with ChromeDriver. We&#8217;ll use <code>webdriver_manager</code> to <a href="https://coderslegacy.com/install-webdriver_manager-chrome-selenium-python/">automatically download and manage</a> the ChromeDriver executable (Follow the link to learn how to use this module for the other browsers). </p>



<div class="wp-block-kevinbatdorf-code-block-pro" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:block;padding:16px 0 0 16px;margin-bottom:-1px;width:100%;text-align:left;background-color:#2e3440ff"><svg xmlns="http://www.w3.org/2000/svg" width="54" height="14" viewBox="0 0 54 14"><g fill="none" fill-rule="evenodd" transform="translate(1 1)"><circle cx="6" cy="6" r="6" fill="#FF5F56" stroke="#E0443E" stroke-width=".5"></circle><circle cx="26" cy="6" r="6" fill="#FFBD2E" stroke="#DEA123" stroke-width=".5"></circle><circle cx="46" cy="6" r="6" fill="#27C93F" stroke="#1AAB29" stroke-width=".5"></circle></g></svg></span><span role="button" tabindex="0" data-code="from webdriver_manager.chrome import ChromeDriverManager
from selenium.webdriver.chrome.service import Service as ChromeService
from selenium import webdriver
import time

# Set up ChromeDriver
service = ChromeService(executable_path=ChromeDriverManager().install())
driver = webdriver.Chrome(service=service)
" style="color:#d8dee9ff;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path></svg></span><pre class="shiki nord" style="background-color: #2e3440ff" tabindex="0"><code><span class="line"><span style="color: #81A1C1">from</span><span style="color: #D8DEE9FF"> webdriver_manager</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">chrome </span><span style="color: #81A1C1">import</span><span style="color: #D8DEE9FF"> ChromeDriverManager</span></span>
<span class="line"><span style="color: #81A1C1">from</span><span style="color: #D8DEE9FF"> selenium</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">webdriver</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">chrome</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">service </span><span style="color: #81A1C1">import</span><span style="color: #D8DEE9FF"> Service </span><span style="color: #81A1C1">as</span><span style="color: #D8DEE9FF"> ChromeService</span></span>
<span class="line"><span style="color: #81A1C1">from</span><span style="color: #D8DEE9FF"> selenium </span><span style="color: #81A1C1">import</span><span style="color: #D8DEE9FF"> webdriver</span></span>
<span class="line"><span style="color: #81A1C1">import</span><span style="color: #D8DEE9FF"> time</span></span>
<span class="line"></span>
<span class="line"><span style="color: #616E88"># Set up ChromeDriver</span></span>
<span class="line"><span style="color: #D8DEE9FF">service </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">ChromeService</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9">executable_path</span><span style="color: #81A1C1">=</span><span style="color: #88C0D0">ChromeDriverManager</span><span style="color: #ECEFF4">().</span><span style="color: #88C0D0">install</span><span style="color: #ECEFF4">())</span></span>
<span class="line"><span style="color: #D8DEE9FF">driver </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> webdriver</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">Chrome</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9">service</span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF">service</span><span style="color: #ECEFF4">)</span></span>
<span class="line"></span></code></pre></div>



<p>Next, we load up the webpage we wish to scrape (or automate). We will be using Wikipedia as an example, as its main page is usually lengthy enough to demonstrate the scroll effect. </p>



<div class="wp-block-kevinbatdorf-code-block-pro" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:block;padding:16px 0 0 16px;margin-bottom:-1px;width:100%;text-align:left;background-color:#2e3440ff"><svg xmlns="http://www.w3.org/2000/svg" width="54" height="14" viewBox="0 0 54 14"><g fill="none" fill-rule="evenodd" transform="translate(1 1)"><circle cx="6" cy="6" r="6" fill="#FF5F56" stroke="#E0443E" stroke-width=".5"></circle><circle cx="26" cy="6" r="6" fill="#FFBD2E" stroke="#DEA123" stroke-width=".5"></circle><circle cx="46" cy="6" r="6" fill="#27C93F" stroke="#1AAB29" stroke-width=".5"></circle></g></svg></span><span role="button" tabindex="0" data-code="driver.get(&quot;https://en.wikipedia.org/wiki/Main_Page&quot;)" style="color:#d8dee9ff;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path></svg></span><pre class="shiki nord" style="background-color: #2e3440ff" tabindex="0"><code><span class="line"><span style="color: #D8DEE9FF">driver</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">get</span><span style="color: #ECEFF4">(</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">https://en.wikipedia.org/wiki/Main_Page</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">)</span></span></code></pre></div>



<p>You may replace this with any other URL. The scrolling technique we will learn in this tutorial is not url-specific. </p>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<hr>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<h2 class="wp-block-heading">Scrolling Down Gradually</h2>



<p>Now, let&#8217;s define a JavaScript function to scroll down gradually. This function will be executed using the <code>execute_script</code> function, which takes JavaScript code as a parameter in the form of a string.</p>



<div class="wp-block-kevinbatdorf-code-block-pro" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:block;padding:16px 0 0 16px;margin-bottom:-1px;width:100%;text-align:left;background-color:#2e3440ff"><svg xmlns="http://www.w3.org/2000/svg" width="54" height="14" viewBox="0 0 54 14"><g fill="none" fill-rule="evenodd" transform="translate(1 1)"><circle cx="6" cy="6" r="6" fill="#FF5F56" stroke="#E0443E" stroke-width=".5"></circle><circle cx="26" cy="6" r="6" fill="#FFBD2E" stroke="#DEA123" stroke-width=".5"></circle><circle cx="46" cy="6" r="6" fill="#27C93F" stroke="#1AAB29" stroke-width=".5"></circle></g></svg></span><span role="button" tabindex="0" data-code="scroll_script = &quot;&quot;&quot;
    function scrollToBottom() {
        var scrollHeight = Math.max(document.documentElement.scrollHeight, document.body.scrollHeight);
        var scrollStep = 200;  // Adjust this value to control the scroll speed
        var scrollInterval = 100;  // Adjust this value to control the scroll interval

        function scroll() {
            window.scrollBy(0, scrollStep);
            var reachedBottom = window.innerHeight + window.scrollY &gt;= scrollHeight;

            if (!reachedBottom) {
                setTimeout(scroll, scrollInterval);
            }
        }

        scroll();
    }

    scrollToBottom();
&quot;&quot;&quot;

driver.execute_script(scroll_script)
driver.quit()" style="color:#d8dee9ff;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path></svg></span><pre class="shiki nord" style="background-color: #2e3440ff" tabindex="0"><code><span class="line"><span style="color: #D8DEE9FF">scroll_script </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color: #A3BE8C">    function scrollToBottom() {</span></span>
<span class="line"><span style="color: #A3BE8C">        var scrollHeight = Math.max(document.documentElement.scrollHeight, document.body.scrollHeight);</span></span>
<span class="line"><span style="color: #A3BE8C">        var scrollStep = 200;  // Adjust this value to control the scroll speed</span></span>
<span class="line"><span style="color: #A3BE8C">        var scrollInterval = 100;  // Adjust this value to control the scroll interval</span></span>
<span class="line"></span>
<span class="line"><span style="color: #A3BE8C">        function scroll() {</span></span>
<span class="line"><span style="color: #A3BE8C">            window.scrollBy(0, scrollStep);</span></span>
<span class="line"><span style="color: #A3BE8C">            var reachedBottom = window.innerHeight + window.scrollY &gt;= scrollHeight;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #A3BE8C">            if (!reachedBottom) {</span></span>
<span class="line"><span style="color: #A3BE8C">                setTimeout(scroll, scrollInterval);</span></span>
<span class="line"><span style="color: #A3BE8C">            }</span></span>
<span class="line"><span style="color: #A3BE8C">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color: #A3BE8C">        scroll();</span></span>
<span class="line"><span style="color: #A3BE8C">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color: #A3BE8C">    scrollToBottom();</span></span>
<span class="line"><span style="color: #ECEFF4">&quot;&quot;&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D8DEE9FF">driver</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">execute_script</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9FF">scroll_script</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">driver</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">quit</span><span style="color: #ECEFF4">()</span></span></code></pre></div>



<p>Adjust the values of <code>scrollStep</code> and <code>scrollInterval</code> to control the scroll speed and interval between scrolls, respectively. If your internet connection is slow, or the website is heavy/slow, you may want to reduce the scroll speed (by lowering interval and scroll step) so that the site loads alongside the scroll. </p>



<p>This code may seem a little complicated, but just remember there is only one &#8220;core&#8221; line of code here, the <code>window.scrollBy</code> function.</p>



<div class="wp-block-kevinbatdorf-code-block-pro" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:block;padding:16px 0 0 16px;margin-bottom:-1px;width:100%;text-align:left;background-color:#2e3440ff"><svg xmlns="http://www.w3.org/2000/svg" width="54" height="14" viewBox="0 0 54 14"><g fill="none" fill-rule="evenodd" transform="translate(1 1)"><circle cx="6" cy="6" r="6" fill="#FF5F56" stroke="#E0443E" stroke-width=".5"></circle><circle cx="26" cy="6" r="6" fill="#FFBD2E" stroke="#DEA123" stroke-width=".5"></circle><circle cx="46" cy="6" r="6" fill="#27C93F" stroke="#1AAB29" stroke-width=".5"></circle></g></svg></span><span role="button" tabindex="0" data-code="window.scrollBy(0, scrollStep)" style="color:#d8dee9ff;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path></svg></span><pre class="shiki nord" style="background-color: #2e3440ff" tabindex="0"><code><span class="line"><span style="color: #D8DEE9FF">window</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">scrollBy</span><span style="color: #ECEFF4">(</span><span style="color: #B48EAD">0</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> scrollStep</span><span style="color: #ECEFF4">)</span></span></code></pre></div>



<p>This function is responsible for the actual &#8220;scrolling&#8221;. The rest of the code is simply built around this line, to ensure we don&#8217;t scroll beyond the limit of the page. The window object contains useful information about the page which can be used to determine when we have reached the end.</p>



<div class="wp-block-kevinbatdorf-code-block-pro" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:block;padding:16px 0 0 16px;margin-bottom:-1px;width:100%;text-align:left;background-color:#2e3440ff"><svg xmlns="http://www.w3.org/2000/svg" width="54" height="14" viewBox="0 0 54 14"><g fill="none" fill-rule="evenodd" transform="translate(1 1)"><circle cx="6" cy="6" r="6" fill="#FF5F56" stroke="#E0443E" stroke-width=".5"></circle><circle cx="26" cy="6" r="6" fill="#FFBD2E" stroke="#DEA123" stroke-width=".5"></circle><circle cx="46" cy="6" r="6" fill="#27C93F" stroke="#1AAB29" stroke-width=".5"></circle></g></svg></span><span role="button" tabindex="0" data-code="var reachedBottom = window.innerHeight + window.scrollY &gt;= scrollHeight;" style="color:#d8dee9ff;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path></svg></span><pre class="shiki nord" style="background-color: #2e3440ff" tabindex="0"><code><span class="line"><span style="color: #D8DEE9FF">var reachedBottom </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> window</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">innerHeight </span><span style="color: #81A1C1">+</span><span style="color: #D8DEE9FF"> window</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">scrollY </span><span style="color: #81A1C1">&gt;=</span><span style="color: #D8DEE9FF"> scrollHeight</span><span style="color: #D8DEE9">;</span></span></code></pre></div>



<p>The above line is an expression which evaluates to True if we have reached the bottom of the page. It is calculated by checking if the sum of the current viewport height and scroll position is equal to or greater than the total scrollable height.</p>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<hr>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<p>This marks the end of the Selenium Tutorial on How to scroll to the Bottom of the Page. Any suggestions or contributions for CodersLegacy are more than welcome. Questions regarding the tutorial content can be asked in the comments section below.</p>
<p>The post <a href="https://coderslegacy.com/selenium-scroll-to-bottom-of-page-python/">Selenium: How to scroll to the Bottom of the Page (Python)</a> appeared first on <a href="https://coderslegacy.com">CodersLegacy</a>.</p>]]></description>
                <pubDate>Fri, 22 Dec 2023 09:54:57 +0200</pubDate>
                <guid isPermaLink="false">https://api.follow.it/track-rss-story-click/v3/Pni2oPawGk1kRcKk4Y6vlASngkwrdsok</guid>
            </item>
                    <item>
                <title><![CDATA[How to disable the Cache in Selenium]]></title>
                <link>https://api.follow.it/track-rss-story-click/v3/Pni2oPawGk1rw7o5QtGy5RhSCv31NykC</link>
                <description><![CDATA[<img src="https://api.follow.it/track-rss-story-loaded/v1/hhFpj1qWh2ipogqy7CNcMuT5HJgy6HUf" border=0 width="1" height="1" alt="How to disable the Cache in Selenium" title="How to disable the Cache in Selenium"> <p>Selenium is a powerful tool for automating web applications, but one common challenge faced by automation testers is dealing with browser caching. Caching can sometimes interfere with the accuracy of your Selenium tests, leading to unexpected results. In this tutorial, we&#8217;ll explore how to disable the cache in Selenium to ensure that your automated tests run smoothly and produce reliable results.</p>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<hr>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<h2 class="wp-block-heading">Why Disable Cache in Selenium?</h2>



<p>Browser caching is a mechanism that stores copies of web pages to reduce loading times. While this is beneficial for regular browsing, it can be a hindrance during automated testing.</p>



<p>For example, during stress testing for a website, if the cache is used after the initial page load, then it will not be a good stress test, as the only time the server is used, is the initial page load. Furthermore, caching may lead to outdated content being served, making it difficult to verify the correctness of your web application through Selenium tests.</p>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<hr>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<h2 class="wp-block-heading">How to Disable the Browser Cache in Selenium</h2>



<p>Disabling the browser cache is no easy task. Selenium itself has little control over the browser cache, thus we cannot directly disable it. It also does not help that other factors come into play and make things difficult, such as different browsers exhibiting different behaviors, and different versions for each browser causing certain methods to fail or become outdated.</p>



<p>There are various techniques that we have compiled here for you to try out, with a short description on how they work, and what effect they have on the cache. </p>



<p><br></p>



<h3 class="wp-block-heading">1. Setting cache size to 0</h3>



<p>This sets the size of the cache to 0, ideally preventing the cache from ever forming. </p>



<div class="wp-block-kevinbatdorf-code-block-pro" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:block;padding:16px 0 0 16px;margin-bottom:-1px;width:100%;text-align:left;background-color:#2e3440ff"><svg xmlns="http://www.w3.org/2000/svg" width="54" height="14" viewBox="0 0 54 14"><g fill="none" fill-rule="evenodd" transform="translate(1 1)"><circle cx="6" cy="6" r="6" fill="#FF5F56" stroke="#E0443E" stroke-width=".5"></circle><circle cx="26" cy="6" r="6" fill="#FFBD2E" stroke="#DEA123" stroke-width=".5"></circle><circle cx="46" cy="6" r="6" fill="#27C93F" stroke="#1AAB29" stroke-width=".5"></circle></g></svg></span><span role="button" tabindex="0" data-code="from webdriver_manager.chrome import ChromeDriverManager
from selenium.webdriver.chrome.service import Service as ChromeService
from selenium import webdriver

chrome_options = webdriver.ChromeOptions()
chrome_options.add_argument(&quot;--disk-cache-size=0&quot;) &lt;--

service = ChromeService(executable_path=ChromeDriverManager().install())
driver = webdriver.Chrome(service=service, options=chrome_options)" style="color:#d8dee9ff;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path></svg></span><pre class="shiki nord" style="background-color: #2e3440ff" tabindex="0"><code><span class="line"><span style="color: #81A1C1">from</span><span style="color: #D8DEE9FF"> webdriver_manager</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">chrome </span><span style="color: #81A1C1">import</span><span style="color: #D8DEE9FF"> ChromeDriverManager</span></span>
<span class="line"><span style="color: #81A1C1">from</span><span style="color: #D8DEE9FF"> selenium</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">webdriver</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">chrome</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">service </span><span style="color: #81A1C1">import</span><span style="color: #D8DEE9FF"> Service </span><span style="color: #81A1C1">as</span><span style="color: #D8DEE9FF"> ChromeService</span></span>
<span class="line"><span style="color: #81A1C1">from</span><span style="color: #D8DEE9FF"> selenium </span><span style="color: #81A1C1">import</span><span style="color: #D8DEE9FF"> webdriver</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D8DEE9FF">chrome_options </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> webdriver</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">ChromeOptions</span><span style="color: #ECEFF4">()</span></span>
<span class="line"><span style="color: #D8DEE9FF">chrome_options</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">add_argument</span><span style="color: #ECEFF4">(</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">--disk-cache-size=0</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">)</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">&lt;</span><span style="color: #D8DEE9">--</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D8DEE9FF">service </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">ChromeService</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9">executable_path</span><span style="color: #81A1C1">=</span><span style="color: #88C0D0">ChromeDriverManager</span><span style="color: #ECEFF4">().</span><span style="color: #88C0D0">install</span><span style="color: #ECEFF4">())</span></span>
<span class="line"><span style="color: #D8DEE9FF">driver </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> webdriver</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">Chrome</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9">service</span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF">service</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">options</span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF">chrome_options</span><span style="color: #ECEFF4">)</span></span></code></pre></div>



<p>Note, that arguments can vary from browser to browser. This may not work for other browsers other than Chrome. </p>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<hr>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<h3 class="wp-block-heading">2. Use incognito mode</h3>



<p>Activating incognito mode disables many things like cache and cookies.</p>



<div class="wp-block-kevinbatdorf-code-block-pro" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:block;padding:16px 0 0 16px;margin-bottom:-1px;width:100%;text-align:left;background-color:#2e3440ff"><svg xmlns="http://www.w3.org/2000/svg" width="54" height="14" viewBox="0 0 54 14"><g fill="none" fill-rule="evenodd" transform="translate(1 1)"><circle cx="6" cy="6" r="6" fill="#FF5F56" stroke="#E0443E" stroke-width=".5"></circle><circle cx="26" cy="6" r="6" fill="#FFBD2E" stroke="#DEA123" stroke-width=".5"></circle><circle cx="46" cy="6" r="6" fill="#27C93F" stroke="#1AAB29" stroke-width=".5"></circle></g></svg></span><span role="button" tabindex="0" data-code="from webdriver_manager.chrome import ChromeDriverManager
from selenium.webdriver.chrome.service import Service as ChromeService
from selenium import webdriver

chrome_options = webdriver.ChromeOptions()
chrome_options.add_argument(&quot;--incognito&quot;) &lt;--

service = ChromeService(executable_path=ChromeDriverManager().install())
driver = webdriver.Chrome(service=service, options=chrome_options)" style="color:#d8dee9ff;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path></svg></span><pre class="shiki nord" style="background-color: #2e3440ff" tabindex="0"><code><span class="line"><span style="color: #81A1C1">from</span><span style="color: #D8DEE9FF"> webdriver_manager</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">chrome </span><span style="color: #81A1C1">import</span><span style="color: #D8DEE9FF"> ChromeDriverManager</span></span>
<span class="line"><span style="color: #81A1C1">from</span><span style="color: #D8DEE9FF"> selenium</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">webdriver</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">chrome</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">service </span><span style="color: #81A1C1">import</span><span style="color: #D8DEE9FF"> Service </span><span style="color: #81A1C1">as</span><span style="color: #D8DEE9FF"> ChromeService</span></span>
<span class="line"><span style="color: #81A1C1">from</span><span style="color: #D8DEE9FF"> selenium </span><span style="color: #81A1C1">import</span><span style="color: #D8DEE9FF"> webdriver</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D8DEE9FF">chrome_options </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> webdriver</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">ChromeOptions</span><span style="color: #ECEFF4">()</span></span>
<span class="line"><span style="color: #D8DEE9FF">chrome_options</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">add_argument</span><span style="color: #ECEFF4">(</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">--incognito</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">)</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">&lt;</span><span style="color: #D8DEE9">--</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D8DEE9FF">service </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">ChromeService</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9">executable_path</span><span style="color: #81A1C1">=</span><span style="color: #88C0D0">ChromeDriverManager</span><span style="color: #ECEFF4">().</span><span style="color: #88C0D0">install</span><span style="color: #ECEFF4">())</span></span>
<span class="line"><span style="color: #D8DEE9FF">driver </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> webdriver</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">Chrome</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9">service</span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF">service</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">options</span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF">chrome_options</span><span style="color: #ECEFF4">)</span></span></code></pre></div>



<p>For Firefox, you will use the &#8211;private argument instead. Other browsers may have different versions of this argument too.</p>



<div class="wp-block-kevinbatdorf-code-block-pro" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:block;padding:16px 0 0 16px;margin-bottom:-1px;width:100%;text-align:left;background-color:#2e3440ff"><svg xmlns="http://www.w3.org/2000/svg" width="54" height="14" viewBox="0 0 54 14"><g fill="none" fill-rule="evenodd" transform="translate(1 1)"><circle cx="6" cy="6" r="6" fill="#FF5F56" stroke="#E0443E" stroke-width=".5"></circle><circle cx="26" cy="6" r="6" fill="#FFBD2E" stroke="#DEA123" stroke-width=".5"></circle><circle cx="46" cy="6" r="6" fill="#27C93F" stroke="#1AAB29" stroke-width=".5"></circle></g></svg></span><span role="button" tabindex="0" data-code="from webdriver_manager.firefox import GeckoDriverManager
from selenium.webdriver.firefox.service import Service as FirefoxService
from selenium import webdriver

firefox_options = webdriver.FirefoxOptions()
firefox_options.add_argument('--private')

service = FirefoxService(executable_path=GeckoDriverManager().install())
driver = webdriver.Chrome(service=service, options=firefox_options)" style="color:#d8dee9ff;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path></svg></span><pre class="shiki nord" style="background-color: #2e3440ff" tabindex="0"><code><span class="line"><span style="color: #81A1C1">from</span><span style="color: #D8DEE9FF"> webdriver_manager</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">firefox </span><span style="color: #81A1C1">import</span><span style="color: #D8DEE9FF"> GeckoDriverManager</span></span>
<span class="line"><span style="color: #81A1C1">from</span><span style="color: #D8DEE9FF"> selenium</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">webdriver</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">firefox</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">service </span><span style="color: #81A1C1">import</span><span style="color: #D8DEE9FF"> Service </span><span style="color: #81A1C1">as</span><span style="color: #D8DEE9FF"> FirefoxService</span></span>
<span class="line"><span style="color: #81A1C1">from</span><span style="color: #D8DEE9FF"> selenium </span><span style="color: #81A1C1">import</span><span style="color: #D8DEE9FF"> webdriver</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D8DEE9FF">firefox_options </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> webdriver</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">FirefoxOptions</span><span style="color: #ECEFF4">()</span></span>
<span class="line"><span style="color: #D8DEE9FF">firefox_options</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">add_argument</span><span style="color: #ECEFF4">(</span><span style="color: #ECEFF4">&#39;</span><span style="color: #A3BE8C">--private</span><span style="color: #ECEFF4">&#39;</span><span style="color: #ECEFF4">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D8DEE9FF">service </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">FirefoxService</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9">executable_path</span><span style="color: #81A1C1">=</span><span style="color: #88C0D0">GeckoDriverManager</span><span style="color: #ECEFF4">().</span><span style="color: #88C0D0">install</span><span style="color: #ECEFF4">())</span></span>
<span class="line"><span style="color: #D8DEE9FF">driver </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> webdriver</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">Chrome</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9">service</span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF">service</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">options</span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF">firefox_options</span><span style="color: #ECEFF4">)</span></span></code></pre></div>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<hr>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<h3 class="wp-block-heading">3. Forcing a hard Refresh</h3>



<p>You can re-load the page without the cache in most browser by using a keyboard shortcut. For Chrome and Firefox, the shortcut is CTRL + SHIFT + R (command instead of control for apple devices). These keys must be sent on an element however, so locate an important/big container element on the web page you are accessing (e.g. body), and send these keys on that element. </p>



<div class="wp-block-kevinbatdorf-code-block-pro" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:block;padding:16px 0 0 16px;margin-bottom:-1px;width:100%;text-align:left;background-color:#2e3440ff"><svg xmlns="http://www.w3.org/2000/svg" width="54" height="14" viewBox="0 0 54 14"><g fill="none" fill-rule="evenodd" transform="translate(1 1)"><circle cx="6" cy="6" r="6" fill="#FF5F56" stroke="#E0443E" stroke-width=".5"></circle><circle cx="26" cy="6" r="6" fill="#FFBD2E" stroke="#DEA123" stroke-width=".5"></circle><circle cx="46" cy="6" r="6" fill="#27C93F" stroke="#1AAB29" stroke-width=".5"></circle></g></svg></span><span role="button" tabindex="0" data-code="driver.get(&quot;https://example.com&quot;)

element = driver.find_element(By.XPATH, &quot;//body&quot;)
element.send_keys(Keys.CONTROL, Keys.SHIFT, &quot;R&quot;)" style="color:#d8dee9ff;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path></svg></span><pre class="shiki nord" style="background-color: #2e3440ff" tabindex="0"><code><span class="line"><span style="color: #D8DEE9FF">driver</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">get</span><span style="color: #ECEFF4">(</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">https://example.com</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D8DEE9FF">element </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> driver</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">find_element</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9FF">By</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">XPATH</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">//body</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">element</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">send_keys</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9FF">Keys</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">CONTROL</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> Keys</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">SHIFT</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">R</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">)</span></span></code></pre></div>



<p>CTRL + F5 is another popular shortcut for refreshing that works on most browsers. </p>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<hr>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<h3 class="wp-block-heading">4. Automate the Clear Cache Action</h3>



<p>One foolproof method of bypassing the cache, is to simply automate the clear cache action in the browser, the way you normally would (as a human). On the Chrome Browser, if you visit the URL, <em>chrome://settings/clearBrowserData</em>, you will see the following window popup. </p>


<div class="wp-block-image">
<figure class="aligncenter size-full is-resized"><img fetchpriority="high" decoding="async" width="639" height="594" src="https://coderslegacy.com/wp-content/uploads/2023/12/image-2.png" alt="How to disable the Cache in Selenium" class="wp-image-15333" style="width:400px" srcset="https://coderslegacy.com/wp-content/uploads/2023/12/image-2.png 639w, https://coderslegacy.com/wp-content/uploads/2023/12/image-2-300x279.png 300w" sizes="(max-width: 639px) 100vw, 639px" /></figure></div>


<p>All we have to do is automate the &#8220;click&#8221; action for that button. This can be done with the following code:</p>



<div class="wp-block-kevinbatdorf-code-block-pro" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:block;padding:16px 0 0 16px;margin-bottom:-1px;width:100%;text-align:left;background-color:#2e3440ff"><svg xmlns="http://www.w3.org/2000/svg" width="54" height="14" viewBox="0 0 54 14"><g fill="none" fill-rule="evenodd" transform="translate(1 1)"><circle cx="6" cy="6" r="6" fill="#FF5F56" stroke="#E0443E" stroke-width=".5"></circle><circle cx="26" cy="6" r="6" fill="#FFBD2E" stroke="#DEA123" stroke-width=".5"></circle><circle cx="46" cy="6" r="6" fill="#27C93F" stroke="#1AAB29" stroke-width=".5"></circle></g></svg></span><span role="button" tabindex="0" data-code="import time
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.actions import mouse_button
from selenium.webdriver.common.by import By
from webdriver_manager.chrome import ChromeDriverManager
from selenium.webdriver.chrome.service import Service as ChromeService
from selenium import webdriver

chrome_options = webdriver.ChromeOptions()
service = ChromeService(executable_path=ChromeDriverManager().install())
driver = webdriver.Chrome(service=service, options=chrome_options)
driver.get(&quot;chrome://settings/clearBrowserData&quot;)

element = driver.find_element(By.XPATH, &quot;//settings-ui&quot;)
time.sleep(1)

element.send_keys(mouse_button.MouseButton.LEFT)
element.send_keys(Keys.ENTER)

time.sleep(3)
driver.quit()" style="color:#d8dee9ff;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path></svg></span><pre class="shiki nord" style="background-color: #2e3440ff" tabindex="0"><code><span class="line"><span style="color: #81A1C1">import</span><span style="color: #D8DEE9FF"> time</span></span>
<span class="line"><span style="color: #81A1C1">from</span><span style="color: #D8DEE9FF"> selenium</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">webdriver</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">common</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">keys </span><span style="color: #81A1C1">import</span><span style="color: #D8DEE9FF"> Keys</span></span>
<span class="line"><span style="color: #81A1C1">from</span><span style="color: #D8DEE9FF"> selenium</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">webdriver</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">common</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">actions </span><span style="color: #81A1C1">import</span><span style="color: #D8DEE9FF"> mouse_button</span></span>
<span class="line"><span style="color: #81A1C1">from</span><span style="color: #D8DEE9FF"> selenium</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">webdriver</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">common</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">by </span><span style="color: #81A1C1">import</span><span style="color: #D8DEE9FF"> By</span></span>
<span class="line"><span style="color: #81A1C1">from</span><span style="color: #D8DEE9FF"> webdriver_manager</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">chrome </span><span style="color: #81A1C1">import</span><span style="color: #D8DEE9FF"> ChromeDriverManager</span></span>
<span class="line"><span style="color: #81A1C1">from</span><span style="color: #D8DEE9FF"> selenium</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">webdriver</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">chrome</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">service </span><span style="color: #81A1C1">import</span><span style="color: #D8DEE9FF"> Service </span><span style="color: #81A1C1">as</span><span style="color: #D8DEE9FF"> ChromeService</span></span>
<span class="line"><span style="color: #81A1C1">from</span><span style="color: #D8DEE9FF"> selenium </span><span style="color: #81A1C1">import</span><span style="color: #D8DEE9FF"> webdriver</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D8DEE9FF">chrome_options </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> webdriver</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">ChromeOptions</span><span style="color: #ECEFF4">()</span></span>
<span class="line"><span style="color: #D8DEE9FF">service </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">ChromeService</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9">executable_path</span><span style="color: #81A1C1">=</span><span style="color: #88C0D0">ChromeDriverManager</span><span style="color: #ECEFF4">().</span><span style="color: #88C0D0">install</span><span style="color: #ECEFF4">())</span></span>
<span class="line"><span style="color: #D8DEE9FF">driver </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> webdriver</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">Chrome</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9">service</span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF">service</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">options</span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF">chrome_options</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">driver</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">get</span><span style="color: #ECEFF4">(</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">chrome://settings/clearBrowserData</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D8DEE9FF">element </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> driver</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">find_element</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9FF">By</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">XPATH</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">//settings-ui</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">time</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">sleep</span><span style="color: #ECEFF4">(</span><span style="color: #B48EAD">1</span><span style="color: #ECEFF4">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D8DEE9FF">element</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">send_keys</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9FF">mouse_button</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">MouseButton</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">LEFT</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">element</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">send_keys</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9FF">Keys</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">ENTER</span><span style="color: #ECEFF4">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D8DEE9FF">time</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">sleep</span><span style="color: #ECEFF4">(</span><span style="color: #B48EAD">3</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">driver</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">quit</span><span style="color: #ECEFF4">()</span></span></code></pre></div>



<p>This code looks a little complex, because of the various imports and setup statements required. It is also a bit complicated due to the fact that Chrome uses a rather strange way of creating the popup, meaning we cannot directly access the button. Hence, we have to select the popup container (settings-ui), click on it (left mouse button) to focus it, and then the enter button to submit the clear cache request. </p>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<hr>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<p>This marks the end of the &#8220;How to disable the Cache in Selenium&#8221; Tutorial. Any suggestions or contributions for CodersLegacy are more than welcome. Questions regarding the tutorial content can be asked in the comment section below.</p>
<p>The post <a href="https://coderslegacy.com/how-to-disable-the-cache-in-selenium/">How to disable the Cache in Selenium</a> appeared first on <a href="https://coderslegacy.com">CodersLegacy</a>.</p>]]></description>
                <pubDate>Tue, 19 Dec 2023 13:08:10 +0200</pubDate>
                <guid isPermaLink="false">https://api.follow.it/track-rss-story-click/v3/Pni2oPawGk1rw7o5QtGy5RhSCv31NykC</guid>
            </item>
                    <item>
                <title><![CDATA[Selenium Dynamic XPath Tutorial (All Commands)]]></title>
                <link>https://api.follow.it/track-rss-story-click/v3/Pni2oPawGk0EF6PmXjFwIc4HQhe4ZUzd</link>
                <description><![CDATA[<img src="https://api.follow.it/track-rss-story-loaded/v1/qRnr7nkr2R_JFRj0NQKtXOT5HJgy6HUf" border=0 width="1" height="1" alt="Selenium Dynamic XPath Tutorial (All Commands)" title="Selenium Dynamic XPath Tutorial (All Commands)"> <p>Welcome to the Dynamic XPath Tutorial using Selenium. In this tutorial we will explore over 20 different code snippets using XPath commands to retrieve elements from a web page in Selenium.  </p>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<hr>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>


				<div class="wp-block-uagb-table-of-contents uagb-toc__align-left uagb-toc__columns-1  uagb-block-9668bf62     "
					data-scroll= "1"
					data-offset= "30"
					style=""
				>
				<div class="uagb-toc__wrap">
						<div class="uagb-toc__title">
							Table Of Contents						</div>
																<div class="uagb-toc__list-wrap">
						<ol class="uagb-toc__list"><li class="uagb-toc__list"><a href="#prerequisites" class="uagb-toc-link__trigger">Prerequisites</a><li class="uagb-toc__list"><a href="#fetching-html-data-from-a-site" class="uagb-toc-link__trigger">Fetching HTML Data from a Site</a><li class="uagb-toc__list"><a href="#writing-xpath-commands-in-selenium" class="uagb-toc-link__trigger">Writing XPath Commands in Selenium</a><ul class="uagb-toc__list"><li class="uagb-toc__list"><a href="#select-the-title-of-the-page" class="uagb-toc-link__trigger">Select the Title of the Page:</a><li class="uagb-toc__list"><li class="uagb-toc__list"><a href="#access-the-login-link" class="uagb-toc-link__trigger">Access the Login Link:</a><li class="uagb-toc__list"><li class="uagb-toc__list"><a href="#find-the-text-of-all-quotes" class="uagb-toc-link__trigger">Find the Text of all Quotes</a><li class="uagb-toc__list"><li class="uagb-toc__list"><a href="#find-all-details-for-the-first-quote" class="uagb-toc-link__trigger">Find all details for the first Quote</a><li class="uagb-toc__list"><li class="uagb-toc__list"><a href="#find-text-of-quote-by-albert-einstein" class="uagb-toc-link__trigger">Find Text of Quote by Albert Einstein</a><li class="uagb-toc__list"><li class="uagb-toc__list"><a href="#retrieve-all-tag-links" class="uagb-toc-link__trigger">Retrieve All Tag Links:</a><li class="uagb-toc__list"><li class="uagb-toc__list"><a href="#retrieve-the-goodreads-link-in-the-footer" class="uagb-toc-link__trigger">Retrieve the GoodReads Link in the Footer:</a></ul></ol>					</div>
									</div>
				</div>
			


<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<hr>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<h2 class="wp-block-heading">Prerequisites </h2>



<p>The prerequisites to this tutorial is that you have Selenium setup properly on your system. For those who do not, here is a quick briefer on how to setup Selenium easily  for use with the Chrome Browser.</p>



<p>First install Selenium and the Webdriver Manager libraries:</p>



<pre class="wp-block-code"><code>pip install selenium
pip install webdriver_manager</code></pre>



<p>Next, write the following code into your Python file. All the code that we will write in this tutorial is meant to go where the comment is located.</p>



<div class="wp-block-kevinbatdorf-code-block-pro" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:block;padding:16px 0 0 16px;margin-bottom:-1px;width:100%;text-align:left;background-color:#2e3440ff"><svg xmlns="http://www.w3.org/2000/svg" width="54" height="14" viewBox="0 0 54 14"><g fill="none" fill-rule="evenodd" transform="translate(1 1)"><circle cx="6" cy="6" r="6" fill="#FF5F56" stroke="#E0443E" stroke-width=".5"></circle><circle cx="26" cy="6" r="6" fill="#FFBD2E" stroke="#DEA123" stroke-width=".5"></circle><circle cx="46" cy="6" r="6" fill="#27C93F" stroke="#1AAB29" stroke-width=".5"></circle></g></svg></span><span role="button" tabindex="0" data-code="from webdriver_manager.chrome import ChromeDriverManager
from selenium.webdriver.chrome.service import Service as ChromeService
from selenium.webdriver.common.by import By
from selenium import webdriver
import time

service = ChromeService(executable_path=ChromeDriverManager().install())

options = webdriver.ChromeOptions()
driver = webdriver.Chrome(options = options, service=service)

# CODE HERE

time.sleep(3)
driver.quit()" style="color:#d8dee9ff;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path></svg></span><pre class="shiki nord" style="background-color: #2e3440ff" tabindex="0"><code><span class="line"><span style="color: #88C0D0">from</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">webdriver_manager.chrome</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">import</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">ChromeDriverManager</span></span>
<span class="line"><span style="color: #88C0D0">from</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">selenium.webdriver.chrome.service</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">import</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">Service</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">as</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">ChromeService</span></span>
<span class="line"><span style="color: #88C0D0">from</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">selenium.webdriver.common.by</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">import</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">By</span></span>
<span class="line"><span style="color: #88C0D0">from</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">selenium</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">import</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">webdriver</span></span>
<span class="line"><span style="color: #88C0D0">import</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">time</span></span>
<span class="line"></span>
<span class="line"><span style="color: #88C0D0">service</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">ChromeService</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9">executable_path</span><span style="color: #81A1C1">=</span><span style="color: #A3BE8C">ChromeDriverManager</span><span style="color: #ECEFF4">()</span><span style="color: #A3BE8C">.install</span><span style="color: #ECEFF4">()</span><span style="color: #D8DEE9FF">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #88C0D0">options</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">webdriver.ChromeOptions</span><span style="color: #ECEFF4">()</span></span>
<span class="line"><span style="color: #88C0D0">driver</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">webdriver.Chrome</span><span style="color: #ECEFF4">(</span><span style="color: #88C0D0">options</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">options,</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">service=service</span><span style="color: #ECEFF4">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #616E88"># CODE HERE</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D8DEE9FF">time.sleep</span><span style="color: #ECEFF4">(</span><span style="color: #88C0D0">3</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #88C0D0">driver.quit</span><span style="color: #ECEFF4">()</span></span></code></pre></div>



<p>For a full guide on how to setup Selenium (with instructions on other browsers too), please refer to this <a href="https://coderslegacy.com/python/how-to-install-selenium-webdriver/">installation tutorial</a>. </p>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<hr>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<h2 class="wp-block-heading">Fetching HTML Data from a Site</h2>



<p>Now that we have our Selenium code setup, we will proceed to fetch data from our target site. This will be done using the <code>get()</code> function, which takes the URL of the site as a parameter, in the form of a string. </p>



<p>We will be practicing on the popular practice site (designed for scraping and automation):  <a href="https://quotes.toscrape.com/"><em>https://quotes.toscrape.com/</em></a></p>



<p>With the following code, we can &#8220;get&#8221; the required data from this site:</p>



<div class="wp-block-kevinbatdorf-code-block-pro" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:block;padding:16px 0 0 16px;margin-bottom:-1px;width:100%;text-align:left;background-color:#2e3440ff"><svg xmlns="http://www.w3.org/2000/svg" width="54" height="14" viewBox="0 0 54 14"><g fill="none" fill-rule="evenodd" transform="translate(1 1)"><circle cx="6" cy="6" r="6" fill="#FF5F56" stroke="#E0443E" stroke-width=".5"></circle><circle cx="26" cy="6" r="6" fill="#FFBD2E" stroke="#DEA123" stroke-width=".5"></circle><circle cx="46" cy="6" r="6" fill="#27C93F" stroke="#1AAB29" stroke-width=".5"></circle></g></svg></span><span role="button" tabindex="0" data-code="driver.get(&quot;https://quotes.toscrape.com/&quot;)" style="color:#d8dee9ff;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path></svg></span><pre class="shiki nord" style="background-color: #2e3440ff" tabindex="0"><code><span class="line"><span style="color: #D8DEE9FF">driver</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">get</span><span style="color: #ECEFF4">(</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">https://quotes.toscrape.com/</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">)</span></span></code></pre></div>



<p>Here is a picture of the site:</p>



<figure class="wp-block-image size-large"><img fetchpriority="high" decoding="async" width="1024" height="627" src="https://coderslegacy.com/wp-content/uploads/2023/12/image-1-1024x627.png" alt="Selenium Dynamic XPath Tutorial (All Commands)" class="wp-image-15316" srcset="https://coderslegacy.com/wp-content/uploads/2023/12/image-1-1024x627.png 1024w, https://coderslegacy.com/wp-content/uploads/2023/12/image-1-300x184.png 300w, https://coderslegacy.com/wp-content/uploads/2023/12/image-1-768x470.png 768w, https://coderslegacy.com/wp-content/uploads/2023/12/image-1.png 1484w" sizes="(max-width: 1024px) 100vw, 1024px" /></figure>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<hr>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<h2 class="wp-block-heading">Writing XPath Commands in Selenium</h2>



<p>We will be demonstrating over 20 different XPath expressions in this section. For the best possible experience, you should also open up the website in the browser (on desktop), and view the HTML source code side-by-side. </p>



<p>To write an XPath expression, we will use the <code>find_element</code> function, and pass the value By.XPATH into the first parameter. Make sure to setup the correct import for &#8220;By&#8221; (refer to the setup code at the beginning of the tutorial).</p>



<div class="wp-block-kevinbatdorf-code-block-pro" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:block;padding:16px 0 0 16px;margin-bottom:-1px;width:100%;text-align:left;background-color:#2e3440ff"><svg xmlns="http://www.w3.org/2000/svg" width="54" height="14" viewBox="0 0 54 14"><g fill="none" fill-rule="evenodd" transform="translate(1 1)"><circle cx="6" cy="6" r="6" fill="#FF5F56" stroke="#E0443E" stroke-width=".5"></circle><circle cx="26" cy="6" r="6" fill="#FFBD2E" stroke="#DEA123" stroke-width=".5"></circle><circle cx="46" cy="6" r="6" fill="#27C93F" stroke="#1AAB29" stroke-width=".5"></circle></g></svg></span><span role="button" tabindex="0" data-code="driver.find_element(By.XPATH, &quot;xpath_expression&quot;)" style="color:#d8dee9ff;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path></svg></span><pre class="shiki nord" style="background-color: #2e3440ff" tabindex="0"><code><span class="line"><span style="color: #D8DEE9FF">driver</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">find_element</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9FF">By</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">XPATH</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">xpath_expression</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">)</span></span></code></pre></div>



<p>If we expect to find multiple elements, we will instead use the <code>find_elements</code> function.</p>



<div class="wp-block-kevinbatdorf-code-block-pro" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:block;padding:16px 0 0 16px;margin-bottom:-1px;width:100%;text-align:left;background-color:#2e3440ff"><svg xmlns="http://www.w3.org/2000/svg" width="54" height="14" viewBox="0 0 54 14"><g fill="none" fill-rule="evenodd" transform="translate(1 1)"><circle cx="6" cy="6" r="6" fill="#FF5F56" stroke="#E0443E" stroke-width=".5"></circle><circle cx="26" cy="6" r="6" fill="#FFBD2E" stroke="#DEA123" stroke-width=".5"></circle><circle cx="46" cy="6" r="6" fill="#27C93F" stroke="#1AAB29" stroke-width=".5"></circle></g></svg></span><span role="button" tabindex="0" data-code="driver.find_elements(By.XPATH, &quot;xpath_expression&quot;)" style="color:#d8dee9ff;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path></svg></span><pre class="shiki nord" style="background-color: #2e3440ff" tabindex="0"><code><span class="line"><span style="color: #D8DEE9FF">driver</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">find_elements</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9FF">By</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">XPATH</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">xpath_expression</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">)</span></span></code></pre></div>



<p>Xpath expressions begin either a forward slash (&#8220;/&#8221;) or a double forward slash (&#8220;//&#8221;). The forward slash (&#8220;/&#8221;) denotes the root of the document. The double forward slash (&#8220;//&#8221;) is used to select nodes in the document from the current node, regardless of their location, allowing for more flexible and generalized path expressions.</p>



<p>For example:, this snippet means to find all &lt;a> elements, regardless of their location in the document.</p>



<div class="wp-block-kevinbatdorf-code-block-pro" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:block;padding:16px 0 0 16px;margin-bottom:-1px;width:100%;text-align:left;background-color:#2e3440ff"><svg xmlns="http://www.w3.org/2000/svg" width="54" height="14" viewBox="0 0 54 14"><g fill="none" fill-rule="evenodd" transform="translate(1 1)"><circle cx="6" cy="6" r="6" fill="#FF5F56" stroke="#E0443E" stroke-width=".5"></circle><circle cx="26" cy="6" r="6" fill="#FFBD2E" stroke="#DEA123" stroke-width=".5"></circle><circle cx="46" cy="6" r="6" fill="#27C93F" stroke="#1AAB29" stroke-width=".5"></circle></g></svg></span><span role="button" tabindex="0" data-code="driver.find_elements(By.XPATH, &quot;//a&quot;)" style="color:#d8dee9ff;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path></svg></span><pre class="shiki nord" style="background-color: #2e3440ff" tabindex="0"><code><span class="line"><span style="color: #D8DEE9FF">driver</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">find_elements</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9FF">By</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">XPATH</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">//a</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">)</span></span></code></pre></div>



<p>On the other hand, this means to find all &lt;a> tags located at the very top of the document HTML hierarchy (first level elements). </p>



<div class="wp-block-kevinbatdorf-code-block-pro" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:block;padding:16px 0 0 16px;margin-bottom:-1px;width:100%;text-align:left;background-color:#2e3440ff"><svg xmlns="http://www.w3.org/2000/svg" width="54" height="14" viewBox="0 0 54 14"><g fill="none" fill-rule="evenodd" transform="translate(1 1)"><circle cx="6" cy="6" r="6" fill="#FF5F56" stroke="#E0443E" stroke-width=".5"></circle><circle cx="26" cy="6" r="6" fill="#FFBD2E" stroke="#DEA123" stroke-width=".5"></circle><circle cx="46" cy="6" r="6" fill="#27C93F" stroke="#1AAB29" stroke-width=".5"></circle></g></svg></span><span role="button" tabindex="0" data-code="driver.find_elements(By.XPATH, &quot;/a&quot;)" style="color:#d8dee9ff;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path></svg></span><pre class="shiki nord" style="background-color: #2e3440ff" tabindex="0"><code><span class="line"><span style="color: #D8DEE9FF">driver</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">find_elements</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9FF">By</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">XPATH</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">/a</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">)</span></span></code></pre></div>



<p><br></p>



<p>Now that we have our concepts covered, we will begin exploring various XPath expressions for the <code>quotes.toscrape</code> website. </p>



<p><br></p>



<h3 class="wp-block-heading">Select the Title of the Page:</h3>



<div class="wp-block-kevinbatdorf-code-block-pro" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:block;padding:16px 0 0 16px;margin-bottom:-1px;width:100%;text-align:left;background-color:#2e3440ff"><svg xmlns="http://www.w3.org/2000/svg" width="54" height="14" viewBox="0 0 54 14"><g fill="none" fill-rule="evenodd" transform="translate(1 1)"><circle cx="6" cy="6" r="6" fill="#FF5F56" stroke="#E0443E" stroke-width=".5"></circle><circle cx="26" cy="6" r="6" fill="#FFBD2E" stroke="#DEA123" stroke-width=".5"></circle><circle cx="46" cy="6" r="6" fill="#27C93F" stroke="#1AAB29" stroke-width=".5"></circle></g></svg></span><span role="button" tabindex="0" data-code="title_element = driver.find_element(By.XPATH, &quot;//title&quot;)
title_text = title_element.get_attribute(&quot;innerHTML&quot;)" style="color:#d8dee9ff;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path></svg></span><pre class="shiki nord" style="background-color: #2e3440ff" tabindex="0"><code><span class="line"><span style="color: #D8DEE9FF">title_element </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> driver</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">find_element</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9FF">By</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">XPATH</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">//title</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">title_text </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> title_element</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">get_attribute</span><span style="color: #ECEFF4">(</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">innerHTML</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">)</span></span></code></pre></div>



<p>HTML Code Snippet where element is located:</p>



<div class="wp-block-kevinbatdorf-code-block-pro" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:block;padding:16px 0 0 16px;margin-bottom:-1px;width:100%;text-align:left;background-color:#2e3440ff"><svg xmlns="http://www.w3.org/2000/svg" width="54" height="14" viewBox="0 0 54 14"><g fill="none" fill-rule="evenodd" transform="translate(1 1)"><circle cx="6" cy="6" r="6" fill="#FF5F56" stroke="#E0443E" stroke-width=".5"></circle><circle cx="26" cy="6" r="6" fill="#FFBD2E" stroke="#DEA123" stroke-width=".5"></circle><circle cx="46" cy="6" r="6" fill="#27C93F" stroke="#1AAB29" stroke-width=".5"></circle></g></svg></span><span role="button" tabindex="0" data-code="&lt;head&gt;
	&lt;meta charset=&quot;UTF-8&quot;&gt;
	&lt;title&gt;Quotes to Scrape&lt;/title&gt;  &lt;-
  &lt;link rel=&quot;stylesheet&quot; href=&quot;/static/bootstrap.min.css&quot;&gt;
  &lt;link rel=&quot;stylesheet&quot; href=&quot;/static/main.css&quot;&gt;
&lt;/head&gt;" style="color:#d8dee9ff;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path></svg></span><pre class="shiki nord" style="background-color: #2e3440ff" tabindex="0"><code><span class="line"><span style="color: #81A1C1">&lt;head&gt;</span></span>
<span class="line"><span style="color: #D8DEE9FF">	</span><span style="color: #81A1C1">&lt;meta</span><span style="color: #D8DEE9FF"> </span><span style="color: #8FBCBB">charset</span><span style="color: #ECEFF4">=</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">UTF-8</span><span style="color: #ECEFF4">&quot;</span><span style="color: #81A1C1">&gt;</span></span>
<span class="line"><span style="color: #D8DEE9FF">	</span><span style="color: #81A1C1">&lt;title&gt;</span><span style="color: #D8DEE9FF">Quotes to Scrape</span><span style="color: #81A1C1">&lt;/title&gt;</span><span style="color: #D8DEE9FF">  </span><span style="color: #D8DEE9">&lt;</span><span style="color: #D8DEE9FF">-</span></span>
<span class="line"><span style="color: #D8DEE9FF">  </span><span style="color: #81A1C1">&lt;link</span><span style="color: #D8DEE9FF"> </span><span style="color: #8FBCBB">rel</span><span style="color: #ECEFF4">=</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">stylesheet</span><span style="color: #ECEFF4">&quot;</span><span style="color: #D8DEE9FF"> </span><span style="color: #8FBCBB">href</span><span style="color: #ECEFF4">=</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">/static/bootstrap.min.css</span><span style="color: #ECEFF4">&quot;</span><span style="color: #81A1C1">&gt;</span></span>
<span class="line"><span style="color: #D8DEE9FF">  </span><span style="color: #81A1C1">&lt;link</span><span style="color: #D8DEE9FF"> </span><span style="color: #8FBCBB">rel</span><span style="color: #ECEFF4">=</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">stylesheet</span><span style="color: #ECEFF4">&quot;</span><span style="color: #D8DEE9FF"> </span><span style="color: #8FBCBB">href</span><span style="color: #ECEFF4">=</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">/static/main.css</span><span style="color: #ECEFF4">&quot;</span><span style="color: #81A1C1">&gt;</span></span>
<span class="line"><span style="color: #81A1C1">&lt;/head&gt;</span></span></code></pre></div>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<hr>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<h3 class="wp-block-heading">Access the Login Link:</h3>



<div class="wp-block-kevinbatdorf-code-block-pro" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:block;padding:16px 0 0 16px;margin-bottom:-1px;width:100%;text-align:left;background-color:#2e3440ff"><svg xmlns="http://www.w3.org/2000/svg" width="54" height="14" viewBox="0 0 54 14"><g fill="none" fill-rule="evenodd" transform="translate(1 1)"><circle cx="6" cy="6" r="6" fill="#FF5F56" stroke="#E0443E" stroke-width=".5"></circle><circle cx="26" cy="6" r="6" fill="#FFBD2E" stroke="#DEA123" stroke-width=".5"></circle><circle cx="46" cy="6" r="6" fill="#27C93F" stroke="#1AAB29" stroke-width=".5"></circle></g></svg></span><span role="button" tabindex="0" data-code="link_element = driver.find_element(By.XPATH, &quot;//a[text()='Login']&quot;)
link_href = link_element.get_attribute(&quot;href&quot;)" style="color:#d8dee9ff;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path></svg></span><pre class="shiki nord" style="background-color: #2e3440ff" tabindex="0"><code><span class="line"><span style="color: #D8DEE9FF">link_element </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> driver</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">find_element</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9FF">By</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">XPATH</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">//a[text()=&#39;Login&#39;]</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">link_href </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> link_element</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">get_attribute</span><span style="color: #ECEFF4">(</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">href</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">)</span></span></code></pre></div>



<p>HTML Code Snippet where element is located:</p>



<div class="wp-block-kevinbatdorf-code-block-pro" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:block;padding:16px 0 0 16px;margin-bottom:-1px;width:100%;text-align:left;background-color:#2e3440ff"><svg xmlns="http://www.w3.org/2000/svg" width="54" height="14" viewBox="0 0 54 14"><g fill="none" fill-rule="evenodd" transform="translate(1 1)"><circle cx="6" cy="6" r="6" fill="#FF5F56" stroke="#E0443E" stroke-width=".5"></circle><circle cx="26" cy="6" r="6" fill="#FFBD2E" stroke="#DEA123" stroke-width=".5"></circle><circle cx="46" cy="6" r="6" fill="#27C93F" stroke="#1AAB29" stroke-width=".5"></circle></g></svg></span><span role="button" tabindex="0" data-code="...
            &lt;div class=&quot;col-md-4&quot;&gt;
                &lt;p&gt;
                    &lt;a href=&quot;/login&quot;&gt;Login&lt;/a&gt; &lt;--
                &lt;/p&gt;
            &lt;/div&gt;
..." style="color:#d8dee9ff;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path></svg></span><pre class="shiki nord" style="background-color: #2e3440ff" tabindex="0"><code><span class="line"><span style="color: #D8DEE9FF">...</span></span>
<span class="line"><span style="color: #D8DEE9FF">            </span><span style="color: #81A1C1">&lt;div</span><span style="color: #D8DEE9FF"> </span><span style="color: #8FBCBB">class</span><span style="color: #ECEFF4">=</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">col-md-4</span><span style="color: #ECEFF4">&quot;</span><span style="color: #81A1C1">&gt;</span></span>
<span class="line"><span style="color: #D8DEE9FF">                </span><span style="color: #81A1C1">&lt;p&gt;</span></span>
<span class="line"><span style="color: #D8DEE9FF">                    </span><span style="color: #81A1C1">&lt;a</span><span style="color: #D8DEE9FF"> </span><span style="color: #8FBCBB">href</span><span style="color: #ECEFF4">=</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">/login</span><span style="color: #ECEFF4">&quot;</span><span style="color: #81A1C1">&gt;</span><span style="color: #D8DEE9FF">Login</span><span style="color: #81A1C1">&lt;/a&gt;</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">&lt;</span><span style="color: #D8DEE9FF">--</span></span>
<span class="line"><span style="color: #D8DEE9FF">                </span><span style="color: #81A1C1">&lt;/p&gt;</span></span>
<span class="line"><span style="color: #D8DEE9FF">            </span><span style="color: #81A1C1">&lt;/div&gt;</span></span>
<span class="line"><span style="color: #D8DEE9FF">...</span></span></code></pre></div>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<hr>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<h3 class="wp-block-heading">Find the Text of all Quotes</h3>



<p>Using the <code>find_elements</code> function, which returns a list of elements that it found:</p>



<div class="wp-block-kevinbatdorf-code-block-pro" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:block;padding:16px 0 0 16px;margin-bottom:-1px;width:100%;text-align:left;background-color:#2e3440ff"><svg xmlns="http://www.w3.org/2000/svg" width="54" height="14" viewBox="0 0 54 14"><g fill="none" fill-rule="evenodd" transform="translate(1 1)"><circle cx="6" cy="6" r="6" fill="#FF5F56" stroke="#E0443E" stroke-width=".5"></circle><circle cx="26" cy="6" r="6" fill="#FFBD2E" stroke="#DEA123" stroke-width=".5"></circle><circle cx="46" cy="6" r="6" fill="#27C93F" stroke="#1AAB29" stroke-width=".5"></circle></g></svg></span><span role="button" tabindex="0" data-code="quote_elements = driver.find_elements(By.XPATH, &quot;//div[@class='quote']/span[@class='text']&quot;)

for quote_element in quote_elements:
    quote_text = quote_element.get_attribute(&quot;innerHTML&quot;)
    print(quote_text)" style="color:#d8dee9ff;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path></svg></span><pre class="shiki nord" style="background-color: #2e3440ff" tabindex="0"><code><span class="line"><span style="color: #D8DEE9FF">quote_elements </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> driver</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">find_elements</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9FF">By</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">XPATH</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">//div[@class=&#39;quote&#39;]/span[@class=&#39;text&#39;]</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #81A1C1">for</span><span style="color: #D8DEE9FF"> quote_element </span><span style="color: #81A1C1">in</span><span style="color: #D8DEE9FF"> quote_elements</span><span style="color: #ECEFF4">:</span></span>
<span class="line"><span style="color: #D8DEE9FF">    quote_text </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> quote_element</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">get_attribute</span><span style="color: #ECEFF4">(</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">innerHTML</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">    </span><span style="color: #88C0D0">print</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9FF">quote_text</span><span style="color: #ECEFF4">)</span></span></code></pre></div>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<hr>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<h3 class="wp-block-heading">Find all details for the first Quote</h3>



<p>Here is an interesting concept, where you retrieve an element, then perform further searching on it. Remember to include a &#8220;.&#8221; in the beginning of the XPath expression when doing this, otherwise it will begin searching through the whole document. </p>



<div class="wp-block-kevinbatdorf-code-block-pro" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:block;padding:16px 0 0 16px;margin-bottom:-1px;width:100%;text-align:left;background-color:#2e3440ff"><svg xmlns="http://www.w3.org/2000/svg" width="54" height="14" viewBox="0 0 54 14"><g fill="none" fill-rule="evenodd" transform="translate(1 1)"><circle cx="6" cy="6" r="6" fill="#FF5F56" stroke="#E0443E" stroke-width=".5"></circle><circle cx="26" cy="6" r="6" fill="#FFBD2E" stroke="#DEA123" stroke-width=".5"></circle><circle cx="46" cy="6" r="6" fill="#27C93F" stroke="#1AAB29" stroke-width=".5"></circle></g></svg></span><span role="button" tabindex="0" data-code="quote = driver.find_element(By.XPATH, &quot;//div[@class='quote'][1]&quot;)
quote_text = quote.find_element(By.XPATH,&quot;.//span[@class='text']&quot;).get_attribute(&quot;innerHTML&quot;)
quote_author = quote.find_element(By.XPATH, &quot;.//span/small&quot;).get_attribute(&quot;innerHTML&quot;)
quote_tags = quote.find_elements(By.XPATH, &quot;.//div[@class='tags']/a[@class='tag']&quot;)

print(quote_text, quote_author, len(quote_tags))" style="color:#d8dee9ff;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path></svg></span><pre class="shiki nord" style="background-color: #2e3440ff" tabindex="0"><code><span class="line"><span style="color: #D8DEE9FF">quote </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> driver</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">find_element</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9FF">By</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">XPATH</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">//div[@class=&#39;quote&#39;][1]</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">quote_text </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> quote</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">find_element</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9FF">By</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">XPATH</span><span style="color: #ECEFF4">,</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">.//span[@class=&#39;text&#39;]</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">).</span><span style="color: #88C0D0">get_attribute</span><span style="color: #ECEFF4">(</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">innerHTML</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">quote_author </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> quote</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">find_element</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9FF">By</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">XPATH</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">.//span/small</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">).</span><span style="color: #88C0D0">get_attribute</span><span style="color: #ECEFF4">(</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">innerHTML</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">quote_tags </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> quote</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">find_elements</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9FF">By</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">XPATH</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">.//div[@class=&#39;tags&#39;]/a[@class=&#39;tag&#39;]</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #88C0D0">print</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9FF">quote_text</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> quote_author</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">len</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9FF">quote_tags</span><span style="color: #ECEFF4">))</span></span></code></pre></div>



<p>HTML structure for the quote element:</p>



<div class="wp-block-kevinbatdorf-code-block-pro" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:block;padding:16px 0 0 16px;margin-bottom:-1px;width:100%;text-align:left;background-color:#2e3440ff"><svg xmlns="http://www.w3.org/2000/svg" width="54" height="14" viewBox="0 0 54 14"><g fill="none" fill-rule="evenodd" transform="translate(1 1)"><circle cx="6" cy="6" r="6" fill="#FF5F56" stroke="#E0443E" stroke-width=".5"></circle><circle cx="26" cy="6" r="6" fill="#FFBD2E" stroke="#DEA123" stroke-width=".5"></circle><circle cx="46" cy="6" r="6" fill="#27C93F" stroke="#1AAB29" stroke-width=".5"></circle></g></svg></span><span role="button" tabindex="0" data-code="...
    &lt;div class=&quot;quote&quot; itemscope itemtype=&quot;http://schema.org/CreativeWork&quot;&gt;
        &lt;span class=&quot;text&quot; itemprop=&quot;text&quot;&gt;“The world as we have created it is a process of our thinking. It cannot be changed without changing our thinking.”&lt;/span&gt;
        &lt;span&gt;by &lt;small class=&quot;author&quot; itemprop=&quot;author&quot;&gt;Albert Einstein&lt;/small&gt;
        &lt;a href=&quot;/author/Albert-Einstein&quot;&gt;(about)&lt;/a&gt;
        &lt;/span&gt;
        &lt;div class=&quot;tags&quot;&gt;
            Tags:
            &lt;meta class=&quot;keywords&quot; itemprop=&quot;keywords&quot; content=&quot;change,deep-thoughts,thinking,world&quot; /    &gt; 
            &lt;a class=&quot;tag&quot; href=&quot;/tag/change/page/1/&quot;&gt;change&lt;/a&gt;
            &lt;a class=&quot;tag&quot; href=&quot;/tag/deep-thoughts/page/1/&quot;&gt;deep-thoughts&lt;/a&gt;
            &lt;a class=&quot;tag&quot; href=&quot;/tag/thinking/page/1/&quot;&gt;thinking&lt;/a&gt;
            &lt;a class=&quot;tag&quot; href=&quot;/tag/world/page/1/&quot;&gt;world&lt;/a&gt;
        &lt;/div&gt;
..." style="color:#d8dee9ff;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path></svg></span><pre class="shiki nord" style="background-color: #2e3440ff" tabindex="0"><code><span class="line"><span style="color: #D8DEE9FF">...</span></span>
<span class="line"><span style="color: #D8DEE9FF">    </span><span style="color: #81A1C1">&lt;div</span><span style="color: #D8DEE9FF"> </span><span style="color: #8FBCBB">class</span><span style="color: #ECEFF4">=</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">quote</span><span style="color: #ECEFF4">&quot;</span><span style="color: #D8DEE9FF"> </span><span style="color: #8FBCBB">itemscope</span><span style="color: #D8DEE9FF"> </span><span style="color: #8FBCBB">itemtype</span><span style="color: #ECEFF4">=</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">http://schema.org/CreativeWork</span><span style="color: #ECEFF4">&quot;</span><span style="color: #81A1C1">&gt;</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">&lt;span</span><span style="color: #D8DEE9FF"> </span><span style="color: #8FBCBB">class</span><span style="color: #ECEFF4">=</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">text</span><span style="color: #ECEFF4">&quot;</span><span style="color: #D8DEE9FF"> </span><span style="color: #8FBCBB">itemprop</span><span style="color: #ECEFF4">=</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">text</span><span style="color: #ECEFF4">&quot;</span><span style="color: #81A1C1">&gt;</span><span style="color: #D8DEE9FF">“The world as we have created it is a process of our thinking. It cannot be changed without changing our thinking.”</span><span style="color: #81A1C1">&lt;/span&gt;</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">&lt;span&gt;</span><span style="color: #D8DEE9FF">by </span><span style="color: #81A1C1">&lt;small</span><span style="color: #D8DEE9FF"> </span><span style="color: #8FBCBB">class</span><span style="color: #ECEFF4">=</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">author</span><span style="color: #ECEFF4">&quot;</span><span style="color: #D8DEE9FF"> </span><span style="color: #8FBCBB">itemprop</span><span style="color: #ECEFF4">=</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">author</span><span style="color: #ECEFF4">&quot;</span><span style="color: #81A1C1">&gt;</span><span style="color: #D8DEE9FF">Albert Einstein</span><span style="color: #81A1C1">&lt;/small&gt;</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">&lt;a</span><span style="color: #D8DEE9FF"> </span><span style="color: #8FBCBB">href</span><span style="color: #ECEFF4">=</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">/author/Albert-Einstein</span><span style="color: #ECEFF4">&quot;</span><span style="color: #81A1C1">&gt;</span><span style="color: #D8DEE9FF">(about)</span><span style="color: #81A1C1">&lt;/a&gt;</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">&lt;/span&gt;</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">&lt;div</span><span style="color: #D8DEE9FF"> </span><span style="color: #8FBCBB">class</span><span style="color: #ECEFF4">=</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">tags</span><span style="color: #ECEFF4">&quot;</span><span style="color: #81A1C1">&gt;</span></span>
<span class="line"><span style="color: #D8DEE9FF">            Tags:</span></span>
<span class="line"><span style="color: #D8DEE9FF">            </span><span style="color: #81A1C1">&lt;meta</span><span style="color: #D8DEE9FF"> </span><span style="color: #8FBCBB">class</span><span style="color: #ECEFF4">=</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">keywords</span><span style="color: #ECEFF4">&quot;</span><span style="color: #D8DEE9FF"> </span><span style="color: #8FBCBB">itemprop</span><span style="color: #ECEFF4">=</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">keywords</span><span style="color: #ECEFF4">&quot;</span><span style="color: #D8DEE9FF"> </span><span style="color: #8FBCBB">content</span><span style="color: #ECEFF4">=</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">change,deep-thoughts,thinking,world</span><span style="color: #ECEFF4">&quot;</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">/</span><span style="color: #D8DEE9FF">    </span><span style="color: #81A1C1">&gt;</span><span style="color: #D8DEE9FF"> </span></span>
<span class="line"><span style="color: #D8DEE9FF">            </span><span style="color: #81A1C1">&lt;a</span><span style="color: #D8DEE9FF"> </span><span style="color: #8FBCBB">class</span><span style="color: #ECEFF4">=</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">tag</span><span style="color: #ECEFF4">&quot;</span><span style="color: #D8DEE9FF"> </span><span style="color: #8FBCBB">href</span><span style="color: #ECEFF4">=</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">/tag/change/page/1/</span><span style="color: #ECEFF4">&quot;</span><span style="color: #81A1C1">&gt;</span><span style="color: #D8DEE9FF">change</span><span style="color: #81A1C1">&lt;/a&gt;</span></span>
<span class="line"><span style="color: #D8DEE9FF">            </span><span style="color: #81A1C1">&lt;a</span><span style="color: #D8DEE9FF"> </span><span style="color: #8FBCBB">class</span><span style="color: #ECEFF4">=</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">tag</span><span style="color: #ECEFF4">&quot;</span><span style="color: #D8DEE9FF"> </span><span style="color: #8FBCBB">href</span><span style="color: #ECEFF4">=</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">/tag/deep-thoughts/page/1/</span><span style="color: #ECEFF4">&quot;</span><span style="color: #81A1C1">&gt;</span><span style="color: #D8DEE9FF">deep-thoughts</span><span style="color: #81A1C1">&lt;/a&gt;</span></span>
<span class="line"><span style="color: #D8DEE9FF">            </span><span style="color: #81A1C1">&lt;a</span><span style="color: #D8DEE9FF"> </span><span style="color: #8FBCBB">class</span><span style="color: #ECEFF4">=</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">tag</span><span style="color: #ECEFF4">&quot;</span><span style="color: #D8DEE9FF"> </span><span style="color: #8FBCBB">href</span><span style="color: #ECEFF4">=</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">/tag/thinking/page/1/</span><span style="color: #ECEFF4">&quot;</span><span style="color: #81A1C1">&gt;</span><span style="color: #D8DEE9FF">thinking</span><span style="color: #81A1C1">&lt;/a&gt;</span></span>
<span class="line"><span style="color: #D8DEE9FF">            </span><span style="color: #81A1C1">&lt;a</span><span style="color: #D8DEE9FF"> </span><span style="color: #8FBCBB">class</span><span style="color: #ECEFF4">=</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">tag</span><span style="color: #ECEFF4">&quot;</span><span style="color: #D8DEE9FF"> </span><span style="color: #8FBCBB">href</span><span style="color: #ECEFF4">=</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">/tag/world/page/1/</span><span style="color: #ECEFF4">&quot;</span><span style="color: #81A1C1">&gt;</span><span style="color: #D8DEE9FF">world</span><span style="color: #81A1C1">&lt;/a&gt;</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">&lt;/div&gt;</span></span>
<span class="line"><span style="color: #D8DEE9FF">...</span></span></code></pre></div>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<hr>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<h3 class="wp-block-heading">Find Text of Quote by Albert Einstein</h3>



<p>You can use the &#8220;..&#8221; syntax to go back up a level (similar to how a terminal works when changing directories). </p>



<div class="wp-block-kevinbatdorf-code-block-pro" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:block;padding:16px 0 0 16px;margin-bottom:-1px;width:100%;text-align:left;background-color:#2e3440ff"><svg xmlns="http://www.w3.org/2000/svg" width="54" height="14" viewBox="0 0 54 14"><g fill="none" fill-rule="evenodd" transform="translate(1 1)"><circle cx="6" cy="6" r="6" fill="#FF5F56" stroke="#E0443E" stroke-width=".5"></circle><circle cx="26" cy="6" r="6" fill="#FFBD2E" stroke="#DEA123" stroke-width=".5"></circle><circle cx="46" cy="6" r="6" fill="#27C93F" stroke="#1AAB29" stroke-width=".5"></circle></g></svg></span><span role="button" tabindex="0" data-code="quote = driver.find_element(By.XPATH, &quot;//span/small[@class='author' and text()='Albert Einstein']/../../span[@class='text']&quot;)
quote_text = quote.get_attribute(&quot;innerHTML&quot;)" style="color:#d8dee9ff;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path></svg></span><pre class="shiki nord" style="background-color: #2e3440ff" tabindex="0"><code><span class="line"><span style="color: #D8DEE9FF">quote </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> driver</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">find_element</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9FF">By</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">XPATH</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">//span/small[@class=&#39;author&#39; and text()=&#39;Albert Einstein&#39;]/../../span[@class=&#39;text&#39;]</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">quote_text </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> quote</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">get_attribute</span><span style="color: #ECEFF4">(</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">innerHTML</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">)</span></span></code></pre></div>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<hr>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<h3 class="wp-block-heading">Retrieve All Tag Links:</h3>



<div class="wp-block-kevinbatdorf-code-block-pro" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:block;padding:16px 0 0 16px;margin-bottom:-1px;width:100%;text-align:left;background-color:#2e3440ff"><svg xmlns="http://www.w3.org/2000/svg" width="54" height="14" viewBox="0 0 54 14"><g fill="none" fill-rule="evenodd" transform="translate(1 1)"><circle cx="6" cy="6" r="6" fill="#FF5F56" stroke="#E0443E" stroke-width=".5"></circle><circle cx="26" cy="6" r="6" fill="#FFBD2E" stroke="#DEA123" stroke-width=".5"></circle><circle cx="46" cy="6" r="6" fill="#27C93F" stroke="#1AAB29" stroke-width=".5"></circle></g></svg></span><span role="button" tabindex="0" data-code="quotes = driver.find_elements(By.XPATH, &quot;//div[@class='quote']/div[@class='tags']/a[@class='tag']&quot;)

for quote in quotes:
    print(quote.get_attribute(&quot;href&quot;))" style="color:#d8dee9ff;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path></svg></span><pre class="shiki nord" style="background-color: #2e3440ff" tabindex="0"><code><span class="line"><span style="color: #D8DEE9FF">quotes </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> driver</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">find_elements</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9FF">By</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">XPATH</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">//div[@class=&#39;quote&#39;]/div[@class=&#39;tags&#39;]/a[@class=&#39;tag&#39;]</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #81A1C1">for</span><span style="color: #D8DEE9FF"> quote </span><span style="color: #81A1C1">in</span><span style="color: #D8DEE9FF"> quotes</span><span style="color: #ECEFF4">:</span></span>
<span class="line"><span style="color: #D8DEE9FF">    </span><span style="color: #88C0D0">print</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9FF">quote</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">get_attribute</span><span style="color: #ECEFF4">(</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">href</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">))</span></span></code></pre></div>



<p>HTML structure of &lt;div> containing tags (for first quote)</p>



<div class="wp-block-kevinbatdorf-code-block-pro" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:block;padding:16px 0 0 16px;margin-bottom:-1px;width:100%;text-align:left;background-color:#2e3440ff"><svg xmlns="http://www.w3.org/2000/svg" width="54" height="14" viewBox="0 0 54 14"><g fill="none" fill-rule="evenodd" transform="translate(1 1)"><circle cx="6" cy="6" r="6" fill="#FF5F56" stroke="#E0443E" stroke-width=".5"></circle><circle cx="26" cy="6" r="6" fill="#FFBD2E" stroke="#DEA123" stroke-width=".5"></circle><circle cx="46" cy="6" r="6" fill="#27C93F" stroke="#1AAB29" stroke-width=".5"></circle></g></svg></span><span role="button" tabindex="0" data-code="...
        &lt;div class=&quot;tags&quot;&gt;
            Tags:
            &lt;meta class=&quot;keywords&quot; itemprop=&quot;keywords&quot; content=&quot;change,deep-thoughts,thinking,world&quot; /    &gt; 
            &lt;a class=&quot;tag&quot; href=&quot;/tag/change/page/1/&quot;&gt;change&lt;/a&gt;
            &lt;a class=&quot;tag&quot; href=&quot;/tag/deep-thoughts/page/1/&quot;&gt;deep-thoughts&lt;/a&gt;
            &lt;a class=&quot;tag&quot; href=&quot;/tag/thinking/page/1/&quot;&gt;thinking&lt;/a&gt;
            &lt;a class=&quot;tag&quot; href=&quot;/tag/world/page/1/&quot;&gt;world&lt;/a&gt;
        &lt;/div&gt;
..." style="color:#d8dee9ff;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path></svg></span><pre class="shiki nord" style="background-color: #2e3440ff" tabindex="0"><code><span class="line"><span style="color: #D8DEE9FF">...</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">&lt;div</span><span style="color: #D8DEE9FF"> </span><span style="color: #8FBCBB">class</span><span style="color: #ECEFF4">=</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">tags</span><span style="color: #ECEFF4">&quot;</span><span style="color: #81A1C1">&gt;</span></span>
<span class="line"><span style="color: #D8DEE9FF">            Tags:</span></span>
<span class="line"><span style="color: #D8DEE9FF">            </span><span style="color: #81A1C1">&lt;meta</span><span style="color: #D8DEE9FF"> </span><span style="color: #8FBCBB">class</span><span style="color: #ECEFF4">=</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">keywords</span><span style="color: #ECEFF4">&quot;</span><span style="color: #D8DEE9FF"> </span><span style="color: #8FBCBB">itemprop</span><span style="color: #ECEFF4">=</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">keywords</span><span style="color: #ECEFF4">&quot;</span><span style="color: #D8DEE9FF"> </span><span style="color: #8FBCBB">content</span><span style="color: #ECEFF4">=</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">change,deep-thoughts,thinking,world</span><span style="color: #ECEFF4">&quot;</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">/</span><span style="color: #D8DEE9FF">    </span><span style="color: #81A1C1">&gt;</span><span style="color: #D8DEE9FF"> </span></span>
<span class="line"><span style="color: #D8DEE9FF">            </span><span style="color: #81A1C1">&lt;a</span><span style="color: #D8DEE9FF"> </span><span style="color: #8FBCBB">class</span><span style="color: #ECEFF4">=</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">tag</span><span style="color: #ECEFF4">&quot;</span><span style="color: #D8DEE9FF"> </span><span style="color: #8FBCBB">href</span><span style="color: #ECEFF4">=</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">/tag/change/page/1/</span><span style="color: #ECEFF4">&quot;</span><span style="color: #81A1C1">&gt;</span><span style="color: #D8DEE9FF">change</span><span style="color: #81A1C1">&lt;/a&gt;</span></span>
<span class="line"><span style="color: #D8DEE9FF">            </span><span style="color: #81A1C1">&lt;a</span><span style="color: #D8DEE9FF"> </span><span style="color: #8FBCBB">class</span><span style="color: #ECEFF4">=</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">tag</span><span style="color: #ECEFF4">&quot;</span><span style="color: #D8DEE9FF"> </span><span style="color: #8FBCBB">href</span><span style="color: #ECEFF4">=</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">/tag/deep-thoughts/page/1/</span><span style="color: #ECEFF4">&quot;</span><span style="color: #81A1C1">&gt;</span><span style="color: #D8DEE9FF">deep-thoughts</span><span style="color: #81A1C1">&lt;/a&gt;</span></span>
<span class="line"><span style="color: #D8DEE9FF">            </span><span style="color: #81A1C1">&lt;a</span><span style="color: #D8DEE9FF"> </span><span style="color: #8FBCBB">class</span><span style="color: #ECEFF4">=</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">tag</span><span style="color: #ECEFF4">&quot;</span><span style="color: #D8DEE9FF"> </span><span style="color: #8FBCBB">href</span><span style="color: #ECEFF4">=</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">/tag/thinking/page/1/</span><span style="color: #ECEFF4">&quot;</span><span style="color: #81A1C1">&gt;</span><span style="color: #D8DEE9FF">thinking</span><span style="color: #81A1C1">&lt;/a&gt;</span></span>
<span class="line"><span style="color: #D8DEE9FF">            </span><span style="color: #81A1C1">&lt;a</span><span style="color: #D8DEE9FF"> </span><span style="color: #8FBCBB">class</span><span style="color: #ECEFF4">=</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">tag</span><span style="color: #ECEFF4">&quot;</span><span style="color: #D8DEE9FF"> </span><span style="color: #8FBCBB">href</span><span style="color: #ECEFF4">=</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">/tag/world/page/1/</span><span style="color: #ECEFF4">&quot;</span><span style="color: #81A1C1">&gt;</span><span style="color: #D8DEE9FF">world</span><span style="color: #81A1C1">&lt;/a&gt;</span></span>
<span class="line"><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">&lt;/div&gt;</span></span>
<span class="line"><span style="color: #D8DEE9FF">...</span></span></code></pre></div>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<hr>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<h3 class="wp-block-heading">Retrieve the GoodReads Link in the Footer:</h3>



<div class="wp-block-kevinbatdorf-code-block-pro" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:block;padding:16px 0 0 16px;margin-bottom:-1px;width:100%;text-align:left;background-color:#2e3440ff"><svg xmlns="http://www.w3.org/2000/svg" width="54" height="14" viewBox="0 0 54 14"><g fill="none" fill-rule="evenodd" transform="translate(1 1)"><circle cx="6" cy="6" r="6" fill="#FF5F56" stroke="#E0443E" stroke-width=".5"></circle><circle cx="26" cy="6" r="6" fill="#FFBD2E" stroke="#DEA123" stroke-width=".5"></circle><circle cx="46" cy="6" r="6" fill="#27C93F" stroke="#1AAB29" stroke-width=".5"></circle></g></svg></span><span role="button" tabindex="0" data-code="quote = driver.find_element(By.XPATH, &quot;//footer//a[contains(@href,'goodreads.com')]&quot;)
link_text = quote.get_attribute(&quot;innerHTML&quot;)
link_href = quote.get_attribute(&quot;href&quot;)

print(link_text, link_href)" style="color:#d8dee9ff;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path></svg></span><pre class="shiki nord" style="background-color: #2e3440ff" tabindex="0"><code><span class="line"><span style="color: #D8DEE9FF">quote </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> driver</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">find_element</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9FF">By</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">XPATH</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">//footer//a[contains(@href,&#39;goodreads.com&#39;)]</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">link_text </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> quote</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">get_attribute</span><span style="color: #ECEFF4">(</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">innerHTML</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">)</span></span>
<span class="line"><span style="color: #D8DEE9FF">link_href </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> quote</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">get_attribute</span><span style="color: #ECEFF4">(</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">href</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #88C0D0">print</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9FF">link_text</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> link_href</span><span style="color: #ECEFF4">)</span></span></code></pre></div>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<hr>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<p>This marks the end of the Selenium Dynamic XPath Tutorial. Any suggestions or contributions for CodersLegacy are more than welcome. Questions regarding the tutorial content can be asked in the comments section below.</p>
<p>The post <a href="https://coderslegacy.com/selenium-dynamic-xpath-tutorial-all-commands/">Selenium Dynamic XPath Tutorial (All Commands)</a> appeared first on <a href="https://coderslegacy.com">CodersLegacy</a>.</p>]]></description>
                <pubDate>Thu, 14 Dec 2023 16:58:50 +0200</pubDate>
                <guid isPermaLink="false">https://api.follow.it/track-rss-story-click/v3/Pni2oPawGk0EF6PmXjFwIc4HQhe4ZUzd</guid>
            </item>
                    <item>
                <title><![CDATA[Python __init__.py – Best Practices and Customizations]]></title>
                <link>https://api.follow.it/track-rss-story-click/v3/Pni2oPawGk3K0p8sewtDOuGrEXdXG_66</link>
                <description><![CDATA[<img src="https://api.follow.it/track-rss-story-loaded/v1/9tAyIgAzB62FkGV_dXN16eT5HJgy6HUf" border=0 width="1" height="1" alt="Python __init__.py – Best Practices and Customizations" title="Python __init__.py – Best Practices and Customizations"> <p><span style="color: rgb(55, 65, 81); font-family: Söhne, ui-sans-serif, system-ui, -apple-system, &quot;Segoe UI&quot;, Roboto, Ubuntu, Cantarell, &quot;Noto Sans&quot;, sans-serif, &quot;Helvetica Neue&quot;, Arial, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Noto Color Emoji&quot;; font-size: 16px;">The </span>__init__.py<span style="color: rgb(55, 65, 81); font-family: Söhne, ui-sans-serif, system-ui, -apple-system, &quot;Segoe UI&quot;, Roboto, Ubuntu, Cantarell, &quot;Noto Sans&quot;, sans-serif, &quot;Helvetica Neue&quot;, Arial, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Noto Color Emoji&quot;; font-size: 16px;"> file is a special Python script that is executed when a package or module is imported. Its primary purpose is to initialize the package or module and define the package&#8217;s namespace. </span>In this tutorial we will discuss various best practices and customizations involving the __init__.py file that you can do when creating your own packages. </p>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<hr>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>


				<div class="wp-block-uagb-table-of-contents uagb-toc__align-left uagb-toc__columns-1  uagb-block-73f1334e     "
					data-scroll= "1"
					data-offset= "30"
					style=""
				>
				<div class="uagb-toc__wrap">
						<div class="uagb-toc__title">
							Table Of Contents						</div>
																<div class="uagb-toc__list-wrap">
						<ol class="uagb-toc__list"><li class="uagb-toc__list"><a href="#when-to-use-init-py" class="uagb-toc-link__trigger">When to use __init__.py?</a><li class="uagb-toc__list"><a href="#importing-files-from-a-sub-directory-into-another-sub-directory" class="uagb-toc-link__trigger">Importing Files from a Sub-directory into another Sub-directory</a><li class="uagb-toc__list"><a href="#customizing-the-init-py-file" class="uagb-toc-link__trigger">Customizing the __init__.py File</a><ul class="uagb-toc__list"><li class="uagb-toc__list"><a href="#1-adding-package-level-variables" class="uagb-toc-link__trigger">1. Adding Package-Level Variables</a><li class="uagb-toc__list"><li class="uagb-toc__list"><a href="#2-improving-readability-of-imports" class="uagb-toc-link__trigger">2. Improving Readability of Imports</a><li class="uagb-toc__list"><li class="uagb-toc__list"><a href="#3-executing-custom-code-on-package-import" class="uagb-toc-link__trigger">3. Executing Custom Code on Package Import</a><li class="uagb-toc__list"><li class="uagb-toc__list"><a href="#4-package-initialization-with-all" class="uagb-toc-link__trigger">4. Package Initialization with __all__</a><li class="uagb-toc__list"><li class="uagb-toc__list"><a href="#5-dynamic-importing" class="uagb-toc-link__trigger">5. Dynamic Importing</a><li class="uagb-toc__list"><li class="uagb-toc__list"><a href="#6-alias-module-imports" class="uagb-toc-link__trigger">6. Alias Module Imports</a><li class="uagb-toc__list"><li class="uagb-toc__list"><a href="#7-initializing-external-libraries" class="uagb-toc-link__trigger">7. Initializing External Libraries</a></li></ul></li><li class="uagb-toc__list"><a href="#conclusion" class="uagb-toc-link__trigger">Conclusion</a></ul></ol>					</div>
									</div>
				</div>
			


<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<hr>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<h2 class="wp-block-heading">When to use __init__.py?</h2>



<p>Before we continue any further, let us build some intuition on why the __init__.py is needed, and when to use it. </p>



<p>Scenario:  We have a large scale application, which involves 50+ different Python files, each file representing a single class, or module within the code. All of these files look very messy within a single folder, thus we would like to group and divide them into smaller subfolders. </p>



<p>Here is a sample folder structure that you might try creating:</p>



<pre class="wp-block-code"><code>my_large_application/
│
├── models/
│   ├── file1_model.py
│   ├── file2_model.py
│   └── ...
│
├── controllers/
│   ├── file3_controller.py
│   ├── file4_controller.py
│   └── ...
│
└── main.py</code></pre>



<p>But this raises another problem. How do we manage our imports? For example, how does the main.py file import the other files in the subfolders? How does a file from a subfolder (e.g. models) import a file from another subfolder (e.g. controllers)?</p>



<p>Let&#8217;s start with the first example, on how to import a file from a subfolder into the main.py file. The following line of code is a valid import statement that will import all of the contents of the  file1_model.py into the main.py file. </p>



<div class="wp-block-kevinbatdorf-code-block-pro" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:block;padding:16px 0 0 16px;margin-bottom:-1px;width:100%;text-align:left;background-color:#2e3440ff"><svg xmlns="http://www.w3.org/2000/svg" width="54" height="14" viewBox="0 0 54 14"><g fill="none" fill-rule="evenodd" transform="translate(1 1)"><circle cx="6" cy="6" r="6" fill="#FF5F56" stroke="#E0443E" stroke-width=".5"></circle><circle cx="26" cy="6" r="6" fill="#FFBD2E" stroke="#DEA123" stroke-width=".5"></circle><circle cx="46" cy="6" r="6" fill="#27C93F" stroke="#1AAB29" stroke-width=".5"></circle></g></svg></span><span role="button" tabindex="0" data-code="from models.file1_model import *" style="color:#d8dee9ff;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path></svg></span><pre class="shiki nord" style="background-color: #2e3440ff" tabindex="0"><code><span class="line"><span style="color: #81A1C1">from</span><span style="color: #D8DEE9FF"> models</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">file1_model </span><span style="color: #81A1C1">import</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">*</span></span></code></pre></div>



<p>(Don&#8217;t include the .py extension in the file name when importing)</p>



<p>However, with our current folder setup, this command will fail, and the following error will be thrown.</p>



<pre class="wp-block-code"><code></code></pre>



<p> This is where the __init__.py file comes in. Right now, the folder &#8220;models&#8221; is not being treated as a package by Python. The term &#8220;package&#8221; in this context refers to a folder containing Python files and scripts. In order to have the &#8220;models&#8221; folder detected as a package from which files can be imported, we have to add an __init__.py file inside it. We don&#8217;t have to put anything inside the __init__.py file. Just create any empty file, and rename it to __init__.py. </p>



<p>We will also do the same for the controllers folder, so our new folder structure should like this:</p>



<pre class="wp-block-code"><code>my_large_application/
│

│
├── models/
│   ├── __init__.py
│   ├── file1_model.py
│   ├── file2_model.py
│   └── ...
│
├── controllers/
│   ├── __init__.py
│   ├── file3_controller.py
│   ├── file4_controller.py
│   └── ...
│

└── main.py
</code></pre>



<p>And now our import statements will work just fine, for both the model and controller folders. </p>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<hr>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<h2 class="wp-block-heading">Importing Files from a Sub-directory into another Sub-directory</h2>



<p>Now that we know how to import files from the subfolders into main.py, lets explore how to import files between sub-folders. Don&#8217;t worry, it&#8217;s actually pretty easy. </p>



<p>Scenario: We want to import the contents of file2_model.py into file3_controller.py. </p>



<div class="wp-block-kevinbatdorf-code-block-pro" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:block;padding:16px 0 0 16px;margin-bottom:-1px;width:100%;text-align:left;background-color:#2e3440ff"><svg xmlns="http://www.w3.org/2000/svg" width="54" height="14" viewBox="0 0 54 14"><g fill="none" fill-rule="evenodd" transform="translate(1 1)"><circle cx="6" cy="6" r="6" fill="#FF5F56" stroke="#E0443E" stroke-width=".5"></circle><circle cx="26" cy="6" r="6" fill="#FFBD2E" stroke="#DEA123" stroke-width=".5"></circle><circle cx="46" cy="6" r="6" fill="#27C93F" stroke="#1AAB29" stroke-width=".5"></circle></g></svg></span><span role="button" tabindex="0" data-code="from models.file1_model import *" style="color:#d8dee9ff;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path></svg></span><pre class="shiki nord" style="background-color: #2e3440ff" tabindex="0"><code><span class="line"><span style="color: #81A1C1">from</span><span style="color: #D8DEE9FF"> models</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">file1_model </span><span style="color: #81A1C1">import</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">*</span></span></code></pre></div>



<p>This command will fail if the __init__.py file is missing from either on these subfolders. </p>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<hr>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<p><em>Do not think that __init__.py is only meant for large-scale applications. Even small scale application should keep themselves organized. Furthermore, developers who are responsible for creating or managing packages (e.g. a library) will also need to understand how to use and configure this file.  </em></p>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<hr>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<h2 class="wp-block-heading">Customizing the __init__.py File</h2>



<p>Now that we have discussed the essentials, we will explore some optional statements we can include into our __init__.py file to customize its behavior. </p>



<p><br></p>



<h3 class="wp-block-heading">1. Adding Package-Level Variables</h3>



<p>You can use the <code>__init__.py</code> file to define variables that are accessible throughout the package. For example:</p>



<div class="wp-block-kevinbatdorf-code-block-pro" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:block;padding:16px 0 0 16px;margin-bottom:-1px;width:100%;text-align:left;background-color:#2e3440ff"><svg xmlns="http://www.w3.org/2000/svg" width="54" height="14" viewBox="0 0 54 14"><g fill="none" fill-rule="evenodd" transform="translate(1 1)"><circle cx="6" cy="6" r="6" fill="#FF5F56" stroke="#E0443E" stroke-width=".5"></circle><circle cx="26" cy="6" r="6" fill="#FFBD2E" stroke="#DEA123" stroke-width=".5"></circle><circle cx="46" cy="6" r="6" fill="#27C93F" stroke="#1AAB29" stroke-width=".5"></circle></g></svg></span><span role="button" tabindex="0" data-code="# __init__.py

# Package-level variable
package_variable = &quot;This is a package-level variable.&quot;" style="color:#d8dee9ff;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path></svg></span><pre class="shiki nord" style="background-color: #2e3440ff" tabindex="0"><code><span class="line"><span style="color: #616E88"># __init__.py</span></span>
<span class="line"></span>
<span class="line"><span style="color: #616E88"># Package-level variable</span></span>
<span class="line"><span style="color: #D8DEE9FF">package_variable </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">This is a package-level variable.</span><span style="color: #ECEFF4">&quot;</span></span></code></pre></div>



<p>Now you can access it from another file (e.g. main.py file located in the same directory as the package):</p>



<div class="wp-block-kevinbatdorf-code-block-pro" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:block;padding:16px 0 0 16px;margin-bottom:-1px;width:100%;text-align:left;background-color:#2e3440ff"><svg xmlns="http://www.w3.org/2000/svg" width="54" height="14" viewBox="0 0 54 14"><g fill="none" fill-rule="evenodd" transform="translate(1 1)"><circle cx="6" cy="6" r="6" fill="#FF5F56" stroke="#E0443E" stroke-width=".5"></circle><circle cx="26" cy="6" r="6" fill="#FFBD2E" stroke="#DEA123" stroke-width=".5"></circle><circle cx="46" cy="6" r="6" fill="#27C93F" stroke="#1AAB29" stroke-width=".5"></circle></g></svg></span><span role="button" tabindex="0" data-code="# main.py

from your_package import package_variable

# Using the package-level variable
print(f&quot;The value of the package variable is: {package_variable}&quot;)" style="color:#d8dee9ff;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path></svg></span><pre class="shiki nord" style="background-color: #2e3440ff" tabindex="0"><code><span class="line"><span style="color: #616E88"># main.py</span></span>
<span class="line"></span>
<span class="line"><span style="color: #81A1C1">from</span><span style="color: #D8DEE9FF"> your_package </span><span style="color: #81A1C1">import</span><span style="color: #D8DEE9FF"> package_variable</span></span>
<span class="line"></span>
<span class="line"><span style="color: #616E88"># Using the package-level variable</span></span>
<span class="line"><span style="color: #88C0D0">print</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">f</span><span style="color: #A3BE8C">&quot;The value of the package variable is: </span><span style="color: #EBCB8B">{</span><span style="color: #D8DEE9FF">package_variable</span><span style="color: #EBCB8B">}</span><span style="color: #A3BE8C">&quot;</span><span style="color: #ECEFF4">)</span></span></code></pre></div>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<hr>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<h3 class="wp-block-heading">2. Improving Readability of Imports</h3>



<p>Now, let&#8217;s talk about improving the way you import modules. In the <code>__init__.py</code> file, you can tidy up your imports, making them more concise. In <code>main.py</code>, you can then directly access functions from these modules without specifying the module, creating a cleaner and more readable code structure.</p>



<div class="wp-block-kevinbatdorf-code-block-pro" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:block;padding:16px 0 0 16px;margin-bottom:-1px;width:100%;text-align:left;background-color:#2e3440ff"><svg xmlns="http://www.w3.org/2000/svg" width="54" height="14" viewBox="0 0 54 14"><g fill="none" fill-rule="evenodd" transform="translate(1 1)"><circle cx="6" cy="6" r="6" fill="#FF5F56" stroke="#E0443E" stroke-width=".5"></circle><circle cx="26" cy="6" r="6" fill="#FFBD2E" stroke="#DEA123" stroke-width=".5"></circle><circle cx="46" cy="6" r="6" fill="#27C93F" stroke="#1AAB29" stroke-width=".5"></circle></g></svg></span><span role="button" tabindex="0" data-code="# __init__.py

# Importing modules for easier access
from .module1 import function1
from .module2 import function2" style="color:#d8dee9ff;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path></svg></span><pre class="shiki nord" style="background-color: #2e3440ff" tabindex="0"><code><span class="line"><span style="color: #616E88"># __init__.py</span></span>
<span class="line"></span>
<span class="line"><span style="color: #616E88"># Importing modules for easier access</span></span>
<span class="line"><span style="color: #81A1C1">from</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">module1 </span><span style="color: #81A1C1">import</span><span style="color: #D8DEE9FF"> function1</span></span>
<span class="line"><span style="color: #81A1C1">from</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">module2 </span><span style="color: #81A1C1">import</span><span style="color: #D8DEE9FF"> function2</span></span></code></pre></div>



<p>Now you can directly import these functions:</p>



<div class="wp-block-kevinbatdorf-code-block-pro" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:block;padding:16px 0 0 16px;margin-bottom:-1px;width:100%;text-align:left;background-color:#2e3440ff"><svg xmlns="http://www.w3.org/2000/svg" width="54" height="14" viewBox="0 0 54 14"><g fill="none" fill-rule="evenodd" transform="translate(1 1)"><circle cx="6" cy="6" r="6" fill="#FF5F56" stroke="#E0443E" stroke-width=".5"></circle><circle cx="26" cy="6" r="6" fill="#FFBD2E" stroke="#DEA123" stroke-width=".5"></circle><circle cx="46" cy="6" r="6" fill="#27C93F" stroke="#1AAB29" stroke-width=".5"></circle></g></svg></span><span role="button" tabindex="0" data-code="# main.py

from your_package import function1, function2

# Using the functions from the modules
function1()
function2()" style="color:#d8dee9ff;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path></svg></span><pre class="shiki nord" style="background-color: #2e3440ff" tabindex="0"><code><span class="line"><span style="color: #616E88"># main.py</span></span>
<span class="line"></span>
<span class="line"><span style="color: #81A1C1">from</span><span style="color: #D8DEE9FF"> your_package </span><span style="color: #81A1C1">import</span><span style="color: #D8DEE9FF"> function1</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> function2</span></span>
<span class="line"></span>
<span class="line"><span style="color: #616E88"># Using the functions from the modules</span></span>
<span class="line"><span style="color: #88C0D0">function1</span><span style="color: #ECEFF4">()</span></span>
<span class="line"><span style="color: #88C0D0">function2</span><span style="color: #ECEFF4">()</span></span></code></pre></div>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<hr>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<h3 class="wp-block-heading">3. Executing Custom Code on Package Import</h3>



<p>Sometimes, you may want to execute specific code when your package is imported. The <code>__init__.py</code> file provides the perfect spot for such initialization code. </p>



<div class="wp-block-kevinbatdorf-code-block-pro" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:block;padding:16px 0 0 16px;margin-bottom:-1px;width:100%;text-align:left;background-color:#2e3440ff"><svg xmlns="http://www.w3.org/2000/svg" width="54" height="14" viewBox="0 0 54 14"><g fill="none" fill-rule="evenodd" transform="translate(1 1)"><circle cx="6" cy="6" r="6" fill="#FF5F56" stroke="#E0443E" stroke-width=".5"></circle><circle cx="26" cy="6" r="6" fill="#FFBD2E" stroke="#DEA123" stroke-width=".5"></circle><circle cx="46" cy="6" r="6" fill="#27C93F" stroke="#1AAB29" stroke-width=".5"></circle></g></svg></span><span role="button" tabindex="0" data-code="# __init__.py

# Code to execute on package import
print(&quot;This will be executed when the package is imported.&quot;)" style="color:#d8dee9ff;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path></svg></span><pre class="shiki nord" style="background-color: #2e3440ff" tabindex="0"><code><span class="line"><span style="color: #616E88"># __init__.py</span></span>
<span class="line"></span>
<span class="line"><span style="color: #616E88"># Code to execute on package import</span></span>
<span class="line"><span style="color: #88C0D0">print</span><span style="color: #ECEFF4">(</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">This will be executed when the package is imported.</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">)</span></span></code></pre></div>



<p>In <code>main.py</code>, simply importing a function from your package will trigger this code, offering a seamless way to set things up.</p>



<div class="wp-block-kevinbatdorf-code-block-pro" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:block;padding:16px 0 0 16px;margin-bottom:-1px;width:100%;text-align:left;background-color:#2e3440ff"><svg xmlns="http://www.w3.org/2000/svg" width="54" height="14" viewBox="0 0 54 14"><g fill="none" fill-rule="evenodd" transform="translate(1 1)"><circle cx="6" cy="6" r="6" fill="#FF5F56" stroke="#E0443E" stroke-width=".5"></circle><circle cx="26" cy="6" r="6" fill="#FFBD2E" stroke="#DEA123" stroke-width=".5"></circle><circle cx="46" cy="6" r="6" fill="#27C93F" stroke="#1AAB29" stroke-width=".5"></circle></g></svg></span><span role="button" tabindex="0" data-code="# main.py

from your_package import function1

# Importing a function triggers the code in __init__.py" style="color:#d8dee9ff;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path></svg></span><pre class="shiki nord" style="background-color: #2e3440ff" tabindex="0"><code><span class="line"><span style="color: #616E88"># main.py</span></span>
<span class="line"></span>
<span class="line"><span style="color: #81A1C1">from</span><span style="color: #D8DEE9FF"> your_package </span><span style="color: #81A1C1">import</span><span style="color: #D8DEE9FF"> function1</span></span>
<span class="line"></span>
<span class="line"><span style="color: #616E88"># Importing a function triggers the code in __init__.py</span></span></code></pre></div>



<p>Output (after running main.py)</p>



<pre class="wp-block-code"><code>This will be executed when the package is imported.
</code></pre>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<hr>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<h3 class="wp-block-heading">4. Package Initialization with <code>__all__</code></h3>



<p>When you want to control which modules get imported when using the <code>from your_package import *</code> syntax, you can use the <code>__all__</code> variable in your <code>__init__.py</code> file. This variable takes a list of modules you wish to be available for import. This is useful in cases where you wish some modules to only be available internally (within the package). </p>



<div class="wp-block-kevinbatdorf-code-block-pro" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:block;padding:16px 0 0 16px;margin-bottom:-1px;width:100%;text-align:left;background-color:#2e3440ff"><svg xmlns="http://www.w3.org/2000/svg" width="54" height="14" viewBox="0 0 54 14"><g fill="none" fill-rule="evenodd" transform="translate(1 1)"><circle cx="6" cy="6" r="6" fill="#FF5F56" stroke="#E0443E" stroke-width=".5"></circle><circle cx="26" cy="6" r="6" fill="#FFBD2E" stroke="#DEA123" stroke-width=".5"></circle><circle cx="46" cy="6" r="6" fill="#27C93F" stroke="#1AAB29" stroke-width=".5"></circle></g></svg></span><span role="button" tabindex="0" data-code="# __init__.py

__all__ = ['module1', 'module2']" style="color:#d8dee9ff;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path></svg></span><pre class="shiki nord" style="background-color: #2e3440ff" tabindex="0"><code><span class="line"><span style="color: #616E88"># __init__.py</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D8DEE9FF">__all__ </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">[</span><span style="color: #ECEFF4">&#39;</span><span style="color: #A3BE8C">module1</span><span style="color: #ECEFF4">&#39;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&#39;</span><span style="color: #A3BE8C">module2</span><span style="color: #ECEFF4">&#39;</span><span style="color: #ECEFF4">]</span></span></code></pre></div>



<p>In <code>main.py</code>, you can then import all the specified modules easily using the <code>*</code> syntax:</p>



<div class="wp-block-kevinbatdorf-code-block-pro" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:block;padding:16px 0 0 16px;margin-bottom:-1px;width:100%;text-align:left;background-color:#2e3440ff"><svg xmlns="http://www.w3.org/2000/svg" width="54" height="14" viewBox="0 0 54 14"><g fill="none" fill-rule="evenodd" transform="translate(1 1)"><circle cx="6" cy="6" r="6" fill="#FF5F56" stroke="#E0443E" stroke-width=".5"></circle><circle cx="26" cy="6" r="6" fill="#FFBD2E" stroke="#DEA123" stroke-width=".5"></circle><circle cx="46" cy="6" r="6" fill="#27C93F" stroke="#1AAB29" stroke-width=".5"></circle></g></svg></span><span role="button" tabindex="0" data-code="# main.py

from your_package import *

# Using functions from module1 and module2
function1()
function2()" style="color:#d8dee9ff;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path></svg></span><pre class="shiki nord" style="background-color: #2e3440ff" tabindex="0"><code><span class="line"><span style="color: #616E88"># main.py</span></span>
<span class="line"></span>
<span class="line"><span style="color: #81A1C1">from</span><span style="color: #D8DEE9FF"> your_package </span><span style="color: #81A1C1">import</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">*</span></span>
<span class="line"></span>
<span class="line"><span style="color: #616E88"># Using functions from module1 and module2</span></span>
<span class="line"><span style="color: #88C0D0">function1</span><span style="color: #ECEFF4">()</span></span>
<span class="line"><span style="color: #88C0D0">function2</span><span style="color: #ECEFF4">()</span></span></code></pre></div>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<hr>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<h3 class="wp-block-heading">5. Dynamic Importing</h3>



<p>Implement dynamic importing based on certain conditions or configurations. This can be useful for selectively importing modules or functions based on runtime conditions. This feature would be useful in scenarios such as cross-compatibility between platforms, or version differences (old python versions) requiring backward compatibility. </p>



<div class="wp-block-kevinbatdorf-code-block-pro" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:block;padding:16px 0 0 16px;margin-bottom:-1px;width:100%;text-align:left;background-color:#2e3440ff"><svg xmlns="http://www.w3.org/2000/svg" width="54" height="14" viewBox="0 0 54 14"><g fill="none" fill-rule="evenodd" transform="translate(1 1)"><circle cx="6" cy="6" r="6" fill="#FF5F56" stroke="#E0443E" stroke-width=".5"></circle><circle cx="26" cy="6" r="6" fill="#FFBD2E" stroke="#DEA123" stroke-width=".5"></circle><circle cx="46" cy="6" r="6" fill="#27C93F" stroke="#1AAB29" stroke-width=".5"></circle></g></svg></span><span role="button" tabindex="0" data-code="# __init__.py

# Dynamic importing based on a configuration
if CONFIGURATION == 'A':
    from .module_a import *
elif CONFIGURATION == 'B':
    from .module_b import *
else:
    raise ImportError(&quot;Invalid configuration&quot;)" style="color:#d8dee9ff;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path></svg></span><pre class="shiki nord" style="background-color: #2e3440ff" tabindex="0"><code><span class="line"><span style="color: #616E88"># __init__.py</span></span>
<span class="line"></span>
<span class="line"><span style="color: #616E88"># Dynamic importing based on a configuration</span></span>
<span class="line"><span style="color: #81A1C1">if</span><span style="color: #D8DEE9FF"> CONFIGURATION </span><span style="color: #81A1C1">==</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&#39;</span><span style="color: #A3BE8C">A</span><span style="color: #ECEFF4">&#39;</span><span style="color: #ECEFF4">:</span></span>
<span class="line"><span style="color: #D8DEE9FF">    </span><span style="color: #81A1C1">from</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">module_a </span><span style="color: #81A1C1">import</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">*</span></span>
<span class="line"><span style="color: #81A1C1">elif</span><span style="color: #D8DEE9FF"> CONFIGURATION </span><span style="color: #81A1C1">==</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&#39;</span><span style="color: #A3BE8C">B</span><span style="color: #ECEFF4">&#39;</span><span style="color: #ECEFF4">:</span></span>
<span class="line"><span style="color: #D8DEE9FF">    </span><span style="color: #81A1C1">from</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">module_b </span><span style="color: #81A1C1">import</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">*</span></span>
<span class="line"><span style="color: #81A1C1">else</span><span style="color: #ECEFF4">:</span></span>
<span class="line"><span style="color: #D8DEE9FF">    </span><span style="color: #81A1C1">raise</span><span style="color: #D8DEE9FF"> </span><span style="color: #8FBCBB">ImportError</span><span style="color: #ECEFF4">(</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">Invalid configuration</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">)</span></span></code></pre></div>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<hr>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<h3 class="wp-block-heading">6. Alias Module Imports</h3>



<p>Create aliases for modules or functions, making them more user-friendly or providing backward compatibility.</p>



<div class="wp-block-kevinbatdorf-code-block-pro" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:block;padding:16px 0 0 16px;margin-bottom:-1px;width:100%;text-align:left;background-color:#2e3440ff"><svg xmlns="http://www.w3.org/2000/svg" width="54" height="14" viewBox="0 0 54 14"><g fill="none" fill-rule="evenodd" transform="translate(1 1)"><circle cx="6" cy="6" r="6" fill="#FF5F56" stroke="#E0443E" stroke-width=".5"></circle><circle cx="26" cy="6" r="6" fill="#FFBD2E" stroke="#DEA123" stroke-width=".5"></circle><circle cx="46" cy="6" r="6" fill="#27C93F" stroke="#1AAB29" stroke-width=".5"></circle></g></svg></span><span role="button" tabindex="0" data-code="# __init__.py

from . import module1 as m1
from . import module2 as m2" style="color:#d8dee9ff;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path></svg></span><pre class="shiki nord" style="background-color: #2e3440ff" tabindex="0"><code><span class="line"><span style="color: #616E88"># __init__.py</span></span>
<span class="line"></span>
<span class="line"><span style="color: #81A1C1">from</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">import</span><span style="color: #D8DEE9FF"> module1 </span><span style="color: #81A1C1">as</span><span style="color: #D8DEE9FF"> m1</span></span>
<span class="line"><span style="color: #81A1C1">from</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">import</span><span style="color: #D8DEE9FF"> module2 </span><span style="color: #81A1C1">as</span><span style="color: #D8DEE9FF"> m2</span></span></code></pre></div>



<p>We can now import it from the main file as the following:</p>



<div class="wp-block-kevinbatdorf-code-block-pro" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:block;padding:16px 0 0 16px;margin-bottom:-1px;width:100%;text-align:left;background-color:#2e3440ff"><svg xmlns="http://www.w3.org/2000/svg" width="54" height="14" viewBox="0 0 54 14"><g fill="none" fill-rule="evenodd" transform="translate(1 1)"><circle cx="6" cy="6" r="6" fill="#FF5F56" stroke="#E0443E" stroke-width=".5"></circle><circle cx="26" cy="6" r="6" fill="#FFBD2E" stroke="#DEA123" stroke-width=".5"></circle><circle cx="46" cy="6" r="6" fill="#27C93F" stroke="#1AAB29" stroke-width=".5"></circle></g></svg></span><span role="button" tabindex="0" data-code="# main.py

from your_package import *

# Using functions from module1 and module2
function1()
function2()" style="color:#d8dee9ff;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path></svg></span><pre class="shiki nord" style="background-color: #2e3440ff" tabindex="0"><code><span class="line"><span style="color: #616E88"># main.py</span></span>
<span class="line"></span>
<span class="line"><span style="color: #81A1C1">from</span><span style="color: #D8DEE9FF"> your_package </span><span style="color: #81A1C1">import</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">*</span></span>
<span class="line"></span>
<span class="line"><span style="color: #616E88"># Using functions from module1 and module2</span></span>
<span class="line"><span style="color: #88C0D0">function1</span><span style="color: #ECEFF4">()</span></span>
<span class="line"><span style="color: #88C0D0">function2</span><span style="color: #ECEFF4">()</span></span></code></pre></div>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<hr>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<h3 class="wp-block-heading">7. Initializing External Libraries</h3>



<p>Initialize and configure external libraries or dependencies when the package is imported. This helps encapsulate setup tasks and ensures they are executed consistently.</p>



<div class="wp-block-kevinbatdorf-code-block-pro" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:block;padding:16px 0 0 16px;margin-bottom:-1px;width:100%;text-align:left;background-color:#2e3440ff"><svg xmlns="http://www.w3.org/2000/svg" width="54" height="14" viewBox="0 0 54 14"><g fill="none" fill-rule="evenodd" transform="translate(1 1)"><circle cx="6" cy="6" r="6" fill="#FF5F56" stroke="#E0443E" stroke-width=".5"></circle><circle cx="26" cy="6" r="6" fill="#FFBD2E" stroke="#DEA123" stroke-width=".5"></circle><circle cx="46" cy="6" r="6" fill="#27C93F" stroke="#1AAB29" stroke-width=".5"></circle></g></svg></span><span role="button" tabindex="0" data-code="# __init__.py

# Initializing an external library
import external_library

external_library.setup()" style="color:#d8dee9ff;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path></svg></span><pre class="shiki nord" style="background-color: #2e3440ff" tabindex="0"><code><span class="line"><span style="color: #616E88"># __init__.py</span></span>
<span class="line"></span>
<span class="line"><span style="color: #616E88"># Initializing an external library</span></span>
<span class="line"><span style="color: #81A1C1">import</span><span style="color: #D8DEE9FF"> external_library</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D8DEE9FF">external_library</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">setup</span><span style="color: #ECEFF4">()</span></span></code></pre></div>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<hr>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<h2 class="wp-block-heading">Conclusion</h2>



<p>This marks the end of the &#8220;<em><strong>Python __init__.py &#8211; Best Practices and Customizations</strong></em>&#8221; Tutorial. Any suggestions or contributions for CodersLegacy are more than welcome. Questions regarding the tutorial content can be asked in the comments section below.</p>
<p>The post <a href="https://coderslegacy.com/python-init-py-best-practices/">Python __init__.py &#8211; Best Practices and Customizations</a> appeared first on <a href="https://coderslegacy.com">CodersLegacy</a>.</p>]]></description>
                <pubDate>Mon, 11 Dec 2023 17:50:04 +0200</pubDate>
                <guid isPermaLink="false">https://api.follow.it/track-rss-story-click/v3/Pni2oPawGk3K0p8sewtDOuGrEXdXG_66</guid>
            </item>
            </channel>
</rss>
